{"_id":"@strapi/pack-up","_rev":"313-144a248da893b5b7e7a24dc90ad10c49","name":"@strapi/pack-up","description":"Simple tools for creating interoperable CJS & ESM packages.","dist-tags":{"beta":"5.0.0-beta.3","latest":"5.0.0","next":"0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892","experimental":"0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba","alpha":"5.0.1-alpha.1"},"versions":{"4.15.0-alpha.0":{"name":"@strapi/pack-up","version":"4.15.0-alpha.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.0-alpha.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8c1250a831816d7f427aa5f83117d33585926707","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.0-alpha.0.tgz","fileCount":4,"integrity":"sha512-R/BTszGEO3rtAhLXXP7KPtqKqYzrNK/Zr/Vbs0mWoYS4xfsZfM6oNwyMKcOCLFIEVQ8+KpGY9WnREtsrkOb3hQ==","signatures":[{"sig":"MEYCIQCS9xRH5ygx/Kaq4bEZVbxXwrII8cODPDcuBkbikwLRfgIhAP75A4e3TMdPdprc/ZCsVueXTHnWwQoxouSD45Bak1wb","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":6294},"engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"682a070df9ef90f2aa6966666488e066d61831e2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"9.8.1","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.18.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.0.4","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.0-alpha.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.0-alpha.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.0-alpha.0_1696257183882_0.8016494300426502","host":"s3://npm-registry-packages"}},"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"971e799e3978d3681d8ea0e0b1e6e54c1824e3fa","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b.tgz","fileCount":4,"integrity":"sha512-3oU1JBRKJycyv1xcnSHnbVHZfGB9/yTdd/AajuPVhIQ7MEOCWE2aBwNHbszT4w+gNWGHbXEy2QqKwBRoWmCXtQ==","signatures":[{"sig":"MEYCIQDNSYYC1QQaFl0xV4SmtQEvl9abndaikKcqjFZvNFujawIhAI/1MANHb7K5YwOp2aevDmqtGOn1fKP9FCeyTkxfGBCE","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":8100},"readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"027d23730e6b4844b73607bb46f9bb6dc53ce51b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.0.4","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b_1696262871220_0.03664593639365066","host":"s3://npm-registry-packages"}},"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8b46fe9c7970ac79aee40e4c5ed4d24a3e09a7ec","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f.tgz","fileCount":68,"integrity":"sha512-bwB9tj/J4E4D2FJRs4OFGsuZmHXs3Fmsmw800jyDo13x2gEqVG3YvTtqhbC5G14l9yTvbnybpUcyP18mubXT/w==","signatures":[{"sig":"MEUCIQCSfx5hy7j8MVYdEiH6QhKOXv5xmZLc0xBFbXy63YH78gIgTznBVrTY/YUuk6uNOyftLHUejvDslZHbwXCXxUEpkYY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2229486},"readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\n\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  // the path to the tsconfig file for distributed builds\n  tsconfig: 'tsconfig.dist.json',\n});\n```\n","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6ddbb39543614cabc7a171ff27a1477e929e4c8f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.0.4","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f_1696264136510_0.74411374176937","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0d7db7e0a4c9171495aef2fc6556df613b08f0df","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d.tgz","fileCount":68,"integrity":"sha512-sZV/DZQ8JszqivgcLfJUWNjBiuBxQhVyuMTVdJDXMravDZTWHtI0Ik4Z/C4bkJVqRqc4KwOBpE8gh1VAYCUWQQ==","signatures":[{"sig":"MEUCIFovZZG9u4AzOOJrKjk/xENk2bTt9wRFhrYvsn6qRr7BAiEAxmWyI1vHNgyFKAeR+/JXxEhDrLgD66ptwOOkfG3wP94=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2232291},"readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.0.4","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d_1696342165413_0.7346972347312677","host":"s3://npm-registry-packages"}},"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c":{"name":"@strapi/pack-up","version":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bdddcc84175a14d23214555abe3201503648fcb4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c.tgz","fileCount":68,"integrity":"sha512-0cxEvfvIX1fjFaWMIXS6iSkLXqY7YMH8y0kHJgZK5BrKBhdAIqMphizT0Dem1rswXPDyAx7k65ghzQkjFtmUEQ==","signatures":[{"sig":"MEUCIC6p9OKgRTGpHLXs5yEKMx3J4zvCl3MBYtPlG6rOkwaxAiEAvNpXBMlyyFnpVoxRiMfMvUFvOchrjapWDqLskz9DXVY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2253873},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.0.4","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c_1696638338025_0.9122346207079375","host":"s3://npm-registry-packages"}},"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a":{"name":"@strapi/pack-up","version":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d8c92398ea3d6dc059e3b72f886f2ce174810218","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a.tgz","fileCount":68,"integrity":"sha512-lm4HoJ4K3Qrp47q5tYeDD/BdCC4HjoydI+nKpmAGmqvRoUNgjbGczub3/HIckfkqOayRegP2ZcB0ckIqTGW4yg==","signatures":[{"sig":"MEYCIQCu+1/UwuBW22TSVFOIDAsm1t0QcMAvn9yuFQ2JhkBKCAIhALSGfS9uV5rJy4wM41/am6OAuEVfayDmx2xxckVlHkLA","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2253873},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a_1696897494760_0.5521517686708737","host":"s3://npm-registry-packages"}},"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fa4ad066fe1a58c5ea5ee6780d90c711bc864eae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e.tgz","fileCount":68,"integrity":"sha512-7OPmJbWD5P7RomN1l6j8pxWnImXykxhowH0/lnVnOMfMY8Ih8hHtgJNNoSCll/wziD5JHqsmRP825v/YiOIa2w==","signatures":[{"sig":"MEUCIQDHkcD4bLysrQ2sa1teQKs/uPo0OnEEigBRORkD+hjQSAIgBD4NgSYm7ssjrZw0K0wh81xR4HOBre4zYjzMpwh7Rfw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2253905},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"170476e0e602f59266b9b363e3436a0ef1ff9d3e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e_1696931380531_0.504107446992673","host":"s3://npm-registry-packages"}},"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3":{"name":"@strapi/pack-up","version":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"51bec512e41b1626eb115f99427fa1dafdd0241d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3.tgz","fileCount":102,"integrity":"sha512-pOS5r997/5RYah4Z8sgYYQ4NNqV9/n9LCfD3k2tI6xtp0RNgrXZLrXwK+Qgu3PkjRUZvlUlFa5sarhSQmuS7KA==","signatures":[{"sig":"MEYCIQDNMNgRn3SbY5Atpnzgc3cm51AKTZalDKMM89OdFZvRrgIhAJzzfqpkBtla/oMOkUuNjMI0qCOgzXrCMRlcLLwsjxpm","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2275013},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3_1696983889183_0.48118581048715914","host":"s3://npm-registry-packages"}},"4.14.4":{"name":"@strapi/pack-up","version":"4.14.4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.14.4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"49cb8a74cec9c07f462da5901a1a9d19f1eb8e86","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.4.tgz","fileCount":68,"integrity":"sha512-HfWs1giUM7iK/OrdI2f1TpipttqZsx6V398xdotmjaNj3otZ88gex/AgUPPrH7fjrI+75EuNqa45yTVklN9/6A==","signatures":[{"sig":"MEQCIH+L1os/ZpUXfNwCybDfTPKasNTdMIXguLmXb4qC5K4qAiAuIYSCo+bQ/M0dTGoSUOLxtWQVe481F/QlSz4Kw2PYTg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":2253693},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fbd6e3e3014b1c5eee1d7bb8d65e273318662656","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.17.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.17.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.14.4","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.14.4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.14.4_1697027607728_0.5657739778601945","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"19ecd11a6dd1cac7c1a42f80d7bc3abdb0a8008d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31.tgz","fileCount":102,"integrity":"sha512-vr2vnpG9zK7k8HFPuCZw/8T0rjogj+3RXBEKXAuX3nltcE1n1v2y46c1gU/XctIPrWwbFmOa+3BOed2pwad1yA==","signatures":[{"sig":"MEUCIFvK8TTSuL9FC6GRKljEkvOgr1HtYsg3vxe6loRyu7q+AiEAheOVX7LOLGhrXqEv8/IFuw4NhNa6wd6JDO2u+gwk68k=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":697612},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d584536ba41ac87f684bc2b64965d6493a07fb31","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31_1697208623063_0.21816183352083396","host":"s3://npm-registry-packages"}},"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7":{"name":"@strapi/pack-up","version":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"j.laurie6993@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"48e1990048ccb71687a5a4d80f1b7a711baa0c18","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7.tgz","fileCount":102,"integrity":"sha512-XmYLBgpzyGMkOtnmnAExVGHfseknnhSjk49hgxav6vOs6dN6SQCY9koOWCiUD6FmMceg3io1SFOgdaaMW99+cw==","signatures":[{"sig":"MEQCICaM8BkZvNN+D75pWfbT8QMZoPeI7aJAgWNDWY4INyAqAiAOi/FZeVhd/Z5BgLZTIXsAJYJ+AqnlXMzrOEfjDmz1wQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":697580},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8632eeaf18063ea063b9acc1b2771460123d84a7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7_1697243164076_0.3179061043591336","host":"s3://npm-registry-packages"}},"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":{"name":"@strapi/pack-up","version":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a79289f883ce25b6e9b5692000fa4907a168066b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f.tgz","fileCount":102,"integrity":"sha512-nNnnT5syp8hzMlc/jMsNJd9L6lf0Xiv2f6U3UZxHfd34tfyIySTyBcAcSaYUn/+jGwicyVkZiWiWG8nxwGawPg==","signatures":[{"sig":"MEYCIQCzk65P4YLAj7L4szDUPRHxSI9z1T9xj4Bt0rQXdKuE9QIhAO36f2Cq2wRXttUQa0lenLPPWoS8B8G3J3QGHf2+Sl6m","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712737},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f_1697502337751_0.22389593543093267","host":"s3://npm-registry-packages"}},"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f841256176a1933e7c6da8125d9229e5549444f9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f.tgz","fileCount":102,"integrity":"sha512-yMdyHr82k6wzx/0FCrvn7ifRbddH0ecn0LZC/qvdlkMKXGpEMblKqCe0pv99s5O6FYnDrWofKDCNWglnUFx6PQ==","signatures":[{"sig":"MEYCIQDAaZNukdTXXJnSlh4yC57jFJoVI8WWyFJiUta8o/EMOAIhAOjZuOLRvAe0CMPtCzpTLZ8C/2TSsPauThl8wt2PxhS0","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712769},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f_1697637083823_0.5744631843518531","host":"s3://npm-registry-packages"}},"4.14.5":{"name":"@strapi/pack-up","version":"4.14.5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.14.5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a726aad9a3a25ccc926baf89079e3c146a3695d9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.5.tgz","fileCount":102,"integrity":"sha512-AflBpVyPgyzWA/g02dkrkcMg8Aaz88CAO6M/Q84nn3c8aBUK6oBVwccnMLFgs67jHpaOtJlaGlOlUZWi8vXF1A==","signatures":[{"sig":"MEQCIEsqjWEPM42GJauwpvuqetL83OxL+TJ9HtBmoGlehW4yAiAlxNpysqKfw7QD6tl2Wbitj+uqtKoWj3IL7GEHTBHROA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712557},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a0400e4a0f47f8169b7ce31bc9087470c291209c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.14.5","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.14.5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.14.5_1697641443146_0.4496765008076413","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"02a1976a73f86ffb8d36b6565d2e7078250a61bb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d.tgz","fileCount":102,"integrity":"sha512-iFEarxUXi9vLov26bb30K5seYoo/+MeQFqWQiSlUkZYW95an7dCrjW357G7O0XwC2jBifGzIrjlgxJJbVXKrjQ==","signatures":[{"sig":"MEUCIQDpSgDjbh05JIZlOySDY3qq3JZvvkdxOnGS+AAs8BwykQIgPdw/tGDKqt8/O+FMmq/o5nvoDAo/KPftso5QMbrxR/4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712769},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d_1698221341381_0.7808566629754365","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"28c5bd08215b40750ab86e217a34e44088a4dbeb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7.tgz","fileCount":102,"integrity":"sha512-ays6HCOif0fvk0ah/ssRiqL8XtIutahCrrSwWBYzO1f8vTGdcVrK2Ancm5MGngbLHN0yJUwRKS7znweH4FLVVg==","signatures":[{"sig":"MEUCIGjl5KvhNCNOa64Lo/IKJD6a0zvIBGt8gI/SZBUjXccLAiEAld0UAodK/o/WTV9hH9d6ZIxPGdKQnLcDXiSH6+1HCeY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":711882},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1c15eeb66faa7fdb8d65baadc20d933045909aa7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7_1698238088440_0.07853539611982407","host":"s3://npm-registry-packages"}},"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8d32e72a79f4a9e24c7d81324e8d843ed684d3e3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8.tgz","fileCount":102,"integrity":"sha512-U4lWwWu7Yd2xkoLE7uzNrAzPfUFvhy1FAbh3dAyEmF6Auj7ZWAHZDg7J1adCBoh772KKXMieh+rSz158ef6c2A==","signatures":[{"sig":"MEUCIAL9pbRATWaLfnjZQRRCuQpLg6+Pys7Lldh99uTbXgU/AiEA3m7uMYeY+qfiRzMegASS4Xlui1KvgQgwi21UIOsLLCI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":711882},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6c317e275a2e8133090c4b8b90bba9bc85be72f8","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8_1698239072898_0.08243119246155106","host":"s3://npm-registry-packages"}},"4.15.0":{"name":"@strapi/pack-up","version":"4.15.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3f1cb2896b3b6165f59bff4d281d24ff4639eca4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.0.tgz","fileCount":102,"integrity":"sha512-GZkCokuukwoC6BMA5u51aYrekx5aJ4QqD2UJk7lnRzTr2SeNlBfdy8JBjHLoIs1UQttt9L9/kcgO+ravsPRBfw==","signatures":[{"sig":"MEYCIQDvJQBfH7ftsucV9DAXfAjq/IgbzMBhPB4p6vDIt1zNoAIhAK43XC9GqYwKuFYqvvHhf2Kq5FXyMCv+LwMHTYfTG9a1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":711670},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6e44e1e68db5153e485e61bdc03f42efb0311406","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.18.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.0_1698239299074_0.9183846547504741","host":"s3://npm-registry-packages"}},"0.0.0-experimental.check-license":{"name":"@strapi/pack-up","version":"0.0.0-experimental.check-license","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.check-license","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"571c2b2bc890aa632f99ca3b1e0b4ab47b1562f2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.check-license.tgz","fileCount":102,"integrity":"sha512-x7DLfm1CWQLV7xxGUm4rgwxh7RThdrcCg68ibRaN+jQHx7J5aRObNTPGDDkt+CbrgFMBT2eEBlFRVn+7Ju6PFw==","signatures":[{"sig":"MEUCIQDLt5fRDXoCRJdYzWDCLfPO1fmxOsQRSJD7gN/h/5QUQAIgJfH6j8CtEkW7J5eW4MT9KXDZvxDUJ291ut7fVfxhfFQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":711774},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6c317e275a2e8133090c4b8b90bba9bc85be72f8","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.check-license","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.check-license"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.check-license_1698240298747_0.6378038008312013","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"9503d4b6d97ad9f972f9ab833a70544dd46539ad","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52.tgz","fileCount":102,"integrity":"sha512-KV/Sc21rBwtN5J7zBBvW7LKKOSIFYmcuU4OgeKfqGBR7GAIyYYhSmfpXlZE/H0pgoQ2u5Qd+Y3vbP/eVXtHu8Q==","signatures":[{"sig":"MEYCIQDgd+ewsnbhQni7j9bOyrIkjfATXMwu1Krfpxtd2Zh3jQIhAKOgLJqhE1YXrAh8lb7rsRUPkpG52AFTGwJAynl6DXCk","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d143dd949cf236a2d7b575c5d9ef0cd551113e52","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52_1698322053403_0.05995899591662601","host":"s3://npm-registry-packages"}},"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c6095904646fb644b6917781c071e207e1fffe03","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7.tgz","fileCount":102,"integrity":"sha512-WCxoOcUVAeqMcNBW1L4/smAinwLUJTXzi3Hcn4R7qwD/CY4BKb1zh45kGuBZ+qIvE/AgL3LM48ja9FJirXqJ2g==","signatures":[{"sig":"MEUCIQDvw/YMvFc5Gpe7jjohcaWWd22l/Dj9hLdQXPwIt4+miwIgdgJOO2qdSuc99Ndq5nrhm6JsItkqrWYdH8DE3nq9JTw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713223},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0f4e7e399dec329437f52b0d6ba8f686341ac8d7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7_1698329260983_0.9555103713291073","host":"s3://npm-registry-packages"}},"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457":{"name":"@strapi/pack-up","version":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5f1324707a7b98ff05bb9450f687b96612119da8","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457.tgz","fileCount":102,"integrity":"sha512-lVyl6rdMyabfsM5nHxhqW4h1xhCiRIb2+qR8dL/saZ1YS85e2eDb8T+0gXTet0sCPmZdjVMa/f43LVJMdJzw3A==","signatures":[{"sig":"MEUCICFqeHJX7hqZkJ8Np6P+zbgHw50SEx4pXdXO6N6bSIxsAiEAhlknP4rBUX+Dgu3/vty/yqLhvvI5Hs322n42s0Wb4l0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"05b69f4d19809ae0788cd83d4bbbb93c63c5c457","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457_1698329972190_0.27992792700464486","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bffdaa5abd538020bd4d6326a82cd73d17115f3d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd.tgz","fileCount":102,"integrity":"sha512-srV+vee2pASQwn0h7XM17kA0bGDr6xeuxWwm4vyYAneMkogJnswABWlY9LzYDr9eVcasJbajErVExyZB/0vO6w==","signatures":[{"sig":"MEYCIQCGQp4JFkm6vfClAZYZhqmubb+mBHBR3ltP4KFAxA5+SwIhAJHT0ye4dA6NLP1Y9Lc9UtNAdnDbCZ/LkILiV9LDspwu","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd_1698331035743_0.8762946936801741","host":"s3://npm-registry-packages"}},"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f04c50fb7f3fd3ce14b836ef330dacf00fea2e48","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d.tgz","fileCount":102,"integrity":"sha512-7bYEYut6yktAB8fkq2aSdEjM2BJKOyfWT7VbZ0HlqGm/x7ZrHhT6wjLv3QLwf1+8qSR5BZYm6LAgPxOIP6SqNQ==","signatures":[{"sig":"MEUCIQDqiQH/uIpzRPXR/vzyxj5nShdhnoLD+iJ89hJyMGjmvwIgNQe0izoQ5Oc2FhYVBpc8Yuxhj+Am3ezi7bvaxkRpcOM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"88489423b2233ad024782b2052e6bc88d808bb5d","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.8.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.8.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d_1698337737502_0.44396479956601675","host":"s3://npm-registry-packages"}},"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646":{"name":"@strapi/pack-up","version":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7eaa2cb89bdb1a7f5ce549352d1e203b721980d3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646.tgz","fileCount":102,"integrity":"sha512-ipe0Ea6k366jZ11rxqvDBBYO2myN59ZJ4O+mO8prex7/G7u06ZFyUIAYFi6O6Zyp/iMi1UA9IZTGHtEiyrbB1Q==","signatures":[{"sig":"MEYCIQCaK1Y0Xfn449OIUcvdDAIRb9i4Y3Wy63K76BnrdUNGmAIhALofZNjzOGTCqap9+3376GrmBjc/4VE9Zasx6pE/XnJj","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713191},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6ee826075dca196ffe945bf784c77c2bcc63c646","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646_1698366261247_0.6993720046238867","host":"s3://npm-registry-packages"}},"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f5a370865ce4f1d37c2aeaf1f7f24d3320be6856","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8.tgz","fileCount":102,"integrity":"sha512-WwNBitn4qfxfVQyitamlMR+C1wDwPSKoFJiXErjA6rFdwWtNK0VcssHVJs+wX4F7OKhMNuKg5oY+0uwz5487iw==","signatures":[{"sig":"MEUCIQDi0w31XlKp+cWfilp9TjX+9qRT6xhdDVZSLrZvlLXHFwIgX9TH5BaJWiNyrz/8Af/WM+ImqdHJ+Fbw926LuyuaNEI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8_1698400822091_0.6582870621365446","host":"s3://npm-registry-packages"}},"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"62d31c543658d602551d17bab878e234c753eed6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2.tgz","fileCount":102,"integrity":"sha512-h+VC7xvHJJmdnL4LqcB5xTg73xyi4+vnmyC8DQvfwJXVlxnfhdHlCxzoaJ2oi2mZkKR2xOXP3lDwm1A7rIlGFw==","signatures":[{"sig":"MEUCIQDz7i/IIyEC6rzi/bFbqyEgMMAmh6w1twPwc0Kz7eBZ4QIgEmTJODY7g4lRQpOqGYskHImgzYhqEmRp5MFX2LleGCA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712769},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c594d39bd99186eab7f05bd9517adc6704d3b1a2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2_1698411829473_0.05876240692981893","host":"s3://npm-registry-packages"}},"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0":{"name":"@strapi/pack-up","version":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8f745bd8deb7de0004947ff06d4853275621efc9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0.tgz","fileCount":102,"integrity":"sha512-t6nnCiSBMx4GDsTvxspn6YSVhxpA+qiqyKCklmumN4BhsWS2fJbg7lpq5GZmsvqaAN1E9C9QJRcaoQMXojX7eQ==","signatures":[{"sig":"MEUCIB50IEiGcSjobhnjatOniF1SaqPuqCz14lWJfnrUhc/vAiEAkAZVnGPOaGPprIXqEMn5n3zLfPJIpmJ3rxzJbIXKO/c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713191},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c7c44a121f7abc0c52826a7d310fe4534b8727f0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0_1698452711565_0.18078964803476794","host":"s3://npm-registry-packages"}},"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"00b8ea2f1127c17a0a96f7ba4f013871e44a25d4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571.tgz","fileCount":102,"integrity":"sha512-OOBB/EU4shDd9/aRvrDnE9N+j7FTpqRzDD3KXAlci4akC+I3wE1Gvp1JI5sokXqXxWmA29l8f6S4SXQmknpWMQ==","signatures":[{"sig":"MEUCIDXtZnTC7VIFLG0AdCc8VbrUbGsU09pWMRWQz5Su25TxAiEAkH+QVlFZ0hH+b1ZbdOBSGOL0qscaL6jRdWpCrYgCSWw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7150c563ca52765213874a111c32237ef1fa8571","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571_1698700764983_0.5091718128615454","host":"s3://npm-registry-packages"}},"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571":{"name":"@strapi/pack-up","version":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c6c8aba54f0a846612345b43b7186035580d6ee4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571.tgz","fileCount":102,"integrity":"sha512-2U321jQc3PIUztJbhUTZn81ZM03VNa9PQhOKvzXxI49QzzrUVGrB+yzMU4BcS5xzTIQ1AaKSMGi6YFI2K52jYQ==","signatures":[{"sig":"MEYCIQDw5AHavbMiU0aSrdQ55QD0DUFBbu6cU7ZF+d2Y3x0C9gIhALROygL2L8eDdsBKvP8pYbWnt7QXO31v8YYtIrQwrxR3","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7150c563ca52765213874a111c32237ef1fa8571","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571_1698711912381_0.7137665883257689","host":"s3://npm-registry-packages"}},"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bdf5d8cda1de2fd7017feffc27c0aa6a1655703e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3.tgz","fileCount":102,"integrity":"sha512-LliUzJp0mj7Ir3GiKtayb0zgjO1UXpbxXiVXbx/UKvrhQMjLoS2BYdCZKy/ZAylwYOOAx6hkY4Bf9d09Zj71PQ==","signatures":[{"sig":"MEQCICYFF8J7eA2D01f1L71RZf/VpyICHJyG8Z4ibDOWj/rsAiAUWoO3uThJuNou8v9xQWTMXWzlUj977jUxtDBlhW1tiQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3_1698741115360_0.6244372464970831","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5d0c7d1406aeb8697b4e154e7f5f3bee68139237","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b.tgz","fileCount":102,"integrity":"sha512-3eqOwaJavJPgWcjMwzuskLPX6atrgeqJow3mC5Iu43Z2l1YQikwL5evRWL5rMyAvq9SusU/mkKv0tK0eKf0tgg==","signatures":[{"sig":"MEUCIQD4PGB9+49sfod79J0SIQzIUxnUroO9BV3GktSSl6FTfAIgFdPM4Y6cB8InDwy0SBLo+1HIMGuPkKcr7CSUVv5F8TQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3161a2be47fc451d966219be0af39f2274eaf50b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b_1698742218282_0.26488896272357554","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"524ac214a29aa50adb04733ff51bde9f4e340d30","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69.tgz","fileCount":102,"integrity":"sha512-/JhWB6qc+uSLnXGbUpPeo9qnzeKYxGPXqEQi+L8Q6kdQlei9AWKrg550hLwRZWrw1fNa/GcUdYO9W8LyCsimIg==","signatures":[{"sig":"MEUCIQDuVFylmMT/YLv9THqggkVvmDAUF39QBg9ikWDOGQeBVgIgfnsADsjgHWgBbSgkwOU8znqWc1/liFxg56nVQpzdKNE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b06a72a02d782efad2a22511763629f1e919fb69","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69_1698742433922_0.6483671323987772","host":"s3://npm-registry-packages"}},"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fb7a136164fcb6c2a175a1654db9f70b1093153b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a.tgz","fileCount":102,"integrity":"sha512-nVX8Kf5JlqMdlpZfyPIApiJTQDnOtgEVtBgmCjAYipuKG3uUAF7sKGUb7DktB0UsNj0iXtSddllJwsdaztMF+A==","signatures":[{"sig":"MEQCID7cSDWjg01wAtBtIAtSGQDHU7rFgJCkeWLPIhqXuaxLAiAa3gY1Jte8n3RqTslRO8H/JnHQjXeQjfPCIhw9b6Cq1Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9b513a848f62b2329748c692e15a460b63b48a4a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a_1698766660710_0.4086343118299993","host":"s3://npm-registry-packages"}},"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b637c030404de7eae2211eb236875c70eb66928a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3.tgz","fileCount":102,"integrity":"sha512-4/7/gqItWR7/jws8It4kW1FTZE7VMVh6rFmuVIHrVCDpCuFT/jn+eSHmQk7oJHY3k4ISZk8GwobIPTTbnPVU/Q==","signatures":[{"sig":"MEYCIQCrjVE9jBo/28wvmv+uuDb627J98lS8lFzXA+JxYpje7gIhAP8Y/Lr3gLtwapHWLOmNVv2EIv7eGG4A9jm0eQXcWx1M","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"56d93b4478ff454ccc95198a5b830d260c9033a3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3_1698769684968_0.5317988868215289","host":"s3://npm-registry-packages"}},"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a":{"name":"@strapi/pack-up","version":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1d6664100e9f938cbf12b845ad0fa1d8f99ea726","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a.tgz","fileCount":102,"integrity":"sha512-c4U44JqzUBmQxQYaH9wRFjK1Iug8GwnVrVIXGSsMsgUnHd+621kNO8Fmw54u753vR5xkteBrrN6alnfV9lQI4Q==","signatures":[{"sig":"MEYCIQDWBRddTy97Phe2/46a5ru3n5IBi3Ktjdl/HYfmngkkXwIhAOMwwjVZNHGAv6gUgpkcWEdw4l8cz9eIhpf8jCIKvhU2","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a_1698798418505_0.6844063631994508","host":"s3://npm-registry-packages"}},"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655":{"name":"@strapi/pack-up","version":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"efe3add729f50c8dd793ab927b590ff8e302ffb4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655.tgz","fileCount":102,"integrity":"sha512-J75T1mi+rH3o9LVZ4CeCjCIhu2YrJI4JRQUvUBzMO8Ab/rUyHbu9x27k+5fhlCFmCgd055p0yWk2007S0y7Z9Q==","signatures":[{"sig":"MEUCIHIxX9iijQJ+tWhHVHu3bfQjHe6Br2614099DQ/73Q1eAiEAw0xXC+Lq3VHwZZyOMm9zEn1ZUQgyW4r+bI3XRkLyQq4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"82d0e5b059e9729154be315253d1dd378a043655","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655_1698934500747_0.7613370073973229","host":"s3://npm-registry-packages"}},"4.15.1":{"name":"@strapi/pack-up","version":"4.15.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"cf03fbf7a0f969befba0fee33a73bd331819a535","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.1.tgz","fileCount":102,"integrity":"sha512-5eRxfhavqu/nYZMvOlIAT7UFYLYdyoW3kxtvxx+nRdI4du5KWahHlz9XPrBL8eWJIxeqe3+Cv2+Q5OziP7bkxw==","signatures":[{"sig":"MEQCIApU8PDfQnPtanQitt5BY+5Wp2V5jw5VlCfP63hzWnkjAiADgcjUJKZ/o6u6umA+CKzAx6xX+MFNfVV7Wuf96rAmfg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713237},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b6c085052f108fcfe47d22972a664dfa85aa0358","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"deprecated":"v4.15.1 contains critical bugs. Use previous or next versions instead","repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.1_1698935319726_0.36927659310329397","host":"s3://npm-registry-packages"}},"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52":{"name":"@strapi/pack-up","version":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1202148d2f0fc271ffdf2ade67c3149306cf621c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52.tgz","fileCount":102,"integrity":"sha512-rZr5d2YBzW429j9FcJLoFw+eEuxtdHc3ylcCKlB+Pczi9xUN08baOB+lHiB0ImdpywyNLDXtrwjAwmArfwGywA==","signatures":[{"sig":"MEUCIQDIBDHJskVmL1yA3K126vGlQNbHTh4vzWZSu9VMhb99hwIgHMQFw6JMdwcnuL92LREc/oCs/8iTD8Z0zWVfYhugk/g=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"361908b952e5ea663fee441dd163722ff6794d52","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52_1698940499549_0.6012513400425428","host":"s3://npm-registry-packages"}},"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd":{"name":"@strapi/pack-up","version":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e509276668f252300d3c0b5be19d0f9c1de39f1f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd.tgz","fileCount":102,"integrity":"sha512-xudimrtXXhcj7dBbWaYARSi+xzmLpdDctwwUdcRBK7mjo9yZh9JIjn7U3LGh2CQwYF5l6hgSCOeeGZTqqTHdxw==","signatures":[{"sig":"MEQCIF4zxI0PrgICB6JeEo3DX9O392JWb5m5gG4dPcwfNqnZAiBhN6E3/G7gXDqygE3gWslOaBoUjYrdhVQgHTuEIRXMDQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d482633e774699cc8d4e05531deaeb6001e791cd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd_1698970919602_0.8157385863437472","host":"s3://npm-registry-packages"}},"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8323d8d4e4083674b0f2521d486fce9e0b88334f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7.tgz","fileCount":102,"integrity":"sha512-VXB9wVb0o7hgkZ8tyPFM9jLr3qkYVXKm1OYi+Lc/D0TxiBsDeynf+8WYN2lmLyJpF+Ugh+usEud9wtSrcrvMmA==","signatures":[{"sig":"MEYCIQDf+bIIIEgK4XrKOT+uDu3/K5g39iOEPfAO/UOZftzmQgIhAIGj2wVoDxentK1QhmkWjNytdrxkiuwbQ3Qyl8HaAfnX","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7_1699003060128_0.36511009696913144","host":"s3://npm-registry-packages"}},"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888":{"name":"@strapi/pack-up","version":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e2d1ee2b9ea54717ba01692a8c28df4789a5f208","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888.tgz","fileCount":102,"integrity":"sha512-tXSU26Fnj3XKJD6u7CCKgSJsriVniWu+4lfqnyAYN4fXcpdPKO1j3HG5W3eTkeYryaZQ7c2zAx1JEwhC8TVeYA==","signatures":[{"sig":"MEUCIQD0dmyajAvn2eYoQQkaQW/7xNzbbWNtbWJ4PDnIETyubgIgdn0/xpcml7bEUd7nN9wqSsxZ6sMImAKW3u2JHSadsfk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888_1699003254664_0.34605258147684026","host":"s3://npm-registry-packages"}},"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a71bff88815a8c2e3fdfa4a4eb82a1c057850783","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e.tgz","fileCount":102,"integrity":"sha512-UY0YpyUEhRwX+v7OhALNVW4/OM1U+9Ro7k8cMFvjJ03MJNaJtBI8UnL1fyfSxGkC+AVV7wCYa6mKb1/6sMVRDg==","signatures":[{"sig":"MEYCIQC7hien648nw98Eh632pX9EiPWa3MD7MrEZVJfQnYiTgQIhAIX8EdVT/dUl0HdxNoC+9T15LRRih++653dwXr0S++0B","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ba7a1366917db762b91226b7736f425d2afcba4e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e_1699004691619_0.7205213116287397","host":"s3://npm-registry-packages"}},"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7b7e9f680a93b4910c21a91a16c6b8031ae89a92","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2.tgz","fileCount":102,"integrity":"sha512-WYtYcTpx057JqRn+0NGHNCYlSexL/fQ4eFRCqhVL/M/SBPb+bVrJ6qE1wVpd+OOaI3WRvA8JDLRw6p9FFNrPyA==","signatures":[{"sig":"MEUCIH7U5sJxSlIaqB0+kBB/7FelhPxV4MZLagaFl3dvnBfbAiEAhrcj7xDn/DL624JzzkvnFoX9ReL9kEBdt9NSmv5kXfg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f107a49a8122dcf1999d1291b19ab6847209bda2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2_1699005648995_0.04709526983724066","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f2b77dd82739641eaa76f544965ac64b60f495f3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044.tgz","fileCount":102,"integrity":"sha512-RIJCsE0PsK8LafIJ+QhhzdplY0BP+2c9QpsZWMAE1A2wp++GOPSwL7emg8hQ7+etBd4NoJncVJQENI3ft2uDwA==","signatures":[{"sig":"MEYCIQCir4rKJmvm7ru9Lcl/nCLVtlGgFKBRfOyxYmU967SeFgIhAOCbPEQs68v6AhevuSovz3q6NRv99hJ4Ft3MvatgFQ2D","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e530e7d67b0d9a518f41f501d1aee63455516044","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044_1699009415572_0.19264133875445233","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f290a56a90ba8c62e221e21e18a7f6fc3e2943b6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336.tgz","fileCount":102,"integrity":"sha512-q/GRHJhia4v2m5UJkV9vjx4hTyY9ScznsDtUtSI9+X+rqGhg0e6/tV0g3SsX1ve/umbSRJYH0o3VYnKsm1MMcw==","signatures":[{"sig":"MEUCIGB0C04Lk9MDwHSQRTUs2IDlCclKM5CJCYO7HiScYGtBAiEAnmvaeubuF93dJX3INWQJbPkZvrhd67AamZe9Oj0rroI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336_1699011025043_0.42440816146514804","host":"s3://npm-registry-packages"}},"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"9ac85a5c05e14e50d1ca55b8dd0206beb1caf98b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76.tgz","fileCount":102,"integrity":"sha512-CfxN7NnJqUO2OcVB5FcsAsaEZVSm+wlWqP+drKiaMsYzN2CX7uTGhyqp8Z12IkxbCBIAD1tpXRczo/mj2NsH4Q==","signatures":[{"sig":"MEUCIDyg6Jv9ruTpabOyurv639NKnoaQ5q9Y8NaAlwyGzmMkAiEA9pk4ZuCqPjtRE6qdn3orOa3PuR4cU2pb11lqH0otD/I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0e69461383292883156617d3d81ae7e03f75dd76","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76_1699023859001_0.525331945730948","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e7dfef3fc7697aa744a940c839cb7e64c113713d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710.tgz","fileCount":102,"integrity":"sha512-7hvW5hYtPDxOK45sg1ZE+RJpPepR+jT6LueqEbGgqIjZOq0meZdf6ahe42MttKFKscZXSu5LzRLCnXaCcl1SJg==","signatures":[{"sig":"MEYCIQDaZww4eTTFNY/Vk+Ox3As3LjfKlxfhp3PATVFmnu4pTQIhAIag+MAwflwKb44AMTKI/zl6hFubP6QVZyhVy+3W9H7n","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1a3c6a749103fb5f9416579d47e7ed2239fed710","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710_1699023906767_0.5133573982733919","host":"s3://npm-registry-packages"}},"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218":{"name":"@strapi/pack-up","version":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"60cb1e84d45ee76f10176cc37968ba5971eb9774","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218.tgz","fileCount":102,"integrity":"sha512-kPfir+t0UEmyvs55053QbFGIGo6gYSFOyKG79ZAmUDEuAI2qzlQSWTllmQEsQFZ/scNsrY+HO7WBXv/JgBKYPg==","signatures":[{"sig":"MEQCICbpM/+Y7aKBCJcPZaSlDTRKaRvBIZbtIFLmOXA0ruu6AiBUzIzT4+731AEqyAALW7K4+FZgWS5mYPv2za8OIEKhNQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712769},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"464db9cf2080552bcbd8e8b039a9da10207fe218","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v16.20.2+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"16.20.2","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218_1699023988039_0.7936871887693284","host":"s3://npm-registry-packages"}},"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"685ddfbbaebe6cab735702ea791c02561da31aae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b.tgz","fileCount":102,"integrity":"sha512-Hou0Zrut/qEeR5mzUOYdG4Ypwvwt4H9B9ji8JO5F6oB0hlnh8TecI8gzB29hcj7seVj5XPXjgMZd+fxfJr+8wg==","signatures":[{"sig":"MEUCIQD8bGilQRqNZ4QYtPFbYm7oEHOQiKcQeEf9plelOPzkQAIgG5lSHRExzTNz6KODG3PnhOzHmsXfLlTVDpmTIrVEA+w=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b_1699024233977_0.48884254560429174","host":"s3://npm-registry-packages"}},"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd":{"name":"@strapi/pack-up","version":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e981f4fe70b0258edf6747e864d3ee5c430e7a65","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd.tgz","fileCount":102,"integrity":"sha512-Guuw/HDmeTVRX9fEidt1H3zTuJSY9J0hsgH6okoDTkhTj88YW6cwEVje7r3GqzfS6w42DxDWggoTjvI4uZjzrA==","signatures":[{"sig":"MEUCIQC4wHusOPozeSIFWTHd6/bZfZL4ukXDk1X310PwySA2PgIgMjwUy/8/jUgS56/VPT43xxiVga7g+9IdNM0JV7Xaekk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"51d7ab04c19ea5b592c633b116a61966aafd7dbd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd_1699025565478_0.0099893938339366","host":"s3://npm-registry-packages"}},"4.14.6":{"name":"@strapi/pack-up","version":"4.14.6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.14.6","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"986fd79eb32cb9f3444ed5830b8174892d598f47","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.14.6.tgz","fileCount":102,"integrity":"sha512-lODlLqCiCukbaDoQ8L/TCCF9r6QTw7dGs6ZbWJdsjZgKe3bIixyrUh49z128rpRuhVeBIhwiXRK7PwQrWegbQg==","signatures":[{"sig":"MEUCIQCWlwzWsRWia48BVM27inC5IGWPDylmINwBVZn0AEcSYAIgGb1wsi+ge2nQ6WtJDUmvvm37vlXtdG8mVRrHvsYX4h8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":712557},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=16.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"574e25daf919a547554c96eb3697759634ccbd6b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.4.2","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.14.6","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.14.6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.14.6_1699027420047_0.15214194247564916","host":"s3://npm-registry-packages"}},"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088":{"name":"@strapi/pack-up","version":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"26955e175204be3afbf8f9c8e9451430a382e8d5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088.tgz","fileCount":102,"integrity":"sha512-G+J7BETRS2XMqkcAdHr0UE0eG4JajJYekNsi6xuqGifBeIHss+r1z5WWpzHGBgAIe/tZGDiLrbsBkvPviHnQrw==","signatures":[{"sig":"MEUCIQCWsRbrtDPDd85oEF5xP51tbUlkOiOhDpI5/diBhxBq3wIgWgw4mBhg4rnHTirvx9yTwbtQhkio6C0YybR60btKlpA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f5b09a8e61e059f02784478e27c310c6290be088","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088_1699057416420_0.11935003636036012","host":"s3://npm-registry-packages"}},"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"00828b587f6763176a230c131e804b614a13b73c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e.tgz","fileCount":102,"integrity":"sha512-4MEG7Van4L5fdL5BDI585S1mTtl7OFy1EMoIkxWb54TiyO37AhTy0wlDo7dRuGmuFlNCH++HgS0PsEU9CzS5eA==","signatures":[{"sig":"MEYCIQCmAZ3psirkNUf7FLBpn6bTXGYvuvA7qq2wHptVVx8kvAIhAN2uJqdhvIw808PaG44sWKSTzEmwAsRYXzOZ51sJIkBi","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"03194ce5a38172d044a20569a606986987d6ad2e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e_1699278157820_0.4608983760076346","host":"s3://npm-registry-packages"}},"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642":{"name":"@strapi/pack-up","version":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"06a7d744bfc6d9bffadaedf207167fdcc2a6fa17","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642.tgz","fileCount":102,"integrity":"sha512-DWqk4qJhZFWJylMS0pHQx2fZxLV9T7Reb333/HesaMSi7+hTFYbkgHcmH67PEbyc1j6jOCarrJfFq/4G613usA==","signatures":[{"sig":"MEUCIC4nDDHFFloFL3IpY5yA62O26QYcZb5CD/w7p7Goe+8kAiEA8AsrrQ08sIdRJzSGlUu1xlP1gEq+xlE+dWpETAd9X9I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":711882},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"41a1238745776fac59a271afaab180cf06ba6642","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642_1699285497047_0.35901777274826485","host":"s3://npm-registry-packages"}},"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220":{"name":"@strapi/pack-up","version":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"edf118e1d9da8d21f1fdcff2e19fa9b9f45434d5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220.tgz","fileCount":102,"integrity":"sha512-tTyR3wTfHY8bAARXnzNw1qnhbfrVRIXKQbyp771xb+jEGNg+uRUDNxJ1s7XPVA0ptJAxYnP1O1FCJAKXdFeMdQ==","signatures":[{"sig":"MEUCIHS5oJ+WTwaN3QdI+WsK5bePhTghSPGwtmvssvfwKDY2AiEA+aTirYOkkDw/HX0+rFNFabQbMsK/XPrwLOwa501TTVA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"02973d45cb703d682fe23dde96c66f256ce31220","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220_1699316718613_0.4035516665594081","host":"s3://npm-registry-packages"}},"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2bc15bbd1ae9cab4d6cc8326b135212b8032bd47","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec.tgz","fileCount":102,"integrity":"sha512-U+m1OHe88+T4rz+bGW7j1BYRmBOBQoO+REBPRvsPlAXpwaW+Zgn6g8z098krD7DBpID3OGpfST/+hRhPuAdENQ==","signatures":[{"sig":"MEQCIFOGJ5WRuyO0ORBZJk3WqftXwoLyPZXhuiB1cxTlE7aNAiBLiC71lU/0zGrTPtWVF2TFJFI+4XPzKAAs1Uhz7Zbr/A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7ec817719c13b9bd44985548b0256a8725554aec","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec_1699352272842_0.7938758075964008","host":"s3://npm-registry-packages"}},"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12":{"name":"@strapi/pack-up","version":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1ad6806306b98230957cc5229738df6818a78646","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12.tgz","fileCount":102,"integrity":"sha512-EW6ZKhqGnHfMZM9PrT5sbak78Fh9HJET19WvxNP/bCDUK3pDFQmkNxiq3iZR3R62Orz/clFjBbv7uhK93RpmDw==","signatures":[{"sig":"MEUCIQDT0D+4tLxOewJRazjNXXyYSCVLhNpyIjvf7p8bsTt/mAIgRn1/fCknW9Gk+Ub7VAiQlznA6Z8rkJ5c4vTipGhlcEk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12_1699402902415_0.1847619466516346","host":"s3://npm-registry-packages"}},"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1c604f81d9d21aade7c03c19df1927d3926c7e3e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf.tgz","fileCount":102,"integrity":"sha512-KHoABbi6ZMROvLJH02eNNXPxiPbBeh8LNkJVIc/zXxQlh9L8aO7N2AC+td4Vnyen+9bf9VFTJQMA/3xESrD5Ng==","signatures":[{"sig":"MEUCIQDM4q8v+cVvj8hSf18koqtl8YWzB/foDKY9DPvbGYzQPQIgfKr9dkeaY+ikJCCbjIevD+XNx0hSUfl6lsAdatJVyDo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf_1699450162984_0.19393287876601573","host":"s3://npm-registry-packages"}},"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a84590842f704dd273328a96dd9852e020d52c0a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1.tgz","fileCount":102,"integrity":"sha512-zJLe3I+ncZGgzD/fFWFUNfQbUOMABnSiAHDE/XWtkCNoVX0TXVAWihiiOdOR5q6oGI20PjDUyyyQLNL2h2A9wA==","signatures":[{"sig":"MEYCIQDGnmCs+4Mxv5IMlZWFl4xkoIb+Awuj7IzhxxF/SGke4wIhANH2f6R5EG7VxFo8PLAWVooxUX9IzHJi+iPuv+wu0Pqj","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1_1699453330924_0.5119593243891774","host":"s3://npm-registry-packages"}},"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"48c5718257c0dc57270f164d3f77091e86ad63f0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce.tgz","fileCount":102,"integrity":"sha512-dAg3MBfSuWPAi9EVdCEccyZ6o/KNaRKyzjNFfNmKIbXOEnpcBqOo7amqWNb64zkohEcppRtJqd9Pnmqpyp6ODA==","signatures":[{"sig":"MEQCIA4q0qoS136m+avtUyREdTgHSiimsVymi5zlnFM+mHglAiBEr6byqPhwJcI48G48IjMqSvGNx3xUMDhSrAAu3VqIVA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f413c089167fb3a7629b7b91cf3206dab81bcdce","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce_1699454993408_0.3651668573613045","host":"s3://npm-registry-packages"}},"4.15.2":{"name":"@strapi/pack-up","version":"4.15.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b53243bb011a92b71c33c855c58062a13767700d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.2.tgz","fileCount":102,"integrity":"sha512-2CJ48m3jJIPjX3Z5uq9kc4KXbmkks6I9/ddRvCtTjbSEVO4BserhPk+3IdSCA1rLMozlUwrb1Vcsi6+tyrgPhA==","signatures":[{"sig":"MEQCIHdGFQwgp9/aJtT3JTV/avpLKjqDi5RC06OuQW6d3T8fAiAqBbYgxYlSO9BQgHyRUu+EjOTQoH/Y23/rkf6LcscF2g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713237},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"bb510893332674e2607f7d335b34dc78c599319a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.2_1699457377578_0.7330534558047312","host":"s3://npm-registry-packages"}},"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080":{"name":"@strapi/pack-up","version":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e8e359aa829b9be6756bff41335fee1944847d74","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080.tgz","fileCount":102,"integrity":"sha512-y9/4+e2VriW3iygPznKA4rwnoXlkUIdbK6JMFoDUqFSAq67UXLj+3N/rszBmx1EQZoTWPHTak9MUaVfFQLAaGA==","signatures":[{"sig":"MEYCIQDqp3BLVW+XKsdNJqMxhyONttywn5nh1wJ03ohbHM/9kAIhAIHMfRoA1P59SGmXzlGLE7yRa237p1B1qa9rBCCU86OA","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5c5ae949bfec6a57131caacae14a36e8c1465080","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080_1699489326310_0.9484876371026243","host":"s3://npm-registry-packages"}},"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472":{"name":"@strapi/pack-up","version":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"798675a5ae09485fe767692e92097c92d17805d0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472.tgz","fileCount":102,"integrity":"sha512-dkGo0Mf+ub5LMU9WuW7vvp3NKVErkQKzQMC+z5iq3+u+2hl+TwrT2Rpq50ZrcOpmKkos11Wg5gSOHffS0eE2dw==","signatures":[{"sig":"MEUCIFrHiTMkjSRQU4siF0Dc1L+Z6QTg8oio5GDGRGj12peXAiEA6xbxfvytlTJE8G5iHY3sXCTtLJslmWOtMq2DbVe5LBk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d999ad0b00ff427885462051cdc96626b7946472","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472_1699575958266_0.8508182598519685","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"38527be7164a16457974cb82c06f0d151ecbe950","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15.tgz","fileCount":102,"integrity":"sha512-oeThJDkvmq9q9FFNd6zE/CZcPGdU5RlPAfJS7/GDLFFKYP8vl/w9N15PVsXC2+r644iKD0cUUI4R0deZOYh8mA==","signatures":[{"sig":"MEUCIQCD/FpaFCOScaSymZkSLvvdBBsp1WnDE6PMizAHOQ+JLwIgMFNJnbpXSvbKClfKJ0k21Ue8c/7OQuRxMQPtGy3DQgo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15_1699612687050_0.5220205437306233","host":"s3://npm-registry-packages"}},"4.15.3-alpha.0":{"name":"@strapi/pack-up","version":"4.15.3-alpha.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.3-alpha.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d6c33f6204e38ada5b668513c893097341675d0f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.0.tgz","fileCount":102,"integrity":"sha512-H5xSIEO/LMYjAWtrxjhT50KOJ+OPesypNGPu87ATnkRKY+IfnxUMGU66/8WCujdopMpQOPhK2Ntu1vSl55vMLg==","signatures":[{"sig":"MEYCIQDsQKd45kh9nW7f87x4iMPnzJx0skyNfV92HSuHk/xHeQIhAIumGdjMEVzeOhCRz4auv0jsiQ851Ocnrv/pmzyeXgMK","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"81425b4b9803fd4df570e050c40dd984ebd28ac6","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.3-alpha.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.3-alpha.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.3-alpha.0_1699697256925_0.164381314733552","host":"s3://npm-registry-packages"}},"4.15.3-alpha.1":{"name":"@strapi/pack-up","version":"4.15.3-alpha.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.3-alpha.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"474bf5fb0a2cde074fd8d95bcd9fa91b7ef1589a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.1.tgz","fileCount":102,"integrity":"sha512-RrB9jQYTiHpmz1ZnsLrbtgVblEWKfI3WuTladULIfv/8suxkgkT0HOwf117dgb9aO35vcql/Su4vCFUHEe5bKw==","signatures":[{"sig":"MEUCIQCZCoc7Zvlq8imLUM9Up4y5Dg/BPQwbDtz1ioXMcmD0agIgPSUnwhDYDnTrp9gLOnLmBguOw8MOpBfPlfhxdvFM9RU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f97b1b07338a7b7be70049777861b4b211b403ab","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.3-alpha.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.3-alpha.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.3-alpha.1_1699698733988_0.44043977639088094","host":"s3://npm-registry-packages"}},"4.15.3-alpha.2":{"name":"@strapi/pack-up","version":"4.15.3-alpha.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.3-alpha.2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"964ae66efdafbe894ce32a5c7428807dad5f8ae3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.2.tgz","fileCount":102,"integrity":"sha512-SJWS9wvrHZRnmZGxo2CTLbIMPh55ogZBfXtQSZO2w6HDmbyNjWvM8xx0yXANy8ZTsaHe+tWkHISSFUtKRmh1vA==","signatures":[{"sig":"MEUCIBTil4jQL2sOnSTcyoErYAI8gPcwmjrzHB4ftr8OuEVHAiEA0k8mgpIfPn6cznyuSObgDQ04hsZZuR4nSmb0TBt/yOI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c25ead026bc34d38bd962f8b7f42fdf5263d3895","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.3-alpha.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.3-alpha.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.3-alpha.2_1699699236846_0.6432937208159508","host":"s3://npm-registry-packages"}},"4.15.3-alpha.3":{"name":"@strapi/pack-up","version":"4.15.3-alpha.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.3-alpha.3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"862b46eb7a6ae3a58a55c9487114977c5a9f7fd0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3-alpha.3.tgz","fileCount":102,"integrity":"sha512-EAhpGFfVRAS4ONlPJhasG99DAdNNeuBkXPG+s0no/zWKEjf6zvUunzmc9VY+EVt+plF9juTobV+P9/xOtgQBqw==","signatures":[{"sig":"MEUCIGyYaZYWq9s4btWkKdEkL+xTrUMO8Piv6AgVd0H3fhOvAiEAyB5BD4QVDj7ZapXv/cUv1qLImW773uC2XncSPRg1xe0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e52150bf32037a703dbb71c6346ae1c15db17284","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.3-alpha.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.3-alpha.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.3-alpha.3_1699699701160_0.3747059375345345","host":"s3://npm-registry-packages"}},"4.15.3":{"name":"@strapi/pack-up","version":"4.15.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"df657a9f4ac20215d2ee6a48d229d0de8a098d52","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.3.tgz","fileCount":102,"integrity":"sha512-Hyos7G98/8KI2PS8psLB/Tx3WwAZOJw/W87MUgbbpagIEcqW6tMMFacAB/FmodHWgedmToSS9OrUhrvCk8ei4A==","signatures":[{"sig":"MEYCIQCm4fKH5r1VVujTU55o5Q5T6i1CNMYlCCDNnhnnCsRDyAIhAK9PLJ4jnWK7gggkwBETzcOSvvOgaBeZv0I9OetLmQN4","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713182},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"458516e434d53abc2bcdee50a15ac23573f374b2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"deprecated":"This version is deprecated. Please update to the latest patch version.","repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"10.1.0","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"^4.15.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"^4.15.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.3_1699701164589_0.5373788578691794","host":"s3://npm-registry-packages"}},"4.15.4":{"name":"@strapi/pack-up","version":"4.15.4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"308f1aed77826d02dbe10fc2ff44ebcb47c58c50","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.4.tgz","fileCount":102,"integrity":"sha512-P5lMsapDTZAcIPlhVfvH2xtwYL5AeZp6KfmtnGrc5i5xaj8CqNcV5eIsxYL5Bk9IKJPKwf7zrgt7nPcHKF3BjQ==","signatures":[{"sig":"MEYCIQDnJdqb2etHISQhOzkAVSTEFIL3hz3lXOp5ZmbWEbKIwwIhAOrMBE7BSoJmaAKZf011JueXYslgvmsqs+Rr8yQrvPOs","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713237},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"da634b09510db5ec9ab7163670ae903f44929752","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.4","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.4_1699701601291_0.10834200291671303","host":"s3://npm-registry-packages"}},"4.15.5-alpha.0":{"name":"@strapi/pack-up","version":"4.15.5-alpha.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"ce504e8e88b6a9274cb527b3af3ef7a26cbf39b2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.0.tgz","fileCount":102,"integrity":"sha512-EMYvTKAJRDQXYnDBvGo4GiWA1tc24o0LO2cGydbV0smz1zPnkzx50TBT513/U+O4RMUmSjb/blgVy6JgllxBcA==","signatures":[{"sig":"MEUCIQDKxQlhzdHWEuBtWRCGjuaPAIKXZMMzj0haBYpdq1PDLwIgBw7J9oB9yY0hMC1yGVzhSxDU++wZrLeLmdO3uaWu5Z4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ecfbf5ede664b0e56f8dd828fd26bd63903b3d14","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.0_1699896274713_0.2795134699024151","host":"s3://npm-registry-packages"}},"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d1b30e0a8ca0a1f935c74a419041d4b0f3f0f414","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c.tgz","fileCount":102,"integrity":"sha512-64Muf/4IH7w87PBMzRy+4pIQ6WAQ6RrDgfGZ6MlEXRs/OX3zzClbHkT6Lbpw84TSaV/IbMhjwik5Eml9YLkkPw==","signatures":[{"sig":"MEUCIFQrTH7dWS7qo9ufFcCQm7QV5NpN8Nd+Qpya30NCNDUYAiEAzqvk1YBdHrWBlMT1vLacDsrYAfixH5/S2NfK7gFJiS4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"af5a6e37b234eafddc8829a9adbf27da30fa551c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c_1699902053927_0.06614799609532018","host":"s3://npm-registry-packages"}},"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0":{"name":"@strapi/pack-up","version":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e49cf3c275edefb5c5bda3e5c01979ffeb6658f1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0.tgz","fileCount":102,"integrity":"sha512-zht+TR9J6E8yGfSyfwsZet0BoxVqyhPwU8FqMQaCmM0diONqcvEtv7OzXAUu8p7KqokeDVICpyFVHHlWiCgeZw==","signatures":[{"sig":"MEYCIQDGbwPj9yvyJAwP6B9P6wRnguHNkWqf4b84r6tS+FcOwgIhAKHf6Le70SX1L1rwHGaei26MMWTocDxHJ/ZlKRLaFsD6","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"175b72af9d270bf8f683fb6f0bb826885ed33ee0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0_1699921376489_0.52161671494466","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"12d1d4f8a114b3f07e7d17efc10ef8a0aaa7939d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484.tgz","fileCount":102,"integrity":"sha512-f+iahoxhda/FySjM3ENNB1ToW9NKYZAef8OHim3G1mit/31vPxkBFqtwdWl83zvdl7R2RO58OPjOZ4dQyFpcWA==","signatures":[{"sig":"MEUCIGX9OqdYKlDejeqIqwpjilqsAhZimxtePwezSo3+/idLAiEAp3IaVPnd7dp/beadP8Rl+MRQSvlKZxDdKlBkVJX0c5A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e52ced96a510dcff85d35ad0cf7ac04f15ee2484","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484_1699966285109_0.8810020566221408","host":"s3://npm-registry-packages"}},"4.15.5-alpha.1":{"name":"@strapi/pack-up","version":"4.15.5-alpha.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"15cce0f755036b33da46d21540b089a8c4274443","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.1.tgz","fileCount":102,"integrity":"sha512-nhO4Ieb35RlPisVOetd5E4C76bCnV3wC7z5nuLYpYsY5SErEUHuIQBSHBIkuW08esnuKQ9vTO8MadGlz7K3ecQ==","signatures":[{"sig":"MEUCIDnhysccDaYeQZs5ToTwedDQoBp6Z8BGkGyB0VrXGiEUAiEAnDaN4RgO0ZkAq0luxIJezf2lPE3GtDhC3Fcox5fnC1I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"59aec6c474372383fcdae05e0c781c1a7bc0c5ee","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.1_1699970276446_0.6584322776857703","host":"s3://npm-registry-packages"}},"4.15.5-alpha.2":{"name":"@strapi/pack-up","version":"4.15.5-alpha.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"546e3b21d7489bf537d06fcf595704858db6ff02","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.2.tgz","fileCount":102,"integrity":"sha512-tZ5Fx4f3kPyV9pzxm6sJV8BUaXjgd4bQeQNSC5hGQDY9tCSmnpMBdJOQ4e/lsQ8DPijh7HXfxx1R38FD3q0udg==","signatures":[{"sig":"MEUCIHeh+j/G4Wk+TG6ztdVhaxrBvk1c7/row57XO2g9vAGAAiEAiZEbeycVhrCEyUMbTXXBHfOkjrgyswKhrT5WJEpK3j4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"180e3acca9f4bc3ce9f79c293a311b3791ffdd5a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.2_1699979190714_0.7771954952128439","host":"s3://npm-registry-packages"}},"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582":{"name":"@strapi/pack-up","version":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"757e754bd8f3de2a16f576409892bd5175430f52","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582.tgz","fileCount":102,"integrity":"sha512-H1PPx2YHItetYtER3lbr/MlKH8mEHSXFye52TDXnT+pvIATv69oRdpRhke8l5iquVbb0Ewng0zgxXq+bbcftxQ==","signatures":[{"sig":"MEUCIQD1WvDlY8W62LR4Bni16D+nDhmhs3nVmYDzyMVQTHeyvgIgWI9YrE5xwf4BK/ACKj+3XeXQMRmuiDBI0yOgZMjdD0c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582_1699995519871_0.7327644625975516","host":"s3://npm-registry-packages"}},"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52":{"name":"@strapi/pack-up","version":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a1043a63d849ae75fae71735ddbc19cfeb462031","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52.tgz","fileCount":102,"integrity":"sha512-R4WrvfUFS5wyotPO4hO7eMr6c7QwqwXLxh8O7C48Ysrz3i6BuZuC5hvx7UB07xivdb7PnIeVkiKlHZaS0kvtpA==","signatures":[{"sig":"MEYCIQCoeG7YWngHkvoG7gXct206lvDwBtqJt6aAhUMTaYxQAAIhAJ4ToWbQbvvyiXAg9ALy4Z9At3/0Y52uq1QVlA/YehF1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8ec354cd1dac7ebd1e675a82238d1538ac678f52","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52_1700007800165_0.7058344034776636","host":"s3://npm-registry-packages"}},"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8dfc11e4eb408dbc30f2ba5f445f83374de753ff","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0.tgz","fileCount":102,"integrity":"sha512-yDG3zV2MqqNUCBMqTbmVFPQmC2odmYHrxal/8Hnn+r6f9+B2JzymUfgu9tvtH+qGmoAOouSlX0KLpt61KsQh3Q==","signatures":[{"sig":"MEQCIDt5OB3L2wIg8eXjFLE1KvQLdXRg3NXAJJEF5bDsvfHpAiB8q7iUhBOLDlcoIXgfbeM9f+WDarBtBUkjzdT5UX5yNw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.5.0","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0_1700038340115_0.8928149369188072","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"153b5979bf18c7b8482ca637bf5276f2b11995a6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971.tgz","fileCount":102,"integrity":"sha512-FGv0w69UTemgTHrCu393Wyssdg3uzZv1hTdMkuFChSlmuT3remSYBUb8eqEuXqey5yOaZpfpfu7n+ByPoOv/lw==","signatures":[{"sig":"MEQCIFZjAJ3btGePSUY+zE4ehA1e+VJQqxMppC5g1O32aTIzAiANJypW5yTAFJTJ3/1rMw8/5NuCNpzNpcBe4E729MNtDA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b18de920e1888b39364512c5ed7d03cefc236971","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971_1700040883142_0.919489639907924","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c9b28bfb9eeceaf70e6dd540ff2e93564041eaa9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0.tgz","fileCount":102,"integrity":"sha512-A/GfoAfQL53q2nwLaPVnpmuevAU9zN7qrbdmTFPX2s8Ktg92KpwZGiFKTkeVtjAqM4OH9cnfEvvMakb+1ArZjA==","signatures":[{"sig":"MEYCIQDyBiYZpUvzpTuaHnYm3u4424XrjLc5twX+K8BkybzBMwIhALAGhfhvvtNtUQ9LBVMlsKNSV4+w//iabxhXNVqSHnUL","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0_1700046365727_0.9746816452757328","host":"s3://npm-registry-packages"}},"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf":{"name":"@strapi/pack-up","version":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"36338fd85a901d76d0e2de903e8b2b7429c3f0be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf.tgz","fileCount":102,"integrity":"sha512-4lw40nOhX/ii2hMMq/qbBri6JULfh8w+JtD3n6Ve67wdp0OGwtA5XHR/dGGQWtt0/YNQGrIaRIDwTASxzfufLA==","signatures":[{"sig":"MEQCIAMESJUkK+y4T/q+/uJg7RCydZlghY4srKtWc0vOd2wAAiAq0NrEqY7VsrwgH+KE/mW8pekWRqkuBt6c3C4PLxrOFg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf_1700048267618_0.4107842871185656","host":"s3://npm-registry-packages"}},"4.15.5-alpha.3":{"name":"@strapi/pack-up","version":"4.15.5-alpha.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c2ef581685a115f3688e8083405f39ac33a0a39d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.3.tgz","fileCount":102,"integrity":"sha512-1jX4v8imFYoe1MjrLlfMBOb0EzJ1A1+YYBd7zjuZXUX4RJir9xUGSfS0+26dGSqxoPxvuKtS/daqAnlvzPiHqA==","signatures":[{"sig":"MEQCIHSgx4v0l9opUcHwOeVSL417HyPMBWpIwyiRZETFlsRlAiBvZJZwX/FfN9T7xnTyGC4XaatRq3rqGRHLWsqhuh0GVQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"85efb4bfa37cbf434907dcef6959c541d2b74249","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.3_1700055575162_0.5845686988120948","host":"s3://npm-registry-packages"}},"4.15.5-alpha.4":{"name":"@strapi/pack-up","version":"4.15.5-alpha.4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8d676048a0e80d623e191f782138fa7d0297871d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.4.tgz","fileCount":102,"integrity":"sha512-amND1BzlN03PPNpopOVk5HWd+cdsDD7ueHDUHZDzPj0WoEKwJH0T5mm13GDbJiN0DAlzUySo2pQ8RuV17IVcAg==","signatures":[{"sig":"MEYCIQC/jzqNLascZDQ9/qYlRJnt4K5cn/sww0dQa9Dcq0mvowIhAPr/Gb8X2vULS2if4JPr9a/yWM0jEm5gzn2alLlSIlSV","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6a4fcc93af2f8955e8f981da3d264561253f2a3b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.4","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.4_1700062784451_0.38939605057132565","host":"s3://npm-registry-packages"}},"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722":{"name":"@strapi/pack-up","version":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"65c2c6f1548de581f0fcbb452cce803ec9d2e7fd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722.tgz","fileCount":102,"integrity":"sha512-JhaT6+cz+fZxAZqvcu4qN0D5RWxNO5V1sxQCPG9CEWm023+QMpb5VnFyzs8tHoC42FD8x17hF9OUM+dllGvRPQ==","signatures":[{"sig":"MEQCIBoypM7kVShAvhbAAlNa/2Gf0F2ZhZ2d6gQ3gKM/6nsYAiApD3kFpl3r5H+5KMC2Ao+vAQn5oqaeK4CQgITvbp0uXw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5157894bd50e9803e452b5636d7688f7f3375722","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722_1700094202712_0.8943413004934666","host":"s3://npm-registry-packages"}},"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c":{"name":"@strapi/pack-up","version":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2dbe314c502591db47a3eeccea0dad54e86ea566","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c.tgz","fileCount":102,"integrity":"sha512-K84SLXa5lONiPNCLFk99jblLxLxfDaisTYuIlUjFk4XaIdPyWJGCxYKQSeoAUhlTlMsT5S7MkWduEE8DamT2yw==","signatures":[{"sig":"MEQCIBfVBJN37P1SEq/eA+zNUSexsFhype68o6DPML40rP+CAiBYugIZAWlaAcQJ7FUwtLi1bII3kOpRx6uvlWcLT/RXlA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"728d614ca4116060132514ba8c504a2d136c3c4c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c_1700180603617_0.20581312888870662","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"ee5c520511aca1d446f46b5189929ea28425a942","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156.tgz","fileCount":102,"integrity":"sha512-Kr6pDynMtV7DCepbp8YtMGFfq5Vb2pc0qQGGE76OwxNPjip4XUYuLRT2uhsG3G8nlla1eqwevKJTsLTbU+wnwA==","signatures":[{"sig":"MEUCIQCSOZu1S6hCVjIMyxOOSvov3T18XHM7WllNl25+gpMogQIgZo5/lRVryi9d7U5HGVTrOjmx9Xdg0xJ/pv8O1m5eUWs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713481},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a30568e92be13a6f2611ccd2a82f0d0dce154156","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156_1700231007231_0.07516873546954739","host":"s3://npm-registry-packages"}},"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb":{"name":"@strapi/pack-up","version":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bfa709e8530ff0b9a06d17b6f1b5bd30cba78eb9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb.tgz","fileCount":102,"integrity":"sha512-W2K3YJsW7YZBZS8INy6TgqSFfbuFpqXX3fsrHgSMX4GFJ1hPRKwy/NNAN4/Im6+tawoPheZgyzCBpGQWKBvuAA==","signatures":[{"sig":"MEUCIHbpL+Jg43k1vVZmLnqxNsmLxCLBdJajl5pe40LshEWAAiEA8MizxCoMDTO82qQP/0u7+aj+sUL0G2uQHndjAb7hQTg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"695d94a247a70cc02478c3341dc54d8860d950bb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb_1700267006473_0.017132223838113525","host":"s3://npm-registry-packages"}},"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc":{"name":"@strapi/pack-up","version":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"838d840af3acc574045b7596f9bc6d292486708d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc.tgz","fileCount":102,"integrity":"sha512-XmkyKIaTtdCJ1x93C5L4Tf0t7sFGInrMibU0JGFjHQIvKEVdAgt9ubwVMWU/fCmuIMilW6dV9jnbNvav6w0bjQ==","signatures":[{"sig":"MEQCIEjvzNbpFm9ehccBPUNhUjZqIqnZeF+2UCTAcyRFJOMMAiAFq8GUhA1LR90Z1brQ0UbCVP19sZW0IUIx4xWSu9T4SQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713417},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc_1700526265628_0.35795685887110973","host":"s3://npm-registry-packages"}},"4.15.5-alpha.5":{"name":"@strapi/pack-up","version":"4.15.5-alpha.5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"584fcc39c851d0177c4626fe427e3385918be897","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.5.tgz","fileCount":102,"integrity":"sha512-zDpuzAMXEsq80Jz6iegwqrbaEXhLysO7+++lYHs/uSaK05GQEoe5upMEm5raIVxBEqy1ipG9bu/XZBfMEy2P5Q==","signatures":[{"sig":"MEUCIQDY0JdGN5sTmpQwTSl8wNAn+N5UlIWWD1+RQ75s50cprwIgQzTRUULtf/R+e2y7R5cmSBHcPemdrcAe2OJzphSJEjg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"afe9e1825429e5d421311cedb027d109edcd401a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.5","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.5_1700595458610_0.7115508899992866","host":"s3://npm-registry-packages"}},"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3":{"name":"@strapi/pack-up","version":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1391c9a6410390ed2935f4ca5c8e2726d27a9bcd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3.tgz","fileCount":102,"integrity":"sha512-4NLe2L1EIRyUhpAjWWg7TBJE5e2dbVM29pmdfbPvaV9VDfbbu+omVMpjRSHQ0wY21NI+oIDIixJCU7ESYvwcNw==","signatures":[{"sig":"MEQCIHUIrp2+BRRnx7HPXoSeatxY/2s9UgbuER5VKruK6xk1AiA3WoJXDGOgUrSze1x3guYzQuCjjol/ZykSLHT55J5/1Q==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8811cfafd27e6318bde3951dadbe45dfe1acbce3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3_1700785410964_0.1776258337269372","host":"s3://npm-registry-packages"}},"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b":{"name":"@strapi/pack-up","version":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d1f103f1d98e5394be1ce631ba24b12c2f7b16dc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b.tgz","fileCount":102,"integrity":"sha512-dI0g1c+hzC61nu5zsmBO2RboyCL37TGDNCTdobK1erUlyQJlARbeyAIc5nDLGlwXYncBuO67yUCr2+LUXW5zMg==","signatures":[{"sig":"MEUCIQDwsi852leVADqVzseGrXiyrRw8mzeVUEQ7c2RgAe5+IAIgcZeEuqR43d6gUZhtxWBOxg+GHQXSl+JxRK/jB2PVRMY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b_1700871792655_0.8707700546665147","host":"s3://npm-registry-packages"}},"4.15.5-alpha.6":{"name":"@strapi/pack-up","version":"4.15.5-alpha.6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5-alpha.6","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0d4d0f334e23b22c454f14b9d9b6373b4caba347","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5-alpha.6.tgz","fileCount":102,"integrity":"sha512-K0HDBG66jX8e/tYfky5c06N3hFlijY4LuWhJtXWkB2e2dQQFBfWiKVwzFDOACj6dPIKAcivT5SpHuir9iCFc/A==","signatures":[{"sig":"MEUCIBd2Oz+xieMuv/tkYnhmw/CsNAPElAgFRba2Nqo+mbkMAiEAu1Vq/kS5ZE7AsRics+KUPbiNVWsOUCDw66woCyvCmYY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713269},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"afe9e1825429e5d421311cedb027d109edcd401a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5-alpha.6","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5-alpha.6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5-alpha.6_1701076729892_0.6252485390094218","host":"s3://npm-registry-packages"}},"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097":{"name":"@strapi/pack-up","version":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b8d5d4c908e0ef9ef5d040b61428f07fdbd1b006","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097.tgz","fileCount":102,"integrity":"sha512-8vFEVZpulAxBpG/ZFPNxveEWBSOjLfDb3Qm9XvNh1RmyxyGGb3tNMSeBEdk9bBi1ebT2Gd9wW8T5xbwqQw9TeA==","signatures":[{"sig":"MEQCIAmw65AaWrcQvumWT8WfMHcauuDGTLDKxqPPNfzB0cr4AiB0YG2qRAiU8c/JfX7jtYf0sGQ+Nbiyj4Fl4Gx5qcBIoQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c9130a2ea39288aa524421ae5a00aa87b76bc097","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097_1701131049183_0.3323059820073906","host":"s3://npm-registry-packages"}},"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fb63e6b08868363d73b6c9642b4ac5381d12403c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b.tgz","fileCount":102,"integrity":"sha512-te2Jkt7zH32i6/25wjyX0gf+lMK20isoVqk+Iytg+sjW1L2dmjPl/yHl6YI5QvybqOqYwLYbEwV60wRvyBD8eA==","signatures":[{"sig":"MEUCIQCxMiqRIKEDE/QXiOWb7eSnsXTu9jlaFa1Pr+TmfSt92QIgCUNt7+TXifImtHYEHB4x3WKUJU/LIcqLJluyt0tdlZw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715536},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6dbac0c205b0f8495781db5706c18cac1a62e62b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.7.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.7.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b_1701183647755_0.8511366321573448","host":"s3://npm-registry-packages"}},"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09":{"name":"@strapi/pack-up","version":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4d7d2a8f1495c9be2e56ee780ef416810047ffae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09.tgz","fileCount":102,"integrity":"sha512-tIvpCkNL+vrQ/99RBf/EOMRNOMTT7588RshuYXJKx6D06x7JS9bovh0sbiVGCsR8u8EOsn0LsPvBG8QCLh7+ow==","signatures":[{"sig":"MEUCIBgDWKowGc31zKgpgLMwS2pkzDbcuRNlVjzXYtR9I0J9AiEAh8jhMswWgqcij67t4e3qZKB/sW1TTYfQKd8HMUN+exo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09_1701217439252_0.3385641561483115","host":"s3://npm-registry-packages"}},"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127":{"name":"@strapi/pack-up","version":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"32a61de1f0fbef30a6c695e908272a612d25542d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127.tgz","fileCount":102,"integrity":"sha512-4gA1VtNVtQ5/Oa20ZIzcvBI1a3sM3df5gNxMVIcdrp2jDp4NR0tw2Eme/eFq+ttbX05EdxAfbAkH0h94ZlluyQ==","signatures":[{"sig":"MEYCIQDOLkVDUxdwv9gmrZYA1n/oiCd3qXmK570ulWuCjDM9XgIhAN4uZMPEvl6w7q9/UtTg0obbsNGPRTpkGHZoc2dnUXKc","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9e5de363e3dc4849e916bb42aef8a0fddce70127","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127_1701263935360_0.1486306712174248","host":"s3://npm-registry-packages"}},"4.15.5":{"name":"@strapi/pack-up","version":"4.15.5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.15.5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"deeb600666fbc3c3d0dd33c1b015303d05bcd654","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.15.5.tgz","fileCount":102,"integrity":"sha512-qxHSqUB4BpCxvh3wdYfaqRrT3vXti4jH78i0S7lMT2nmJoPHsdgwtsThoqm9lYp7TN9Xqcu9oda9GOoAnqL0JA==","signatures":[{"sig":"MEUCIQDE3eoiu/v4CW4z1DCwxJU7JfUju95r2pVRm8V++RJYxwIgFIzdMHyiCC4TVUHFcOK5ArTzSvmZLppvP33bQNsxQ3M=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713237},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"dc96169c3f41dab4ab75d828d3fb39dd1a2dae27","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.15.5","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.15.5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.15.5_1701272729076_0.1648966640001921","host":"s3://npm-registry-packages"}},"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b":{"name":"@strapi/pack-up","version":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"007bdb7b09406031d102419c531012c42656a98f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b.tgz","fileCount":102,"integrity":"sha512-7tZIO5PrqJ5oLGu84QQLemfWb7HfZnr61k6T5gYgmb7cbDzv61vmZ80fcmLVD/GG4FzeUoAr/EFzjgMOmDU0JQ==","signatures":[{"sig":"MEUCIQDzJjQf2JuIkW6kzGoGQ2+NtiDpUwXCVIBLZi2gMQUBTgIgdfRpG0B5eerVoirdg5cZdM/rGudltpzeH/uXzT6bWFs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"2611986c0db117aec91dfc12a07f7b24775b609b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b_1701303841581_0.7488420894154593","host":"s3://npm-registry-packages"}},"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173":{"name":"@strapi/pack-up","version":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c78c0c3bc178f14cca7c1248f9494c0530cb1340","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173.tgz","fileCount":102,"integrity":"sha512-sqB+yEatHgxGm7rC9vpbyf8Vvp3gLbkx+rWmjZY8vYvHQe4XlPXu/bYyDNBMwm5SQcL+iFlvGeYG+I1ye2GQLQ==","signatures":[{"sig":"MEUCIQCTuqIusdU7pjrZeFNDYFsbznFFqnhmSd83wZieUugsxAIgIU3AGbNl1EaSIW4ziww9huCM9TjmkyEnHQ2B+kinUUA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3301d58a39e2554dbcd016c398aaa62609fe3173","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173_1701390360013_0.14989282207429433","host":"s3://npm-registry-packages"}},"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5":{"name":"@strapi/pack-up","version":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"9983473198b44d9822ae736be84cc3644280d084","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5.tgz","fileCount":102,"integrity":"sha512-J3Q5HdLD22ahLiCY8+tkmr1l51USzYKHDQPJwDY2BiLxDfF146dgl4FBagy7qoaqDm0zMqqI2lwszng9ESCFSA==","signatures":[{"sig":"MEQCIE9WUMwqFHYr+Ls0MoBHssmwDFjPZVhDVcaCHxs96xfEAiAtVd4RoeDybVchvd9Fhaomz6ZFkeLBVfBHcsc89H61OA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715472},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"865fdcc5d94352d43f1d1cb7634d0556de79a7e5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5_1701476580318_0.5977771292891332","host":"s3://npm-registry-packages"}},"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7549e90a9268e565011fb3e728fcabc206b064a1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4.tgz","fileCount":102,"integrity":"sha512-zwS+Q8dHS83RcXpzW6sbULJxXU4NMMcqw7AJY7F4gElmd2y0dCRN8KdLwUsGTZP93AnedYHvTPFXLL0JxWXq9w==","signatures":[{"sig":"MEQCIAqrtxpD5JlTKR8msf9AbyIinADl3o2qsyPY0TtZ3YtYAiAnqGYME/MSHI7I/jRVMOr1WdIpVhy5ScpGzO72nX9BHw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4_1701712769378_0.42209900565762926","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"6df56f5089d6f60b06e57579fe485bdf13365d8f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5.tgz","fileCount":102,"integrity":"sha512-TtJQtZkBCmfQx9PIrUsS3tjmRj/8jD6Z6eWjUvLceScBmpCwbEOfDbn8zP9nCKi9+UtO3kXSNh1oD7fPqq9V7g==","signatures":[{"sig":"MEUCICKgv3wRqh33lwe92UO7SRlD3E6da8rKrLOMSf6d8FnVAiEAiPRL3fg9rPXEdowQkpA6O44mb4hpFzy3/23JL0Xdelw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1337050b5f44165b965996c0ffc1372cae2c77f5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5_1701890946174_0.9331166084111879","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4e42a3864a21cdcf92558cac10acc8331f339d75","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55.tgz","fileCount":102,"integrity":"sha512-0eXivLwjZPJwe7isAY+JyBAwKuveEEmy538mKQxHwx3YpDqTOo+5PcRT5HoJfIZ3l/eu8M4PCbKTLDjbX43ukA==","signatures":[{"sig":"MEUCIQDtxQimtZ9Z2StvOuFWgso6Yo31Rd9IOdsSTjiYGVp32wIgfSczuQ1Gwlpe/wj87O8NC+eCWZjXgyyPhROtSEA5z+c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55_1702031328735_0.18524097481974167","host":"s3://npm-registry-packages"}},"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"6aa1ae6b9859fb1c792554563772708692ddc1e5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6.tgz","fileCount":102,"integrity":"sha512-v2bQk8mg0l2apytG5wIuvOMI+p6vIybGoeIwQ9PqVlBsLAyPHgz3DMvtStxXlricb44xkawAPRSfw0oDd3QlIw==","signatures":[{"sig":"MEYCIQDvL2SF25uRD5ZWhtOEnsd7/Aoqxsruy/OpLlnby8TDKAIhAJ53Ky956RJXs+zlXXytlquZ0YR7ZeO0UpdLxqLA994+","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6_1702047255613_0.24563763077673295","host":"s3://npm-registry-packages"}},"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7e19f410a2371e9b647b7ed59ef291b0901c6563","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d.tgz","fileCount":102,"integrity":"sha512-W9rFJDTOn1xl+AJXSQMpUvbpQ+APNCEfktw+/W4FvUp/YconWguL3Gpkz5mAEeNaj9fvhn/JqdN28xXB5ZmJkg==","signatures":[{"sig":"MEUCIDXtZXQbOwASVckhTg+bpTYer5Guzgm8ek9qL4itFLl5AiEA+jy0wLtIwHT8ajiVkOfYyzmB5pYpFG7B5ffRhJBpGuI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713449},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"af0176cf2e8b90e8550f1099a5ad7509a737dd1d","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d_1702052008386_0.6329769211092111","host":"s3://npm-registry-packages"}},"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"598ce84bc63eb9f1461c1cfc7fc49f685571dafc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4.tgz","fileCount":102,"integrity":"sha512-WI0toG2YfT4fws6ZzTUk+SN4M1eIs/x+4TwwsIGGggmYh1/WD44sJ4DxgZJYnRNb4/qdLqGf+mjmub2RTZ+gYQ==","signatures":[{"sig":"MEQCIEutwp5tuyVVZshEcmf2hDVMrM26pQYptu/obiQU7pb9AiBKoh2paj5mVr+7UrNDU/ljIH5lSYcbQBS2uWy4NLbthw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713446},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"16a54daf6a3e687d54fda4065a349f30931498f4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4_1702918908588_0.5125424730484258","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5edde6a4679e4557fec7968b1ecc593d3d4026a5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5.tgz","fileCount":102,"integrity":"sha512-EqEAMIkR2fur2Bc4G/L8k4JrnznAU6jqJ/Hx3ODi2rV89jtlRFW7nQD/37CXuqpZK9mUw3ujam6qseUaC7RL1Q==","signatures":[{"sig":"MEUCIQCpQmNbEkehWvBAFeT3YxLm9VF+iJWgNnv9/DYABYoi3gIgf4R3lDc/xYxLoMPK7yKgyrCENU4dF/kVm+4OeiRrcTM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715880},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b80973cf243bf8bae143be1230d8d463545204e5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.10","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.10","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.2.1","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5_1702992460547_0.9786057344958243","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a56bb95b2abcca97152754c1ab4b05cdf9b8639c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e.tgz","fileCount":102,"integrity":"sha512-soTgLzdNhEM4YLMVyJkwuOMNaaJs2z9STEJbaC0cLJbvV2g2KHI9oScdCo9QHgbc1fiqTXfowWOJ5apaP8GMcg==","signatures":[{"sig":"MEUCIATW/8no1+qRjbWS8Mu1qQvOhmEH0Fi3hA/nuLJM4L1gAiEA5180WL3sjqrWJsemdslNvf9At7UOt51dK4Na9T4xXDY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715880},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e28520c3d3ad22e806666fb4e3cc049c1d14345e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.10","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.10","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.2.1","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e_1702996211168_0.6016476842775491","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"19808b79dacf407cd80d6e76fa502615a5ea68ad","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970.tgz","fileCount":102,"integrity":"sha512-XwGXr077nIPE3ZD88jIs6/0wP3Q7VVIETyJbSSur8lWMKUf+41mIUUTgKrNFx3NuJhsGO3wDsSWyWEC6pXW5Sw==","signatures":[{"sig":"MEUCIQDI90TRXzp5zYOhzVlvJptUsUkyqO6kiczo1Gb5gCXgiAIgSwisljVWztBUPC8b3N0TzWA8597aT7hcgKmFY6GuQPU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715880},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.10","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.10","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.2.1","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970_1703002895239_0.07960454850072951","host":"s3://npm-registry-packages"}},"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb":{"name":"@strapi/pack-up","version":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b981e23a29ff854d3245a7ea6f6793568553941d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb.tgz","fileCount":102,"integrity":"sha512-iOD6c6bzwv05r8/VCIZPGD0vIquGv9WhcEHdXttlfmawqGx3rUv5PWaB0n3uqVD2xhM3TpAgUZUW60Dv0k/rtQ==","signatures":[{"sig":"MEQCIESGNA2D0hlxq2s4glCqDVzM/n/mXrpWRaV3wwYBMmS9AiBiokpsHnEZE7xgcz37t0Cjzvr0cp2+B+o9QgHQHCtfCg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715854},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"bdcd983c3daea42b321cb4535ac7d9fce93b32cb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb_1703031628094_0.5080095203072987","host":"s3://npm-registry-packages"}},"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b4c0b86613036c030cbf5c4eaf5f510d21cb90c6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86.tgz","fileCount":102,"integrity":"sha512-+h+rDzltQdnyk6WpWXyTqWapZMnPP1/C2fWZwX4B/mM96wq5R5Q3h950GgF78mM4LCl5pQ7VBhNppnmKVIIW3Q==","signatures":[{"sig":"MEUCIQCOTg/dpIEpdDiKVY3o4rCFcc+Q4NV5qw1kkrsp1pBdGwIgDQpBRHunKB9WH3rezCWFF0g5EerR7Dlhnkm1dxX+YWE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713446},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4473dccab539275f7b8d04c8e45d41e92a5ceb86","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86_1703062437664_0.3265461307806612","host":"s3://npm-registry-packages"}},"4.16.0":{"name":"@strapi/pack-up","version":"4.16.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.16.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bcebac2d3ccffc4fcb9089a9fb1ced406a1d64e9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.0.tgz","fileCount":102,"integrity":"sha512-gLY0pZicNKh6Bdmy3Tcq5x+GXk04RsblYV9hu5CzyF5+wiDNTin/uWzN0bn9pe9ySj4uqaCjEmTI3CeptV/dAQ==","signatures":[{"sig":"MEQCICBbbrgDdMUKFnlDz06JHdZUOg1MNPmcn9dsBGOsKRtFAiBjdqTlrmFtBZdIqdmj0Mp0aLAQKhOC2ce2Qc/Xnk8i6g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713234},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b8acb528cd7a2c45467b3b84e79c10f7e652a844","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.16.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.16.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.16.0_1703084109815_0.6616245055507306","host":"s3://npm-registry-packages"}},"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"95b548703e306361d65a99b98c9333b2b5e1db54","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c.tgz","fileCount":102,"integrity":"sha512-ZesTdgpUC5/wl9kht0NIgWWu0e4/rBUsrTEni4UQRqix8pkrY+oFB64nhVyZL4KU8GPMNagcEyLfPrZcVg1sGA==","signatures":[{"sig":"MEYCIQDZke2bl2lIUwXyze3tV8kAY+VsDYN65U/th71hXub3uQIhAKOpnJ6b9B/WR5KDeWC/GcH1j0Q27c7ch/xbV0KynYBU","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713446},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8a2684845cc94b5c8a7a440047a7cf416dcc799c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c_1703164625187_0.9558967251775183","host":"s3://npm-registry-packages"}},"4.16.1":{"name":"@strapi/pack-up","version":"4.16.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.16.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1d4b429a35a9f99f93afb1314dfffac5f856a921","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.1.tgz","fileCount":102,"integrity":"sha512-lRi92qc6Jl7gPqiUuT46UiEclM7wkqc4XP1YfWk751EuTR9o/QgdLF5LMDw8sO3G10u2kq6uuPn1epKJz/deSg==","signatures":[{"sig":"MEUCIQDfXH3C5jV0xGrUU953b0nk1UbJ3XaMBX5OfH+VgYoWSwIgUnKXvtyTkZnPvZh/kMWjYV/hr/2ECNALSMz27mqvdfw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713234},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"af13d4e0562a4dadcc00401fbcca9d345686b7be","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.16.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.16.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.16.1_1703168785699_0.01714140742024073","host":"s3://npm-registry-packages"}},"4.16.2":{"name":"@strapi/pack-up","version":"4.16.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.16.2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"66a6a9c7136dda54d08de9f16a1cf0421c63d099","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.16.2.tgz","fileCount":102,"integrity":"sha512-jZNwDOQTK+wXMNCyJIzumW8w7BivCG4B1LK+jyYXTomwKnwkvLLGvJZtUdgY52a5ogJyLHKaecKhbskIuT/Fsg==","signatures":[{"sig":"MEQCIDLN5frojlr3+HZWRHwgd7gnk1MmFpO2udVrjZUK6D20AiBavD1UAi1VODpIbKp3ZzzsMb8TU/JE+q0skHlqqydIeQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713234},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b887f1aa475e6e924999198e2b645bec323ba29a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.16.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.16.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.16.2_1703170523270_0.9232177404272957","host":"s3://npm-registry-packages"}},"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"18e6af47dcc21545fc5b94494db9e187e26c715c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3.tgz","fileCount":102,"integrity":"sha512-GkgpLsPDXkEJZAydf0lGmLK7QLvtwblLXQhDLeSjNaQeTjmOCkc9kbjtMSZbRFyY1G7dpGqfUyg92J1wautY9w==","signatures":[{"sig":"MEUCICqNSnD0GexVq3opPRbZ3hbCjCGS10YOaprRnt3NnEPuAiEAyjdm9TKZaMhf8TT95Dkccxz8A/NJ10J+SiYWa8Ar3cM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715878},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"900f6992da839ba1aa22c8383e4586a2c72b72c3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3_1704182344552_0.30709943861977473","host":"s3://npm-registry-packages"}},"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302":{"name":"@strapi/pack-up","version":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4b43babf23f4903e29cc4bb8bb6c313eda4f6f04","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302.tgz","fileCount":102,"integrity":"sha512-5tBXyExKPE23lVehjb407iLKy97gCjPTBfY4yWbjaGg6oHYfDDo6KFe+m7AU3TzZEKNQNdd8zvMLu6Dqod6frA==","signatures":[{"sig":"MEUCIQDiCiY7XX+0yBi4cyaYawDwUxbHZ3irbkMjPwEmLiZT2AIgdlgwQ3eI431a1W76OG7YBHFhc4FLth+xXFX6HWAuiYw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715875},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"551df7a4853baa4a8982ba2db7e61f973a6cb302","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302_1704203920311_0.8520255816573405","host":"s3://npm-registry-packages"}},"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e8f6a786966d93a6a3458b5407fc158093601940","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4.tgz","fileCount":102,"integrity":"sha512-7wuC7JWaXZDgka5fq6DH2s4ZxkZNsgTyHwrkQY0Db8B1k7BijRsfQoAVW7li/82moxncCUL+6xJ9nr+vD5Q6Ig==","signatures":[{"sig":"MEUCIGLXsif9TghH+qrFv0+NLN+jCqTw75Em52TcX/2T6HBoAiEAoNXAcULLGfx4bGodSNx6IlndIrCNNWZW0SdtjUjgUYs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715880},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"876a032c480f51563719c2fe8e4739ba9981f1e4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.10","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.10","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.2.1","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4_1704216563262_0.08549078535971422","host":"s3://npm-registry-packages"}},"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2":{"name":"@strapi/pack-up","version":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"321b2885da4b0863ed93658c9714d6d978bcca7e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2.tgz","fileCount":102,"integrity":"sha512-aqV4PC8fwPytBea3jKoKaRMzmslgjaTFq0HMWqTkcLKZfYQ+KNkydKtRD4ZQ72lrzNuQevtveJ05r7vE9ofifg==","signatures":[{"sig":"MEQCIAlSdZfETHP85axsiyOvlonTcgWAukBOPP7o9VdVOjfXAiAOI3Me+G6pNTtzyORKYCFMQP9MEI2086gCk2Ll7YIo+g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715854},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"22f3123e946861ca798a41335ec80df6e68352e2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2_1704241405267_0.9794364900609174","host":"s3://npm-registry-packages"}},"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141":{"name":"@strapi/pack-up","version":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c303a347def7f1a99b924c4bb087bf4d75f5d8c3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141.tgz","fileCount":102,"integrity":"sha512-/FHQxYHfJ5SABwU0IcUW4w2WuWifJrhymNVyLsW0Es9XHZBuV+Qhu28cUXvU64jAICYeHeg+hUZkzzQa25oCdQ==","signatures":[{"sig":"MEUCIQDFeoYzcive2t2ZNYk6ccU52UlMQZiG8ajZIP7OhjIxJgIgZH8x0uD4FZQeifaQ0I7qtk2kw5vrX8wxEUHnEiUFpU4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715878},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"06f8ccf3e5180799f3674e001e1a5507ba1a2141","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141_1704281466258_0.5266110817022331","host":"s3://npm-registry-packages"}},"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1aefbe2557e339b062bfcd3ab43faba83cfdf227","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2.tgz","fileCount":102,"integrity":"sha512-9OjJivuPltFWiUERnLJWQFBzQwEu0Ra0oD4/Yzn4KC2w6bcN2fUZ0slCVPYsPRJNJi+caZF2sU7bp+ODNOBgmg==","signatures":[{"sig":"MEUCIQDATs6cALQ8yH92hSDmq3D8HByk89ikmmta4egVmbjAqgIgAUAsI8w7hIFl/1Gppoi54bm4+UEecdOR/pEMrZ5KWEA=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715878},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"dc0644f58f68688716958be1623823bde2e615b2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2_1704283149892_0.35987372554369923","host":"s3://npm-registry-packages"}},"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"667d404c4b4f607600b26e6185fb901cc8cd2888","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5.tgz","fileCount":102,"integrity":"sha512-dXzXzYVaZwIwriLDoLFWc7P6tsN2kPE/zq65vd06gbMzb7SgfCyUSZn1KcGyINYjLQ/UcV0m886RdsvH6OZnBw==","signatures":[{"sig":"MEUCIQDW4NQcTzGTF3jP3NNuej422tblUOo7mde7ZmzpQDMh/QIgJxJyJNUq1AUi/2oicqmZztDro4opobsQ/BJx7/Chrs4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715878},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ee7ce0c5504288647d1def0760e416edde96a4b5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5_1704285151124_0.8299993072447398","host":"s3://npm-registry-packages"}},"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"89fbccb2fccfb1684e93e4e4996d251905278de7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a.tgz","fileCount":102,"integrity":"sha512-RyAViXDOYZ0RJ+t9ahv+a5OQyc3IDPLzen8LXgsinVkSC1lAz++FIW3864//uD4W9SNpVRNWL7/uOKBAcSf1YA==","signatures":[{"sig":"MEUCIHaD1KeMZZzQHOXwQTRq5VHFIZIUp7vWx/YM38/xjxBFAiEArOjeN7nAQA5PKGduNxkTmLMSxCHSe3SFX0EVntTDhEI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715878},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"81d72dd33765b4aa300a092f80857287eababa0a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a_1704288117757_0.122352754272538","host":"s3://npm-registry-packages"}},"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599":{"name":"@strapi/pack-up","version":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8a7a0323ecdd84ba14347253dda8a4227c61eeaf","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599.tgz","fileCount":102,"integrity":"sha512-4Qp+xhabohihBjNABiafzavIDlbWfaq6pmjv7NgJK4aKaCMutH7tSBO0UmfMxF8w/LG89/UAAmDNt0GgOxJpsw==","signatures":[{"sig":"MEUCIFJeoBeA7vnsRflIa6IdTt9WkZsO5xxASz2hHa2EE7WsAiEA+piTbR9iz/YsgsnqMRD0jEV4KzrwuzYRQCVnjcPZEc8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715875},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599_1704292107356_0.29721471151772993","host":"s3://npm-registry-packages"}},"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8a53b79f9c4ae1d2a5a612fbbffcc87718694910","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3.tgz","fileCount":102,"integrity":"sha512-r/NBmYJ7PxO59SdsuBKhKqltK0iF9ORxpGsjMLw0aiAT/QJeauaWmnpHV3VsOlz4Wi9B2rOUfVePlIKT6+ttGw==","signatures":[{"sig":"MEQCIDRMNC41YDK62+mBK9MUTlOJOrRXJhVJ0bO+eSYJFqgQAiAi62ZuCVLIyh3L1QasVMDKEWpM/zaf2A82LMBRl2zhPg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713446},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"950b677f6614f483cde77801d941607d6847a6e3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3_1704316597202_0.9466937741424666","host":"s3://npm-registry-packages"}},"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9":{"name":"@strapi/pack-up","version":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"ab2bc809093a0dfd7117d77cfaa098959a70d461","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9.tgz","fileCount":102,"integrity":"sha512-VLNVK8i2PzCV7gNo3qBjX754jNI8Uniwfm+Nlv6bTqBs1p+OKiVTwt9dBKRcU8XkP3BvXkPhwwqtIp/3lbO7jg==","signatures":[{"sig":"MEQCIGnTk3Bl4FrwUw5sXqbNaQb4zsq9w52Kq31ZqADaNZL4AiAQqEx1faHcfDn0ZodSv6uaMeqelnxkncGuaPNeEdhI1A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715854},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `package.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `package.config.ts` file in the root of your package.\n\n```ts\n// package.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9_1704327839464_0.9071172380588701","host":"s3://npm-registry-packages"}},"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f2aded85bd517724cd7cd01bdee50c25e3da00af","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f.tgz","fileCount":102,"integrity":"sha512-lHgO0bgbwq0lqdVR6Huvj/kD4sk3cuoSeJwuzrOhIhaaRfE7HKqk8FWL/Igx4xbTyVOtraDlCha2DVdFrmAs6A==","signatures":[{"sig":"MEUCICpxPEFS1RF7UK0HPfc6B8LKlNLFNZ/wG/fmFifjmFIUAiEAiLfz79bhIRL/is/fPEYEf8cBBFoWHp7liaEdSnfmRCM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":713446},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"29255bc953ad5e2ca1458e157bdf55819b15696f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest","prepublishOnly":"yarn clean && yarn build"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f_1704397604237_0.35944385238515686","host":"s3://npm-registry-packages"}},"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2557f19f7f7d998f9d48e9b8bafb9a2232df8e6b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1.tgz","fileCount":102,"integrity":"sha512-gnENlbnCtZE/XCeY7Y2ghklEDc+32a1+4chWAAiEsoamfjtt5EwHrAZFHY0p8JE7Z4+JVvG6Owuwxy9/nbi7/g==","signatures":[{"sig":"MEUCIF1V0AIyGlbNT+b5asYUPAMHGpAp8Kpxt4HdimxNk2r1AiEApu/a1yuqrUpLlAPOlAY7X8gXqmJFSbU4DNOUmhOwLl4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715875},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1_1704468990777_0.58799382895101","host":"s3://npm-registry-packages"}},"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5f5d6f6707c47b605d87775e447c4549010f4289","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a.tgz","fileCount":102,"integrity":"sha512-+yBVjIrPegU+BiB6V00Otrxb01uSY8G2dvYm9MlFxnCuo0Sc+ed1F0vGFi7sXf0ln7HAHRiGifxgPkxoWTrHAQ==","signatures":[{"sig":"MEYCIQDHpAQeHa1szobM2oyFMdeJgkmpympZngrnICH34gDyxAIhAONe5JjvTWNccbprvOmzcbFFmpcLnnkPEMy0+7QVvsk1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715875},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f7b9b47085e387e97f990d8695971b51d7f7149a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a_1704893088877_0.5368670892571952","host":"s3://npm-registry-packages"}},"4.17.0":{"name":"@strapi/pack-up","version":"4.17.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.17.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"aed0ae64c26e127dd800b7445e1b4be9959a3883","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.17.0.tgz","fileCount":102,"integrity":"sha512-TBrsL+7Vp9KiEB+wVQ0lkHj7p0563K6mvP4e01iTEI1tzDAA08pYtUY3mpyL8fQWJWPt8qZPt+rk+3kLAJiEqA==","signatures":[{"sig":"MEQCIHh9Qua/v9L8e4lNpVeczXKcCiyp5K4SUzu1aI/B+D5ZAiBSA1VV8DUQux4zfRLegvnI+6+rI2kfAJAMlnylJnHFgA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715716},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"07112073ac7b4ffee57b911a13981bea3e6930cf","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.17.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.17.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.17.0_1704894496433_0.6667555334202966","host":"s3://npm-registry-packages"}},"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90":{"name":"@strapi/pack-up","version":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"73bbbde178f09568d4006a5b7f7ea4a226149dec","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90.tgz","fileCount":102,"integrity":"sha512-r6BuLDxJ7SqSrmiuuNci/9QdrnZRRw7fsH/k3/J+/zF3Vih6D4HcAt49p/7BN6c0qRij5+3rqZTQGvYMvV/qXA==","signatures":[{"sig":"MEYCIQDuOLukChhwQM2gKtlUL+7LiFgA5SJL7AIEXCcCiamLCAIhAKXZscP1Isud0qsQLKu/tcyF3mWQaCmWQqauvqRLWZxD","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715851},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"09b9d36b22a205d90c9303f2e37134938cf76c90","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90_1704932631452_0.27971743737611554","host":"s3://npm-registry-packages"}},"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"9ce9a84d2aadd614b75260fbcc8622eed4119fac","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b.tgz","fileCount":102,"integrity":"sha512-DPW+kJ4nUPMDoBOiv2u3kbNPGs+IvUx4/e5P3CK+oVVv06lQF/bBN5Rxn/XH7tJMFXK/CDm1z76Taaj4DHQxHg==","signatures":[{"sig":"MEQCIB9Zk/xg8p0z+FaUdmwlkM/rN+lovbQW20cMLMex8aYcAiA9DKKOWOHMhnZHI1U30BEdmcwjSeK6tDwwYfzqTe2Ekw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5e40ce9194648ea13fe5221e82e4b94cc565671b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.10","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.10","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b_1704977445281_0.8818546851510292","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7f384cc7e1c77b2327a2ac2bb6cfd5f0ca391373","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb.tgz","fileCount":102,"integrity":"sha512-rhDANUVfRbl3Kb7qn6606wuerh6jPbr5xUFJLarmDoXqek52jbDioPwHWj9qsVu0dAy+KncuyxQ+7oSonjKowA==","signatures":[{"sig":"MEUCIQDcUWvFfa3P+s3choPmmHQDet59mnzcwYsSmIegMQWmigIgNIKyjx1P6IMZv9+sQK+xlpGBc1GFlVRl6o4e2WpMryU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715907},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ef6c82f357520e2653764729cb9db745fee1bb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb_1704978163968_0.28989879110340033","host":"s3://npm-registry-packages"}},"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":{"name":"@strapi/pack-up","version":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0da9ba222ae727b38b47f6178360ddee8beaf0de","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51.tgz","fileCount":102,"integrity":"sha512-wwn8GzZyiTdcnbwhLPVe9i01W/V48u2pNt2PERcPshmdUqyX83vjgTCAgT//dhbFfNqcw89Xyp2pcs4+feWd1w==","signatures":[{"sig":"MEUCIQDpp2/4K7BKRyN0dTwTz6ZPQOiUJn2cSccm/2pFYoiuoQIgTQedCqwLU0aXs1DYx+b9WHK4dbGtTBGIhHP+hxA6RAw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51_1705019034254_0.5046270704482183","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"66b0676758082e39027111314ff80d9afa085a99","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51.tgz","fileCount":102,"integrity":"sha512-urY2MhR0DdXZr39Rdo+gddZd8M8MOD/fRyU2D0FYrlHkNX5MKRlXf0J0+FjfZHbeyq56IxCTQdWxVppTDc4UVQ==","signatures":[{"sig":"MEUCIAohrzDuoNFJ9j1T+3GIAmJ4yz+aAPs+YXNwuweS4XYrAiEA8a/c+gMKkO7a3mz71tJb0n30aZeFWmQLU2x0C9LcX7Y=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51_1705050385710_0.6355115877091022","host":"s3://npm-registry-packages"}},"4.18.0":{"name":"@strapi/pack-up","version":"4.18.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.18.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"68f588b345c87c44430c08c7383d5bed83d8c058","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.0.tgz","fileCount":102,"integrity":"sha512-TkaVG6sLkIar2CzuGGRtq2zc7ff34L7M5P5YbF+0xAXoS7bCihpAvGH9dEBqBcFWf64ZtCDWEXrNbJ+pqcneBw==","signatures":[{"sig":"MEUCIQDxJ5VFZE7XERhMdo0a41+Jmg1S0P1aINAeT6fTcxniDQIgS1Bri6hJjq0fNrdkMDAgX2PHHasZLBQ9Nip6reZd52E=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"deprecated":"“unwanted","repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.18.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.18.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.18.0_1705053552596_0.3078029053353857","host":"s3://npm-registry-packages"}},"4.18.1-beta.0":{"name":"@strapi/pack-up","version":"4.18.1-beta.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.18.1-beta.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"047c8d7ae6fa6610d0d0eb78630a3521d98009ce","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-beta.0.tgz","fileCount":102,"integrity":"sha512-Vf9QNpzfOXAJ4GY6jdnH5My0cmfSX0lyUBCMEgdjlaMzakVQie2/zZn5L5y+OpsOwrfEiQsIJMqQzb0zJf0wMg==","signatures":[{"sig":"MEYCIQDmKFckGTHISvpFNsjz6G7yWa09VBhojE/aHxV5znyEaAIhAMAfa5Yb1LoY2MCgD0dhR5ZybTJPRAt0zpG7PdoxOia6","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720668},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.18.1-beta.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.18.1-beta.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.18.1-beta.0_1705056235839_0.045062497229251264","host":"s3://npm-registry-packages"}},"4.18.1-experimental.0":{"name":"@strapi/pack-up","version":"4.18.1-experimental.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.18.1-experimental.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0e3467eaad6b813002487a9bb29f2ee78f9a6556","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-experimental.0.tgz","fileCount":102,"integrity":"sha512-OZFPUo+F7zrkuiquX46Z95+1TJUdt9dZWm//hOu7qyrhZYsYt4JuQ5lE+pV7RaRTzeB+Wg2gduUiuRP/7XXDbA==","signatures":[{"sig":"MEUCIQDjrMzDYPGxJRUYxmaJ4HgYNsQCfPjAt9pGKQTmrBkT0AIgEfKKgD+rYJoB87zIkGPIoGskdLBYZQ7/jm5nDzj3p0A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720692},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.18.1-experimental.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.18.1-experimental.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.18.1-experimental.0_1705057663398_0.33719513634404485","host":"s3://npm-registry-packages"}},"4.18.1-beta.1":{"name":"@strapi/pack-up","version":"4.18.1-beta.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.18.1-beta.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b9a4492bab88981f44206bcb2cce993e12ffba20","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.18.1-beta.1.tgz","fileCount":102,"integrity":"sha512-YW8i2yGnpDUPXB31MulJ+NC2rM6uW7dEzNEFX14TF4IoUfXJDBccaV+zBlD4U/OIZ9HvWLuLwCrFaW7+cawkSg==","signatures":[{"sig":"MEYCIQDzvmU5FMPOd2Kgg+rDyuQE67t1Cmqyj73Sn/Ihz7Y4SwIhAIi2pEq9cHE2v7G6Vgb+ojPsVp6Hlx+kiILaXP8/VYqQ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720668},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e1ede8c55a0e1e22ce20137bf238fc374bd5dd51","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.18.1-beta.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.18.1-beta.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.18.1-beta.1_1705058186885_0.39174710609853225","host":"s3://npm-registry-packages"}},"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f4afcb911188a0fac45639efbe05f0c71e06ef75","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f.tgz","fileCount":102,"integrity":"sha512-/jbyGrympWa1qJJpHLi3DPqPotkqmPJ7K7RMjXEhllBiVuU7E1tqPIMF9MzNpM3aCDFvZTj3X+XLSeNpk5nH7A==","signatures":[{"sig":"MEYCIQDAAkOiz2UBWH4nAzNKBg4KMY56z2uNOr2Awod1Aj7mOwIhAKZMstQ0i7VqIHEWkOEZ1+dDh4F2Vw5VUdRZvCCESIis","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720838},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f_1705070301475_0.9693285647859848","host":"s3://npm-registry-packages"}},"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff":{"name":"@strapi/pack-up","version":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4b93a8c7bd396ff7df1ab5c75e81155d41312228","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff.tgz","fileCount":102,"integrity":"sha512-TMcKSVZ+6ZaN0DLixGubu/AnR4N3vEgQKgtOfbCP/NVFk19HifVPctkdzVPQceNR2tV3AJLOW3xj1N7Y9nXVSg==","signatures":[{"sig":"MEQCIDkm4xFiurLVHw1qAhPW0AV+l3ZJgXI53O3YYmy7b7cKAiBm7iD81B/frZoVB9QsorL8XQs8GA9h162acb1vl9odNg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"37dd1e3ff22e1635b69683abadd444912ae0dbff","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff_1705105409674_0.20875879643791673","host":"s3://npm-registry-packages"}},"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa":{"name":"@strapi/pack-up","version":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"06d27be3b9cb17285ae88f6128985a30d1882c4e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa.tgz","fileCount":102,"integrity":"sha512-rnjTglcelb8spCcxIY5r9JDSkrFyBXNPW5XHwEWZMvHKwmVAd30Jrm21LGx9loK8/AjEiO1aYmUjhPLz6yovrA==","signatures":[{"sig":"MEUCIQCpMXR0C9jf0ZdMgCSpeh4G4aTIwNdqKvLU4X1Li7bptgIgVd1w6tal0YorDVtsLzmg1UcKeROXKEN9GI5U89d28+s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa_1705364621954_0.7286908056681083","host":"s3://npm-registry-packages"}},"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051":{"name":"@strapi/pack-up","version":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"37af93ecbc744689c079a315e60b55da3c75cae1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051.tgz","fileCount":102,"integrity":"sha512-r1085nYS8k2HyEpmyyZqA6K5Vi/63w4OUYgGrzUesHJ7e+0DYyH4qBxWBX1sWZS3LtHse99c29vLE3rc4C4zUQ==","signatures":[{"sig":"MEQCIGQbqzN845PJ2ZZZ9q/RqTt8SEB69YoiHisMK8Vkx8wbAiBWcxrZ0MEZ09PEhIycy4NsVEu09EV2vyskgRkfFiQdaA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715875},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"687ad7e959d10f5a592bf06e35f86bb6d6e61051","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051_1705398972990_0.2737044156379276","host":"s3://npm-registry-packages"}},"4.17.1":{"name":"@strapi/pack-up","version":"4.17.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.17.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"647d91b714e2a1438b4e1c1987de5d26161ad06c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.17.1.tgz","fileCount":102,"integrity":"sha512-mCAcja1Es45rf/hOLpkwVMIcqg8KPpsh29UFMknZ+eHgcprRaq1AQZpQWzVVcpR3xpdPZADs9xMYzDKPl7iSqg==","signatures":[{"sig":"MEUCIQC3s7NsIsju5+szGquvkwEOovn2WBaKC7dFNMYm23NQgwIgeukDk76oAaO9RoLfe0tZG403pCuQ6S+0tpoxyUcFVZI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":715716},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8f2c1c1fef98ce4b83240d60b1a96e3a41926a78","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"4.4.9","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","@vitejs/plugin-react":"4.1.0","browserslist-to-esbuild":"1.2.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.17.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.17.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.17.1_1705402255742_0.5865944813071522","host":"s3://npm-registry-packages"}},"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":{"name":"@strapi/pack-up","version":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"971c5fcae98a6aa226be1f9d6f9c1cf3d2aabe86","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027.tgz","fileCount":102,"integrity":"sha512-JAfXiOL84NeW0ThqdDlFu4hjvSxLIzIb32gx3V9HoNL2ngY5PGiGnxx75pA+qU258ielo/qShULsp+l1ORpPpQ==","signatures":[{"sig":"MEUCIGEXBEdRZUVHRBhjrGQpAx2pgWkOBQnpYLOzYN4j9zx/AiEA/fCS/hWH14uhqMPno7ARHYiey638LBlu43Ggsh0w6mk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027_1705451041576_0.7459824844160357","host":"s3://npm-registry-packages"}},"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":{"name":"@strapi/pack-up","version":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d440adc18174dfed4cb5da86305e8e3a5ef34e23","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027.tgz","fileCount":102,"integrity":"sha512-nVI4drcQjj3CCAWtrjN0fyYgt90vDxjo33jaI70ukB++KjMdktNHnctmbgUYJ2FtM877kfmli8OHxFfvHne5Kg==","signatures":[{"sig":"MEYCIQCnwd0a43JpEKnKQEmcYuWVKUpd6v1Tk3i7trDKm9o8gQIhAP32T6s4/iNSGPOz4CF9Vc6K2uzXDD0bWbfdZEWO7GXI","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027_1705484811162_0.4292845816291666","host":"s3://npm-registry-packages"}},"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d8f2cc052b2228d246f350dbfa959a9d28069296","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7.tgz","fileCount":102,"integrity":"sha512-U7545TSj9WiqNk3bilhZnbi42j/6HgIpzdHbY6Wv8vJS+bCW5rfWHvwL+X9dpJXM4NHXuXVWeVJ53N4ATXpg5A==","signatures":[{"sig":"MEYCIQDua6Qkz8AraCI+EcGQaBbIiCa7UWqJAHU1YkovN1YQ8gIhAN3h7Irl18KpZ2PInHMV8jm4KEHaq1qc3acpmQBjnyxy","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7_1705489488599_0.5232695200791126","host":"s3://npm-registry-packages"}},"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fd82bcc14f339c94c5fb34b9d231c01a531f40bb","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6.tgz","fileCount":102,"integrity":"sha512-TcHdyakVJQqhXylL0k7gLNHegHHdBgivywOMOjAznLOVBL+2BPYpmDh6oLeVyWoSizogaDfWwBK9qR8D2FHv/g==","signatures":[{"sig":"MEYCIQDeMn1aoeQ5AHtAcxCfKj6YYKy75Yvxn6OGb6pVHA84EQIhAP9Wc9l90J8+XSvkH8aeu4RMhJBloOuoGcnqe1IW9kME","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6_1705512307299_0.8205377209005085","host":"s3://npm-registry-packages"}},"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21":{"name":"@strapi/pack-up","version":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"6f6269c0fe955796516a2368ec420ee5d91ebb5d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21.tgz","fileCount":102,"integrity":"sha512-pedqIR01tOpemHk64fuBFm/d8Vb83RA8//gDxvZRGj1IVQSzQZV5/PocmO2M4b2dWnQ7W9SxEwfUa/0m1e1TZg==","signatures":[{"sig":"MEYCIQDWxkfic2Rml6V3RhjqP+l3GjY0fBR/Bb3/CtLdm6PZ1AIhAK7Zvp4irEOgZsSqJAjWK+hvXTTuBAELhH4HgN2q5CRD","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21_1705537419671_0.5737677145478277","host":"s3://npm-registry-packages"}},"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689":{"name":"@strapi/pack-up","version":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2322adb72b96aa1d5352b39d854aff4765c3d159","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689.tgz","fileCount":102,"integrity":"sha512-B3RlUr65Kp4Iv6DRld/K1A9asuMf3dMq2JBUP296EBfCKG88lGoaVN0pb5VktkKbQiQDAVEI6Bak1YZsoAmlvw==","signatures":[{"sig":"MEYCIQCEVglKmsqhT72PK8IKTlh9EsAEy7Cd0O6MB6xaAUfZRAIhAIi40nAIYFsu/kUqn5EyOTFqE6KS6RSGoL0C8P8/NQ3Q","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"34a17e37276130e110099cd4bab2376d323ee689","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689_1705623837386_0.6094097833362122","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c5939e885ae8bd221ee82332d7e0c679d3c0188e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9.tgz","fileCount":102,"integrity":"sha512-iZOOMU+VOsPf0/ITs8hr/6LMQ3aciw3OSKV+KVKL3rZ42GrFGNfTGJZi7O7/XAokXMRUdufDEp4G88Knm2jsbg==","signatures":[{"sig":"MEYCIQCfcSKTqcKJKzNQC5VmNzhSkd8ZEIzZEWgyo5R6/CiA7QIhAIXBFWKjkZUReurwrR/uh9KoFT+J1RLBwzGL9wHKtkfa","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3c527bc5bd8ee4363868445061894bf79a47a4d9","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9_1705674738197_0.12686807714012915","host":"s3://npm-registry-packages"}},"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d00f050237f2c61e5b0ff2e5492b2e8fae3fb05f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a.tgz","fileCount":102,"integrity":"sha512-oz47h6d1WuQiABV1aOYiq7XH4cWEHhC+ms5UAGx7d3TsqjEdU3FQrBP6DijKrGivCer/tKBn3ijmSkL64gOoeQ==","signatures":[{"sig":"MEYCIQD1Io0RVV+RGQtsSSmJ5AR9tTxFfvhkhWCVAlfbWUo0eQIhAPiS8yjvFGc3LiuX//b/e8Rv4tMMyniIiFY5i8fLkGB2","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a_1705683090091_0.13035820337339588","host":"s3://npm-registry-packages"}},"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164":{"name":"@strapi/pack-up","version":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"384f2b2adc68ca0b954004f594d49769d96a72a9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164.tgz","fileCount":102,"integrity":"sha512-vOXDE6ZWOZHI07pQsSlRjITk06TGIsvz4pBuYo9LrfdG5Xo1EMyiW7w901oGH+8kpk3MUEJQAdZgo99amFPHjQ==","signatures":[{"sig":"MEQCIGWz6Lpwe+qqXmbz7rmqbcygFf8O8SrE+tFOAZEF0nYMAiBTVzoLaNK2AXTI2tUW0zH8BUi+9/C9g/j7xCrNbG1JEQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"27295f2164080cc40056b9f415cca323cfef6164","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164_1705710194779_0.46392334261714296","host":"s3://npm-registry-packages"}},"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204":{"name":"@strapi/pack-up","version":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e4e1295831a9d473e1f36b85c704375c1f875c6e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204.tgz","fileCount":102,"integrity":"sha512-vNT06ltnG/kFOTLZkzp5tdh8Z9YTGc698o0fbAUdGhBE/IYzPu/VfLRRuCZqrnS8CIsETjTn6q6s2pOyg/UDaA==","signatures":[{"sig":"MEYCIQC1pVVqfiXqJQJ6vjIeDRrx6gO70WboL/oZ4h5JsjyBMQIhALEpaJB2oDztvdDas6HSorkXrcflsmI+B3LiRU2PDxyZ","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1168c576ca50587b1a4377082ee09d2375410204","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204_1705969483179_0.8139285783083638","host":"s3://npm-registry-packages"}},"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"83369fa0138ef98faca77c2fbdca769ac8ea76be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6.tgz","fileCount":102,"integrity":"sha512-Y5G8Y9hc80s1fQ8Hw0MQ36/r2/PIYRioVDwjpuDyh2GCmuv+psFhgDN7zzfXsu34u+0sSr7aTcisV7//Er2ONw==","signatures":[{"sig":"MEUCIQCzp4AhB96twSvwYQPZ3MTqkwProuO0biIN80LkNjfZDAIgOu4nTKZbBeGdsSK0F6kEuV2i6riGOR2/pvceafUvVBI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ec073775440bb4757efb5a5d846535ae950fe4a6","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.10.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.10.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6_1706107096765_0.0033053728434904173","host":"s3://npm-registry-packages"}},"4.19.0":{"name":"@strapi/pack-up","version":"4.19.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.19.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2c3511735ab88940747946138bb5ea15032dad72","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.19.0.tgz","fileCount":102,"integrity":"sha512-d+yP2jrUiBfJ436Ma6BiIVQx8GuRIq5lxkwXvLxv8Z3mn5nG2Rud1R1rtGJ32hEDfddrf8MqJ0eu1Pz4AaWgyQ==","signatures":[{"sig":"MEUCIQC3+Vo9+Z7t2rrBxlvC76IAQ/PSH3obc+7fGqMW3C1cBAIgEmGb9Z4/w11XlZyrGaANa5227jaiT9BgSltltRn61i0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"beec78649142fec14b075aa3658c515ea2fa9257","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.19.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.19.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.19.0_1706108446563_0.37806512268849723","host":"s3://npm-registry-packages"}},"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59":{"name":"@strapi/pack-up","version":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c75b71b20542b92a6c0a367579e9e565f005f51c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59.tgz","fileCount":102,"integrity":"sha512-gj6+ncEOr9qlWvi6oQN0B49dYHqEeaFNjoIP80NA1Ovita0LWT5maezn6BuY2nUfvQGQZ9uriLx8qtnklbYEaQ==","signatures":[{"sig":"MEUCIC0e4aKtN4uCYLHZMxQhDL5x8GS07HIaIN5S6VBiKftVAiEAw96xlbZW3VFJRJy1yembDWjkPTKQbZ6n4fMFWg4X/V8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6a58621932ad3d83bf9d6928c1871e7906adcd59","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59_1706142237179_0.1462445311560756","host":"s3://npm-registry-packages"}},"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0add02ef9d710be9f3074b04cb677c1f5a7fdae7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e.tgz","fileCount":102,"integrity":"sha512-CUMXIULNKyN+cLmULESPfB6LMJxmfmdIC34HaPUI8HvQ15HeBCMcskkBhBCkKtgB3xR8zVkTzDSHx6BDPukNZw==","signatures":[{"sig":"MEYCIQCmtpIeE8GPaMFNdNu22zW6VS60aDzSGmX2OyJg2lfMygIhAJdIU+wwyoGLVb+sIM1Yaq5GloBmcewQ4bph6vwzJax9","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8c0ce630983672c5ddb15e4a853fabb826def95e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e_1706265542738_0.38309873461609856","host":"s3://npm-registry-packages"}},"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4":{"name":"@strapi/pack-up","version":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f3c75d90488b90d28ca267e50359828576c67bcd","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4.tgz","fileCount":102,"integrity":"sha512-6qwb6F3Q/2RfZ5wrzFQn4T4F/F9kuzB2FP738fo7rHjjlwSo0NMumNhwR1ID6HE1jKMp2E3tpuavcdhX3sLSfA==","signatures":[{"sig":"MEUCIDNWNmL+AnUHmUbs06GGqCtcnCBPXFbo24TkxcKSZM68AiEA8j0NjbmhgnDa/ySu4dGzesGfEwY1PXfkHhKooDM/Vyg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6d59515520a3850456f256fb0e4c54b75054ddf4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4_1706314922509_0.23799552440210237","host":"s3://npm-registry-packages"}},"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653":{"name":"@strapi/pack-up","version":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"777e80ad883b09cf48f66c9dfff3b38a9f05ddd7","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653.tgz","fileCount":102,"integrity":"sha512-RjMYyZKbGcSCSLbmHEJsV37sPDssxL1K+AuCtbO9KJQO36j4z2HX9RGVDctJ04SnEzec4vCGxYvOvJGW7qIO7Q==","signatures":[{"sig":"MEYCIQCwjF2MmT+pt3p1lLuY7BcrAda1or8tBOCgHrFs7YNcywIhAOWFOAGPGv+O3+DeeFga6Q8QBVsBZ56l0Ganfg3grcJ1","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3844395bef7efa05c25c6d4337306935905bc653","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653_1706574137071_0.23404563009861246","host":"s3://npm-registry-packages"}},"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2":{"name":"@strapi/pack-up","version":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e002f5dd6b9ef892212846acb26995a946ad3319","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2.tgz","fileCount":102,"integrity":"sha512-trh44iPt6d9IPHYEnABUefNvr6y3KeQDQk141zpOG7oh85pxO+aVYJgRngj+Le/YkkJCkfRUtk/wYKjlu+SwFw==","signatures":[{"sig":"MEUCIQC6j5yiue5qTaRs6J4C3OaCOvrxUaLx0tEPW2piJ+sBpwIgfSPpLO15GzQnK66beo3Xpt/9fXI8L6TBxQZeyoNvmKo=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"cae3a5a17d131a6f59673b62d01cfac869ea9cc2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2_1706626278965_0.14171023908008973","host":"s3://npm-registry-packages"}},"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611":{"name":"@strapi/pack-up","version":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bca7e113f868b86579aa81dedcc6e80c870bbdd2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611.tgz","fileCount":102,"integrity":"sha512-XFY+BvNTv+cVBSTLY8Z8N78WftaIORl6DvPFMO7n6+RaqRRTek0EnZwd422C/BZ9SKfyj9WveBrTpyFqmtR0ug==","signatures":[{"sig":"MEQCIBJnH8u5zXR/yUxDWSOx/uz7ZW66RYLk+tmIoEc7VEoCAiA2LtLisPFEUlQ24uah0Bl53fri9dz9KuO8Gui9F+iJ8A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0a7843dbfbff3628c1a547e687ca05eefe4ae611","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611_1706660572550_0.022705309335134816","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"75fb359327ed578dd4c8f62d995016695b3b1498","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653.tgz","fileCount":102,"integrity":"sha512-e8M82E+nX9Lvg2ZbUJrr0s/D6Rq5WWGWloaZBmI2eF8mWUDI0IgwwQQaBG1RzIJaBrAijq6zGLS7EvTZGIotVA==","signatures":[{"sig":"MEQCIGbGzkztKZn8n85ZpTW/S5l9lCBxCKQs/ZldUr1hPpCsAiBToa3IVAVOn+WPDDA/XwAZhZHp4b/3KoL9xxhikC2bEw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3844395bef7efa05c25c6d4337306935905bc653","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653_1706707227712_0.708870040521483","host":"s3://npm-registry-packages"}},"4.19.1":{"name":"@strapi/pack-up","version":"4.19.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.19.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4154d6051a8eac72e439ed5a08df692d03502971","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.19.1.tgz","fileCount":102,"integrity":"sha512-IlDNdHLlxZ9fPcphEUvy94i743yUmTgk4EQzWek6FgbSBFUwJ0YhrS5UMWpjoYc52GChumNArwezAg26GiBUEw==","signatures":[{"sig":"MEUCID7GJcjaeXiVzXMdGiSnVavxm4LgXk+00/za3Hc/EvomAiEA0VF7kwVn766prSIvQmbrvETVKD3XaVJZmbkwwtn82DM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"34f7e875cdbeee1f75a46ab733b7943eb518f47e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.19.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.19.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.19.1_1706708624421_0.5328715996672939","host":"s3://npm-registry-packages"}},"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242":{"name":"@strapi/pack-up","version":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b1b8c995ea34cdcf29d9dc7699f104513f83c42b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242.tgz","fileCount":102,"integrity":"sha512-N8QWa1Uicm2fICUBJ90kgBHyQshxJtSY1AeeFlWlyJLlDBALWToetws4aANKziEaOsjQm2QO/L38hTJF8PUjnw==","signatures":[{"sig":"MEUCIQCoeO72jQESEbv2HeHhF9S29Vfs9Jngoq+7wRPEjAtibAIgJo1UDY3CjBcLiE15Ayr4Ggk8wflfzAR2oYCDOStmkUc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c5f067b5650921187770124e9b6c8186e805e242","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242_1706747007976_0.09953373936345988","host":"s3://npm-registry-packages"}},"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84":{"name":"@strapi/pack-up","version":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f9f3090d804494fff471c01ef564978a6d1b64a2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84.tgz","fileCount":102,"integrity":"sha512-Mi8E7ncncZUbzz9XdWJQJWkTvhgLYQyAmVmkYxbhgUYN35D0hhgjm7rffzLQfUjPE4iSLeCipiw+9Zp0qA+ETQ==","signatures":[{"sig":"MEUCIGjG+E/srfJprz8d53pzx/6s7lF3jhtXnA+jeo1urgRYAiEA/onLiZ2b2QqUJYTY13G2qhYw5JZO+sjHRvTWRXMI5t0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"504ae21185714e6995d2bdd6458efe2e20371a84","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84_1706833341658_0.47476734391353204","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7ef31452cbd8e20aabd28e8e8a06c85b10b6587b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e.tgz","fileCount":102,"integrity":"sha512-KhH0PRm4r0qh6Ti+w9ZC8oqWCgVopg0/V2TwHA+VlE0mLVycDrYiKSDLay0MncPJZ5VEtmiR/YgW788cLZ3yJQ==","signatures":[{"sig":"MEUCIA6RlF4wPNC2UGFaA2oLqoG6KS3yWRLHI4a24ady5OWGAiEAjtsV7e/y4TeA76FMsa8eq60NrnKkf5JVDn3tfhD5sIg=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3f7b2587c5e3d548262671895cf11d8bf8c9166e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.18.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e_1706879437838_0.029986011431912152","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"60d5536227d2c34ec74a37741b4963c8c56d3bf5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c.tgz","fileCount":102,"integrity":"sha512-/09VfuQTuk6u5kfMmFydVxuNIdB0JKIoIHsXNauIcU8hjAmeffvDePQr7uDNZpDh6uxjAo4NoFodkmCMQDVdGw==","signatures":[{"sig":"MEUCIFQ/Q5ArQSH+wCDJ2DzG086B0MXCxOLWkjJ45S+o5QSrAiEA6glr/9P15rFqGpoV8/ZLhwh74r69dzK6vJ7UOUpVmvM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720540},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3f7b2587c5e3d548262671895cf11d8bf8c9166e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.18.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.18.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c_1706880896424_0.9875174919537912","host":"s3://npm-registry-packages"}},"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f":{"name":"@strapi/pack-up","version":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5adf03e34cfd5ebc26cf69e4bd0cb13b9e97348a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f.tgz","fileCount":102,"integrity":"sha512-Su2EyAZq3fMYaSKYkIFuPnnh+po3Tnippa0ftdCJKPdybNTaE4lDvl/FV745ALtzHlEB/XCqfCLe512EgL0ing==","signatures":[{"sig":"MEUCIF4YNoB34skijURO5L+NymtHG+8++Ay/tMrAYZeXCWPCAiEA9vfiPgq/D+V41i5GjmDQWCFttPGf+Lhcq+KfrEuLwa0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"44f19b3d2f81d983c343a219aa2781ee0deecb5f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f_1706919768578_0.8799553700588691","host":"s3://npm-registry-packages"}},"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1":{"name":"@strapi/pack-up","version":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b44fe276955c41960f3b022e2442d07d20c4b96a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1.tgz","fileCount":102,"integrity":"sha512-Z29B/gLTjLLtgUoD1AMI/t8MiXF9zU7ER3lp8HuuTfHmP77LzvMx7UgecXMkCL+E5917vYTnd/LcrRdoaJPtRw==","signatures":[{"sig":"MEUCIQC/oEA0HBkJdwjNrZycEAtoZV7nHeHAlHhgRCVgQ0Z5dwIgW5a/3SRyGre37X+u8S7qW0GHISPjKyy7Cv9TjR3QTrQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"287aae0bb4a682fba312332372895dbf8e032bf1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1_1707178945041_0.7720785130601482","host":"s3://npm-registry-packages"}},"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0":{"name":"@strapi/pack-up","version":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2bf1dafb3d16d561b43e2080532e5532548502be","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0.tgz","fileCount":102,"integrity":"sha512-1R1FaVkyQxrcu4ywWKEd6VtSbaNG0XbdABwFf0V4VTIdiJiMcQeRLl5YaFYjWEH5dPEQRV+wPPXagEWK9zuv+A==","signatures":[{"sig":"MEYCIQCb1I+VC5AcvlDqyk9NE6i8QTfM4QXlfvubsJ172wpz1gIhAIf+Z0ad3CrNcDIWggsPJYsL1pcV9Ly5fmSMv/uWqtJi","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"6d384ed205b7f0792d9bea79195f01b30463cfa0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0_1707265302799_0.42141335967999494","host":"s3://npm-registry-packages"}},"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"275c46f4204c9a412503d3c60e833b9cdd33a755","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f.tgz","fileCount":102,"integrity":"sha512-O56WOXdpanhrmnXRi46w0yy5muOqqhp+a8wFNXQ6VzKCIFk9V9dWp63YPu6pVZ6UBKyCKN/5OsW+mWf28Awfmw==","signatures":[{"sig":"MEUCICjlJs94JPXDeEkTAdaF01OLwjyYCYiGxjLbtdg3EMW0AiEAtuUZJOol4otRAKZZlTFo8ltpvM56SDNsXn+tkt3CZo8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"519fbba45412bad5469a604191f80f57bbdb896f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f_1707317726419_0.9325882675200534","host":"s3://npm-registry-packages"}},"4.20.0":{"name":"@strapi/pack-up","version":"4.20.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a9d42e465efb15914d2e6e409c63de0d8a3db812","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.0.tgz","fileCount":102,"integrity":"sha512-YITvQSUGVxDKGp/Qu7CmcvggjvDlQLKefy9fL7cxh78eg0trOtcpgtmywuYd/a+UNhRJV4F0w6RjHJCD4OGzbw==","signatures":[{"sig":"MEYCIQC0ES5Z85uiIVMWpAJG2TmC1eu9U6w+RGMhjFouWpJYowIhAJfQRi+LcrGMQLkg/otJMU3GjkpePFIyJGt0U1tUo2+P","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b0d94f6dceaf9f7392d144dd44421748d506e2e2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.0_1707322405960_0.4630774999700067","host":"s3://npm-registry-packages"}},"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b":{"name":"@strapi/pack-up","version":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"005062933b8470c1498d7fc052354f1348eef8da","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b.tgz","fileCount":102,"integrity":"sha512-F36tJti9qofbOlZn60z3d6L5wWSXDyGb5QJiC6sqlB3BdE0s2q7TONjy6WM6d/SthKILBjz6JNCNqt1QJIqLXg==","signatures":[{"sig":"MEUCIQC544YmVIZNA63fdTZb5Ej74fxfba8hyyp7DnmWRCoXtgIgWksj4JZr9YUkPWYRiSwqbYxec1skSyg8vEHf7ncukZc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"60335b11eca9587b558035fe9ecca90e05db036b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b_1707351743462_0.3638041181473144","host":"s3://npm-registry-packages"}},"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b":{"name":"@strapi/pack-up","version":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"06c097358314321e35296d433ae025045ef00c9a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b.tgz","fileCount":102,"integrity":"sha512-fOuulW8MVXcqDHJOuHY4ToWmle5wAIYra5B8LPhUSeiDy5tMefl4lB8zECNZhZuJlvPrE4FAcUX2mGmyFUKmIg==","signatures":[{"sig":"MEUCIQD5+YRmhc+6mwHEtgEnbhyme/v/t6jFmDUx250SXSTLVAIgWU8iBm2ZlbFz/L1nXaIZe1chMTyVCC78ZdI9Hh1nvfU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"677a639124e715b4bd6bb862d1ef6536358bed8b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b_1707438147477_0.013994703911255568","host":"s3://npm-registry-packages"}},"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed":{"name":"@strapi/pack-up","version":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f6621b3cd3de1f71de280884a6b5387cb3aaee78","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed.tgz","fileCount":102,"integrity":"sha512-8VXFhBLAVGQfvmC28cqqwWTrTNdJctp6qPIum+eM2TWAJLyHA1UHtqrVIGHm5HyWHbuGyJfN+5oI8h7gQzmBwQ==","signatures":[{"sig":"MEYCIQC64i2lm6pRHDXuZ6W9+inu3vIpDEKZJpgeU+1OWPQ6CwIhANnWI4VwqVpnGiiGUsl6seoACvHqhtoM61/SCtPuqYDn","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"90a86f595c31de9a89f4255318bfb0cccb30ceed","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed_1707524527010_0.7357134375171619","host":"s3://npm-registry-packages"}},"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"713edf38d17461efab4c6742c0f3d92f22f6462f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0.tgz","fileCount":102,"integrity":"sha512-W25XpE5cAx6N/r+2HdmvyEl6PkJWLINJxFxQh9mIq+CFV39GyhHAcrmvdfjz0TzbKTYXM4y5emVJSlt0NUCeMw==","signatures":[{"sig":"MEUCIFIY7fZlpZ/j9zgHCzh/iTHUKXCevgAOUCpMLUmaKY/SAiEA0fFsL18tEr1dW32k2JhuzzcUDVC1Xzg/5WxgstcoRGM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8f1f62600f67917861bf1748cf7f3138e781b5c0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0_1707752011321_0.4014869816785658","host":"s3://npm-registry-packages"}},"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37":{"name":"@strapi/pack-up","version":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"33227aba833573d76b5d45b675339b97d630998c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37.tgz","fileCount":102,"integrity":"sha512-VimAk6WvtHWSdS9vLzzyl/Jygx7mPfkXo3hSIV4oSyt6ZaeJSWH1Pff62C6OTyzsr9IAPRMrcvDe25kS9SSC5g==","signatures":[{"sig":"MEUCIH8eTMN4QsaXZyW8UEtJX1H3884RkEqJkGp8p+DFQ/61AiEA0Jbfghohz4NGDKu2zXTBOru878G6/F23I2iUuG+rW/o=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"aa7c7ec6724534e157d8a23fe85ee8318dabbf37","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37_1707783798750_0.045070795623937565","host":"s3://npm-registry-packages"}},"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed":{"name":"@strapi/pack-up","version":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b12fcf20a77b1ea9922a160f5f23deacf11ebeae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed.tgz","fileCount":102,"integrity":"sha512-XBK9Wc3kRQRBBeWisDoIuc1jmvM3opAdWdVHk0T0vUpI/R2+lQglk5qzeEXlsFw2oyggzz0UCvII84NualbXLQ==","signatures":[{"sig":"MEYCIQCgqgtUNk3+dBxEzrW8bdpbHAJVtRG7jXNjCSQ6CmpXbAIhAPYOm/FepmEN2RguPYhPIqRyA+wSCOF2i1CDfVkDkKg5","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"95a939e004e74915357523e3adb118a31fef57ed","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed_1707870153317_0.6821152879538073","host":"s3://npm-registry-packages"}},"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02":{"name":"@strapi/pack-up","version":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f9047c34cbcdebdc7fc891d3c01dd3289acb9fd8","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02.tgz","fileCount":102,"integrity":"sha512-7koTXHrM8G5KvLheIbcAMMS1UB81UaNpKUeA4xnsOJGFTUtOSpAO/cbAdLInba6M1YL203JvIezParkmuTqZ8Q==","signatures":[{"sig":"MEUCIAFnAi/re20o3KqRURf1HF89OVrOYZ2O5odCNEFuej6jAiEAizksjEFE+KwPew4tV04IDyi9efHSPkLSU03pgYgn67M=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"73f815eb1f316f56cecc0cb70e627d00826fee02","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02_1707918547120_0.38789203245923165","host":"s3://npm-registry-packages"}},"4.20.1":{"name":"@strapi/pack-up","version":"4.20.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.1","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0f27b3738bc22973bb38fac2231c9c62c021af01","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.1.tgz","fileCount":102,"integrity":"sha512-f1iZAgmTnh7gmL8ybqgU/Hsublo1Eavp9SNlLjM4wFdW9xmegS3A5RS1F9upF44l/yvIt7MajYu/ogbpDNyc7A==","signatures":[{"sig":"MEUCIAul3dpEPkCJhgCA7UGVXEVMAsOdBc8o+5l0Jt7KT3gYAiEAyajVVZ7CnFuYWUiJcBt/1OAnTwvJO0gOb263WDupGvs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9aa6e94b2fb58dd50a098d8736f995e5982de730","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.1_1707923643327_0.7303830688361195","host":"s3://npm-registry-packages"}},"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871":{"name":"@strapi/pack-up","version":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"dbc6d6fb486a6f225071bf43451a25d6e9ba8c33","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871.tgz","fileCount":102,"integrity":"sha512-0yuPV0nVB20AlCd0DqHpXeoWTloXxRE2ceSJcc91GVPkHy8YIK3UL+bqqulz2RKUq627gRyJ+yG9XviVao2LQQ==","signatures":[{"sig":"MEQCICrJudPUmm4rmqifeySR0srkdcUX7RjrZgJPG+HqGXifAiAor43V94uf0y3v92z4z98Q99TTCpb1ScEsYQe1DKiWcw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d470b4f75cf00f24f440b80300f1c833c322b871","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871_1707956553948_0.7155285473857591","host":"s3://npm-registry-packages"}},"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602":{"name":"@strapi/pack-up","version":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2d2d8499be05f9b0d406f0a7b48ee885ae4d2baf","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602.tgz","fileCount":102,"integrity":"sha512-H+ZE62KfnJ2ozebGxtRYGmMsmR8cvnm2HLI9d4r5xqg3IPfS3h9kJ2s1duCsL/KfypzHqOWRFyor+h1EUotymA==","signatures":[{"sig":"MEQCIGTCy36us3rpEqozWoqRFh1q+XaJxnjQz9adBEXm6sKdAiBHW+QWk2hnJx/ti4H5jL/eMSNejYi8BrlVR7ltEZ0dmg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7abe81e395faf152048bfba0b088b9062e8ac602","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602_1708129363967_0.9859905594321292","host":"s3://npm-registry-packages"}},"0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"aa5dcd03e7bf629dac2a1f56970b78a2d3833ced","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602.tgz","fileCount":102,"integrity":"sha512-6lAKfcd8T7VmkXu5x2I2hTRNBdBfvZvrOFFn7Zj9FoocA8GzcSin3i2SyPbV+/Ny8zexrKqspO5vEbt/xL/NVQ==","signatures":[{"sig":"MEQCIFZmHtT45q+gtEfWGSBv2/SS4dMfOLdUu+725wJxJh0VAiBeeT0wfh44JnrWz25P9hgfcf1jE0tNyCKZwcB3akQrwQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7abe81e395faf152048bfba0b088b9062e8ac602","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602_1708363077514_0.8855464363326733","host":"s3://npm-registry-packages"}},"0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88":{"name":"@strapi/pack-up","version":"0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"61aabcf044878f1616b70754bc67ad8c4504fd58","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88.tgz","fileCount":102,"integrity":"sha512-7ESM7OxJuscxBSgqP0uIDpyP5mAgiUS/JwxntOsFLHJfM17Isxku2aBbaSPRJHZTpxXN7K9bYcBZNRFX3gPJSg==","signatures":[{"sig":"MEQCIBFdf0cviNFyxDZKyd/WMqSItp69oiJpIZyViW2fFn/LAiAzDjnyfzIMJTPBS7gAyLYmGV4VbcnqBIM/8h9NqD2H4g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"615ae85762cbae9fc80af36685075ef25abd1c88","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88_1708388541660_0.9194638079341277","host":"s3://npm-registry-packages"}},"0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda":{"name":"@strapi/pack-up","version":"0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3854fb274da52d9931ef861802ddc9fe93740916","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda.tgz","fileCount":102,"integrity":"sha512-F8wHemojjFmgBKqBqQN6VT42kKhnq0WerSgzac1fbFpt3xLxdtU5ep6+0+J7Q2yTZPEuY0CoPIc/od0FH6/YsA==","signatures":[{"sig":"MEQCIBkYrPM6CzioVUUl5r55iTvXG3/1XYm4DtvdDE1v7TuoAiB3iZxNWVasvwz3dPGgXeEjE4x32p7R72dgg07r1OMkaQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4af8963f6880c5fb9fae32ecd580f5cd33eaddda","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda_1708474954589_0.7064880520975643","host":"s3://npm-registry-packages"}},"4.20.2":{"name":"@strapi/pack-up","version":"4.20.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e87672b2bcb973c96950d22d0c0d26c690136e11","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.2.tgz","fileCount":102,"integrity":"sha512-khUZasz6kHnHhpyNBSI8Cnut6OQf6oZgDhS1ByhEWNdqfBhMtYyqk9l7vYCjAFIsJzm0xer/3arTanvz6RWWaw==","signatures":[{"sig":"MEQCIAdtSy4mIa9EpFFfga+UGZDBPSnUG4ycrAQxAZAqMxlrAiB0N/kFMumJvpWWDcRVQMfl85hFgo9zLj6Ad23bF4Fh7g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ffe35779036ac894031f0269a9b4164c9d6fa67c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.2_1708522855119_0.7293296167425989","host":"s3://npm-registry-packages"}},"0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb":{"name":"@strapi/pack-up","version":"0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d9014a66faf1b784254a641b94e17917a76dffea","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb.tgz","fileCount":102,"integrity":"sha512-pcWMTPM82Zx56dj80RwS4nAnyfAy8di4WzbMcu2O9VLKkrkcISwJjJ60QWsoUsOAOLtPsFUSM5DYNtX3KGTZ8Q==","signatures":[{"sig":"MEUCIQCsvFUvoX7MI85Y2EVWnX+68oW+iyASW1VsSiYqX6pO1wIgCeBQnXeVf8K5H1qcMogRSmZGEUFklSWPzDkY4cVyV3Q=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"2a816cdadd2ece37767550b2a249c03ef2b53aeb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb_1708561354844_0.1911532730889507","host":"s3://npm-registry-packages"}},"0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"dcb161a7573a85d8590e8a1bdbeacb64c21d247f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f.tgz","fileCount":102,"integrity":"sha512-WEiRly1OESAIUpVcAKdakEXk5Bl67VFzforleMOSScYCafs9aDsFwXIdemDG5ODUCxDp+K5pTaW/Ftp/iuD/kw==","signatures":[{"sig":"MEQCIHvwG+3zYUdW2KrrQ/tCdEiKVwbIcA1nyWfktKgP8v90AiB9R0LzSFBatEWToA8zlAJ5aqFhdHYqtmgKHHoyrG1gog==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"90ca9123352ed07e0a9cedaf4bcad1475e74137f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f_1708612773671_0.4549280707791583","host":"s3://npm-registry-packages"}},"0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28":{"name":"@strapi/pack-up","version":"0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f5166934f08254e6c07328929735858427005f24","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28.tgz","fileCount":102,"integrity":"sha512-OFmGt6aFHmqzMPvDnuhn9+SQoIiijFie0JBqNaQlhk81XEETh6BKI+KoZDoTjFFvfmjVlsyFw+GwM5czgjnpaw==","signatures":[{"sig":"MEQCIF1mlZYw0Xd9gaHuulMJFS3vLHUlpGtCsl+JS5A17gnHAiBt9PpdRg+L+AkBHgxXG1SLOyXH8JEDSEVwVUX5q5bdZQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"22e8a4f31c0b65da00cc6c524a94de53fabc7a28","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28_1708622201166_0.7086634874253139","host":"s3://npm-registry-packages"}},"0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2":{"name":"@strapi/pack-up","version":"0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4d2a41f62ee573cd0c5849a78b8579e1052ba76b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2.tgz","fileCount":102,"integrity":"sha512-mHflVC54LXbo0KFMAPUhUh1cAcb2RrHg66+y2yvxMa4rwK0PiccDhp8zB3fJgn42yppobmu3Zt9YHEWP5loR/g==","signatures":[{"sig":"MEYCIQD6APUna4CsuT2AqHLPNoODR7NFEyUuKQco+kTptgUXTgIhAJeDfwQ9SCCwDncdhlIAOdjfyLA27KhjSF7PDintBorw","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2_1708647733322_0.4888156492615736","host":"s3://npm-registry-packages"}},"0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa":{"name":"@strapi/pack-up","version":"0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5639119852848091407f1f283208d7370927f7ae","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa.tgz","fileCount":102,"integrity":"sha512-Z96+HRYDmgrHY2rupWGDnh183otimWQJPU21XfGD+ExL23GYVIkaa1MS+WPoyn1DBLuc4WKBbP24FkF+y3A7DQ==","signatures":[{"sig":"MEUCIQCLVFyFxv4GKyWFBNXsmeeI0k/z4bqNn2I+WmkfemMAFQIgVA8e0wJRKVhVk/4VSh0waXq9HmMoPl6D+WsTovAyi8w=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"07894142a4fa4572706811ebadeb70a4204404fa","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa_1708680062884_0.18222990846389187","host":"s3://npm-registry-packages"}},"0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc":{"name":"@strapi/pack-up","version":"0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5c00f586ec936301d325ce313e51c8724b6800ca","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc.tgz","fileCount":102,"integrity":"sha512-ijsakLCBcO0dKwjrKc+5jUuxYShlpSAsg6fAYYrte6PzrnEcW1Bc28pzv1I7pXXESNW6htwM3jK4gAE/sD/DJg==","signatures":[{"sig":"MEQCIDqilujcqNZL5/1Czu8k40BFPhLr7aKni5vb+yoS3xAYAiAeCYvjZSfmN07U4ZdKoNDPkWuJUT9bteBJh5P9sqreKA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"85e5d16fda545271971a6b64da8d6e89435777cc","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc_1708689488483_0.37253466679315994","host":"s3://npm-registry-packages"}},"0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c":{"name":"@strapi/pack-up","version":"0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"818fa5824984bbe209fa21d562fbcd06f1b8a954","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c.tgz","fileCount":102,"integrity":"sha512-nWIui8Ye/IheSnFET1lsMfFGun+sTmqvFnTy1dnC4yeC5R5v1CPV8zZF04vH5B+SVIVc0Q8KgJqUomXwbbh7Qg==","signatures":[{"sig":"MEQCIEd/xeDM201hIRe8F6WJ/uzHvRB5Nw5wiBcKNoqFtJAKAiAgyrOMYBW6S+monJMuPKMaa608EL9AmK06vmMd41tHuQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f8af92b375dc730ba47ed2117f25df893aae696c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c_1708734083267_0.5845008618671803","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"79de184876863dcd3fead2507ce98fd8f39ee0f1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309.tgz","fileCount":102,"integrity":"sha512-KmHxx1me5EkEWshCgyTRNRt2VnxhlGqav07CQ/GXlCY0CPkhaaLc1/N4L3z9KpqrZ+nyaKwIOki+8jHV3M1lqQ==","signatures":[{"sig":"MEUCIQDbVFrR0DQY4BBxEBTxGuS7IxHXNRg4dYnZHfa8R/oDPwIgKtOPm4npnMQfYN9p8Ir03V0qNX8goYte99Kz73iyJNk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d4cb32ce579e12a4436d68036f2327132fba1309","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309_1708952577936_0.44227861964683335","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"83f732e3cc53e34019a2cd82b677f47b00435466","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa.tgz","fileCount":102,"integrity":"sha512-0PlJB1WD7G4U71ZAknOJNUOyf34kVMT5HW/tXldzRmesQHlU02qoAiwU1N5QxBN1YBOr/AIsJL5q7An8ywHgDg==","signatures":[{"sig":"MEUCIQCJ2UNnXABY/X1zhUxfx9g9svJgQ+34VRdb/IbS3CGFfAIgAbXSXXzzIiOc8vZLKRC4G8mSTfRt2W84cDDMRb+p9PQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a9e9dcd32607b6734b6de5aff3903288e03c9bfa","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa_1709028538608_0.5566488054375154","host":"s3://npm-registry-packages"}},"0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5":{"name":"@strapi/pack-up","version":"0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5","maintainers":[{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"21d82dbdffca06bb0bd9b5a59daa71bf5f3dd4e1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5.tgz","fileCount":102,"integrity":"sha512-5FIPh2tFaEM+NTZOGrACEZkzHaNvBC5ItvzBYQVjALAlXgp/1QZ4vNqmnaE2Co1NOKlBebE82NghVZXjpUAO1Q==","signatures":[{"sig":"MEUCIQCNhKBDEbv94fZf41ba0mEMeblz9VtA1ARhvx0co5UvEwIgGxOE2OY+vHc4eaEYhl2/i0de1uKLTLPXbaDbD6gEa5A=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5_1709079715446_0.07700590282543263","host":"s3://npm-registry-packages"}},"0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287":{"name":"@strapi/pack-up","version":"0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"666bd0a8e0a667234f4ce8bda001936d6e33bcf0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287.tgz","fileCount":102,"integrity":"sha512-Bj1/WSaw5GY5BbRUzke77rKiargmShVEQQrjBjJMdNZUZx+D26qkduh102GRAgkKPol127ijbbH/wRccz1fjjw==","signatures":[{"sig":"MEYCIQCzr1FMN68/7mpw5O9egcmQ8xNdhXPZnvpO6BB9AhfDwgIhAOMbQcFPvk/KcK4ALM6YlUcwU6OFlISgu3ovZnGQWCmE","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"91a9cca81e831eaf3f22c00362cf672fa0820287","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287_1709130074043_0.8580613478359389","host":"s3://npm-registry-packages"}},"4.20.3":{"name":"@strapi/pack-up","version":"4.20.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"adc999c25f9513dc48659461f6e3d5b56b00e144","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.3.tgz","fileCount":102,"integrity":"sha512-aQQ7FkXc9HBXgIUW2T42Mm8RenZn06T74crR+HmwtAFWrb+B1inT1CyCSyG2T2CrE9gdAyGR9g9VaxcSFjLwZg==","signatures":[{"sig":"MEUCIBxGnXnBg+MMdUGucmzxtBM5477JL8jwEfYlElV6pxKGAiEA8fxmbIoiWdERccauXYjJCrQ1sTD8orJ49FKg+Du7tEY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3d2c2b58b394366c19dfa75981f7cb46dab7d690","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.3_1709130907599_0.5367763405073682","host":"s3://npm-registry-packages"}},"0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be":{"name":"@strapi/pack-up","version":"0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"99bd7c76698cb4d17d02c0cae53b00c51c05e5d2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be.tgz","fileCount":102,"integrity":"sha512-H0n0+vUjePr8IftvqEa88tZP96Jt7yIsoc2QObQRY1CvQ17Ypbv+HBYRBM1kvOa1Opp2QxLUFxUp4E/wbnCISg==","signatures":[{"sig":"MEUCIG8cuRrPJUWEnqk6s4F7qEWKehpYsGLSkQsGNxd/3HPdAiEA5N1xgUOj6jE1YC+ifDVe3vYgiAYjGdERvvlwnAPS6Lw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"b6d552f6e63dec5627cb8611ab2adcb8244359be","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be_1709166156968_0.6975081620691923","host":"s3://npm-registry-packages"}},"0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"176c62b661c23a8ab283530865641046b5177702","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b.tgz","fileCount":102,"integrity":"sha512-9uvVh/QRKe9+l9CLO7x7C0x1k1fxlAGVVuC/tNUVwbMVi3o0SD7eoYzEVgElnhdA1SbZ0d3lGaOodp4CND36ZQ==","signatures":[{"sig":"MEQCIDhS0Yi35U++/oc2YPS8vDqQYpWVvOBTa86mUAWMBDt1AiAHYL8eums45vH42ARocxGxA7kCZwYyYA/DEd3EbDi0ug==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8294852592c0a1fb061c5d3576327fa0e80bab5b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b_1709204571943_0.43109811881960525","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5791ad71d81b3b7a69ab1059eb2e0bd9d3b2effc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b.tgz","fileCount":102,"integrity":"sha512-fDVXP8vRq3TbsXIRGY3mAfh3D12TKS3aKhpokTe3fUv6VJieJtzPOj91GwBPjc+y+fgC4eIo6ZvhC17ts15Cvg==","signatures":[{"sig":"MEYCIQDyHJrJ3PWvGhMmkoqDmuP0Zgr7/oUbOQEoud8JggV80gIhAMDZTiuggYrLYN/LSCBmNnfc9OlCc0vxu490sxuqYf94","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a407f3bc8fb79a53cf7975140864526b6ddbac4b","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b_1709222271472_0.34241442920267917","host":"s3://npm-registry-packages"}},"0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a":{"name":"@strapi/pack-up","version":"0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e25707dc4a1a81c998473485a1aa1a9d81786ac1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a.tgz","fileCount":102,"integrity":"sha512-Z3NwZYz8/XjA2NDHVdqkAe/8ak6MDScuKZP69vOG96f96p7I3vuLvUJqQRL9CoNtLpnhC9tjntngvGYwvs39EA==","signatures":[{"sig":"MEQCIBOqFNxSVjZeIe1Vm6HkXnSX5ChOvViuZQSLKy0UYPYNAiBbqbyWTMtOQgINT5+fvaaX3NzZbziUBt8em+/TsX+WiQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d10040847b91742ccb8083938399b63ffa289c7a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a_1709252697340_0.2995966325742099","host":"s3://npm-registry-packages"}},"0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc":{"name":"@strapi/pack-up","version":"0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"65d9547f808af705f6cb2b0e1803a0dab25198e4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc.tgz","fileCount":102,"integrity":"sha512-HLjwcBUv0VkoeqYkWOs/hxLk5Qh6u2rqdne3FbFbFUvvRBdoeF3WUPdRC8YSd6zFCewa6JTtV08F6pujH12LaA==","signatures":[{"sig":"MEUCIQCwrXyJvQYlHwTCIJH8s6qhIDxpVbwa7oJAvlX36la1YgIgVPibaEQgEsMJEwQBVlgan9tzTKjRduh9CyQgCkel1HU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"73143c28059b343ba62d98c29672ab114562fbbc","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc_1709338887775_0.3715121257872249","host":"s3://npm-registry-packages"}},"0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7":{"name":"@strapi/pack-up","version":"0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"865d2b460c22817307064f03bc2969b80c1a89c5","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7.tgz","fileCount":102,"integrity":"sha512-Nv2F1t4NzoG7J5KYbrwsFvRc+UgXSnmR7QIfXoOXVGE969mkwezf1TriTjWdCbAkGGI4Lb4HdssAOF16lyMflA==","signatures":[{"sig":"MEYCIQCs7JseMUcBi4ZCA3q5TeQo61Q+bheH6O5kYeFO4dPwLwIhALzY4YmA6LCZ8x3SPQtpHECnCjfML6a0qLeLsZKCLemD","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"651a6b8ded3c452fedf2a8598f08c51c214e6cf7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7_1709542583971_0.27611384234869574","host":"s3://npm-registry-packages"}},"0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640":{"name":"@strapi/pack-up","version":"0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a465dd60ed84361c2c9e08b4534580c70bc3e147","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640.tgz","fileCount":102,"integrity":"sha512-Jxmw2ykDAbrNHFrb+FzpdG2dTva0a41tlLTRme6lINQBcMYhJ+n5XJRhBVMqw0T+rlTsN6YY4H3dXigk4QFA3A==","signatures":[{"sig":"MEUCIQDpYDu75DXxvJrCe1SfCm/9J+EdsVTmlgDEWPj3+JZ00gIgSlQpx4fQMf66vwVWtqjTQ0qOaC8SDURPzPTwj0z+j7U=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"20c4c0d0016306a8264891064bd3f51f7dc58640","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640_1709598150540_0.5505628780562899","host":"s3://npm-registry-packages"}},"0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640":{"name":"@strapi/pack-up","version":"0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1eab1371e36d8aec4011db2542d7c45223ba919d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640.tgz","fileCount":102,"integrity":"sha512-7qt46SWgHq3kK184gdf8w81rzF/hkqudeLKzf9K7MpzQeZ0dER5G1VIRarlKezkYy4JOXwJFpT1Cdwl4SJd+KA==","signatures":[{"sig":"MEUCIQCKM7PDwjPwL0ZJV8FbmStwJ2CiEurOtbsPxCzT+02FkQIgM4bHGGjRTJoaz1MKNAEeR4b7ZevodH+aUo/Z0Xmejjc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"20c4c0d0016306a8264891064bd3f51f7dc58640","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640_1709628104108_0.2781952108784067","host":"s3://npm-registry-packages"}},"0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a":{"name":"@strapi/pack-up","version":"0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2d91fbe0abd28857931c6f2dcc005fd2a06a539d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a.tgz","fileCount":102,"integrity":"sha512-MkIWUgXZ37Syc+R1xvTC83s6pT0FiRMQNU7rrooYu46fC6Fjj//Rxey1UARnwxzt3mOFVYJEQ/ZbKY+xW/pNaQ==","signatures":[{"sig":"MEYCIQDVR1IPThIhmOKcaS5E7NJ+FvczsUoFpmSIq7IS7FUQ0QIhALJAB3z1jNrHRqKmrQN4BbAGdQ05zA+uHc/Q2D0n4J7L","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"583e758623dc82206a4b2758d01dd5948b6e3f6a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a_1709684583319_0.019740416469123057","host":"s3://npm-registry-packages"}},"0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec":{"name":"@strapi/pack-up","version":"0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"332b17b82efc1edc2c060c1f444d27f2ac3d4b46","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec.tgz","fileCount":102,"integrity":"sha512-OwJA7Q+OjV000ySdF+HDEiA5/dHq2CMPusEGWBB3X3CZDjCtelUkCSrRANG7DnZbFCy/CQ23J7kzYaCQOosR4A==","signatures":[{"sig":"MEUCIEHhpXe3VGYDkzZvZXOpCh9R9MTWL6OL7odIv+RVbdazAiEAxV3Y9y3xquotFeWabMfIfu65Bli64wHbFbays3xz7p0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"2363945b79274c79e6505e5a6c3cdec876ed8cec","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec_1709723610428_0.7908843178099774","host":"s3://npm-registry-packages"}},"4.20.4":{"name":"@strapi/pack-up","version":"4.20.4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.4","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7ae7d373eb2703aab0ab6449341ebe418eb5b192","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.4.tgz","fileCount":102,"integrity":"sha512-JxXZQVFu1GMC8YtOQCfFWp5CCiMe5xUGfM+0TDS3C5HOgv3/cPPqVxnJBp5ohpkeoQdrjYid8xiFt83eqvfthQ==","signatures":[{"sig":"MEUCIFuIGOhist83TufwWA9n+7lsXUnXBdb8AlWdm/HQGjKzAiEA/8I5nMUh8J9ynWClRHAGcTdji7OZcqMA+zx+xbqgHd4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"f37fdb46ce2d5275ef44892d3cea2ce836b745da","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.4","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.4_1709739182500_0.740430678317878","host":"s3://npm-registry-packages"}},"0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4":{"name":"@strapi/pack-up","version":"0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5c0e5a0a7e3d57454a3b2e29ac8c5f7977dd01d9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4.tgz","fileCount":102,"integrity":"sha512-kKdSMVS95UKX9IGk+kVWuwb2XaW+bWRGlRX6wd8KEjU6aJAkWWXNeAP7WJ8to6nr7vYIlqnbqae1fvn/Sk+5vQ==","signatures":[{"sig":"MEUCIDCLwqAur07sJ8UQ8T3Ob3ZXTj0I5q6j0hKHVLeQZjmPAiEA6l1j+fnXibDfIovyaMyqVNdYIQpTInidqBT33mFs9HU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e09d30edcbd16960a838997778a31d50e9c60bc4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4_1709770746421_0.38429859425735335","host":"s3://npm-registry-packages"}},"0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1":{"name":"@strapi/pack-up","version":"0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"21ef9412c5d7419349df0f3b4e9395f6ddcd1d43","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1.tgz","fileCount":102,"integrity":"sha512-rIZ0twSYXRv/50heODvYu6e9gbuznqSoQxTD+d1P9KojrdZ59E9/CtSNztAfdgD4LHCAW4tkM9BDA7Ch5St+DA==","signatures":[{"sig":"MEQCIDxoLyVKSnLKpMbDkPhqyA+CcTcZbsW46aM7O7VBkN3YAiA8Z+nXvn2xnC6qOI27Tt9xwZIAKLgDgLXLEiwkrdlLXg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"836f74517f9a428a4798ed889c3f05057ec6beb1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1_1709857388728_0.8879702297515688","host":"s3://npm-registry-packages"}},"0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06":{"name":"@strapi/pack-up","version":"0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4b03a491f50c0ed9c01a43015791a79f1fd2816c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06.tgz","fileCount":102,"integrity":"sha512-HWc7SwmIKMoBOWUKD5UqzvZ8CQoYR0qd+0e2bSspjtU599n9ebzjIpDTToA1Ply0Ud4Odi49OflibdpZZpMZQQ==","signatures":[{"sig":"MEUCIQDUi77hwVuSyfgmiJmfO/JXZ0hQUJMkVe3kTKJZv80v0QIgTY6xdhk4mmOqT5mLLDYkNUcjzE/Kc+kcdxpj6twKkrI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a9d79bec775daaf0da4e506b2aebafdb4ca95b06","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06_1709943725836_0.9364059627467598","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3c295fc54037d9ed05a2357e08977a9e86b66c02","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06.tgz","fileCount":102,"integrity":"sha512-tH3KMHQ+87Yx4CH4K9++ChLbR6knzofT6Dk3mlPWMf8mWfvNGj/Ep9Lcz+cJgqHP+pYQVSRZsZr5su7URgX9eg==","signatures":[{"sig":"MEQCICL25RowlXUN2NZmsnZMsAWR88hgJJ+mpGXjLy2zUb7KAiBmbJaE/xLZ6UHoVMVW7WkmwYoBWBO0eA0tB5FF7ZFFsg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a9d79bec775daaf0da4e506b2aebafdb4ca95b06","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06_1710178641149_0.5672179641773543","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1f987c8486aebcfe0e2a187163e5a0cee61deae6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73.tgz","fileCount":102,"integrity":"sha512-dN/T9g3jj+A3OzHyWUIZvhz+nDGPnvojMZc6ckJfZE2K8Bv6FpCWECqcByptwoCF+8ehnQ3cHrr2d+SdbekBWA==","signatures":[{"sig":"MEYCIQDhS+EggUbbGTjQA+3TMc3ZtmLH9G1QuokWZK2YdMrjbgIhAJZMN8D0snat7A1PgT/f8O0XPnem936KUEfqCzGa8CGu","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d8a676a242377cee820b59b21a05d47290d9ac73","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73_1710259828638_0.02267699780928245","host":"s3://npm-registry-packages"}},"0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33":{"name":"@strapi/pack-up","version":"0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c020f80fcab9844fae19341866fd51880ea7d25b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33.tgz","fileCount":102,"integrity":"sha512-OaMW9UsNwVKHbhgLEiz4L20f9T3EDtHXA9oi9kZmYYRU5+rg9D34Isj03WnmFLMFyQPk2pCj4mjqcObJLo4B9A==","signatures":[{"sig":"MEUCIQD7JiKZnZSDWtI26u9hr4uPrUUEXLaAstnR1ilFU3aKYgIgdcUNub1Cu0I5ue41v87W4oHrbIeIQENIpZhYz2cBqj8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"020096d91bef5bab5a6c32b4216da5aeb9383d33","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33_1710268050022_0.40535372756863697","host":"s3://npm-registry-packages"}},"0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"6df8cbc183b2c7e91c42ed7fbe297b8fe8f70800","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e.tgz","fileCount":102,"integrity":"sha512-Ig1AlbGpCs4Tnyo1p/v15upwpXLUNYd1vw4rQbZvKBRQlcOJfMJz5h2oo2DgIYRIgH7XZO9CEA6ZitaWzh8klw==","signatures":[{"sig":"MEYCIQCtDt8jRU1LRJ6wSxRf82LceE0FnIbCv4JX9GE//TxSEgIhAOkAmDNHXSf1AC4Eyq0PgWtDRO7dUJKHYc+rztW12p+c","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"45c1b845d32b56e7c14f4155ec0d4a2d2774c77e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e_1710324735251_0.8596269632799793","host":"s3://npm-registry-packages"}},"0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100":{"name":"@strapi/pack-up","version":"0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"071915bff6ed63cd13ff5ad8105016dd65245998","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100.tgz","fileCount":102,"integrity":"sha512-Ck1nqOtF2BqUwlqHBWAk9cXzAFHiwWyX7fX5UO5/CwHhKfJTPR7R+FxfNqSaP1lcarg76Yy9/pbKL5mtgkpXxQ==","signatures":[{"sig":"MEUCIGKYIQTtZvWWCGBx0rV9JzDkJY92cD0DrUBkxB6sjJZvAiEAzGotX6fqgOrf2wWWUYWlpODIu0BTo6s6OlKtPkdS138=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"171e4d8ec72685e5302378f337dc9073c35a9100","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100_1710326856028_0.6207510980651028","host":"s3://npm-registry-packages"}},"0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011":{"name":"@strapi/pack-up","version":"0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b8abfd43e247a7a6d429279f17e6d44fd84ff23f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011.tgz","fileCount":102,"integrity":"sha512-gNvMbt226/stV3up8XDT7Mq78H10mHUenenRgFatPwqmAERhvPWIKBUQ7QH+/WTWUXEn2JIQgmuPsY7rh83NgA==","signatures":[{"sig":"MEUCIQDJR9Ow00zu9GL71f0ZdSdkZ/+FUeQeBi1C6GgkNXwrwQIgNMYpr8tHxEcr/OQ6DMJUIagI38wnkPBoCwF1WYQZGJY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fc1ac2acd58c8a5a858679956b6d102ac5ee4011","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011_1710335660846_0.5176569550909231","host":"s3://npm-registry-packages"}},"0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608":{"name":"@strapi/pack-up","version":"0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4a0b4bca0eb798182841ebc4b430b7da3d216d86","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608.tgz","fileCount":102,"integrity":"sha512-nxa9vEtwwQy+I5BgGdKSW79kEPA8L4CRUwTI/b3JQiMtapYAXmWmwCnn2n3o0+aocLKWxNzgC6Dy5DXXqTnqDQ==","signatures":[{"sig":"MEUCIEB+5yeZIM5kIFavDq0vmRaWvm+mwQ/ZeatSL4zcjH9SAiEA7StMYBu3ZE1maGrKqh96AUxqZ57JiBtCJpHEZNDry4k=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"19b15f2f555510eb5507d89fcaf5efa172002608","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608_1710339043473_0.11530380168157595","host":"s3://npm-registry-packages"}},"4.20.5":{"name":"@strapi/pack-up","version":"4.20.5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.20.5","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d1f1325912f598614c9ea7960efe9662c4ac605d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.20.5.tgz","fileCount":102,"integrity":"sha512-A3EctLwJu0oiCWsFZKDAx6Dk4VnEbOMpRUm71ALeojjDga6iyqGQelXgDJHBBCUzx6c2DdpqLOpL6qrrFyUpNw==","signatures":[{"sig":"MEUCIQC0jiwSS43+Bi+QX4jFgdgZ7Cp0p4hilOSgqfGNKxI+nwIgE989IViGLpBBOSh209lA+3nFg8Rl+gUvDXs4c+5254o=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7a2a86e65faa175172945f55afe1b0f299fe98cc","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.20.5","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.20.5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.20.5_1710341375269_0.10935762742788668","host":"s3://npm-registry-packages"}},"0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd":{"name":"@strapi/pack-up","version":"0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a1b0f6b755125d896df981f7871e5af3cd6aaa88","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd.tgz","fileCount":102,"integrity":"sha512-hMW53dAcZeYvQXj9rsyhdUpkg6bx/SY68mKy/7qufCqE0CjeUfy4GHxj9ejCxOq3VeUbbyL3JVTIAE9iLvwieA==","signatures":[{"sig":"MEUCID5eLoLEsjenCF9XjmZfiZss+yqZA0eNNjX+ldy/yGvZAiEAx2uXe7JdGImTBnap6Wpe6ZrXcHfjxU+/3ELTOa9DKzc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5cd7dce98d735598fb562c63edc42358c4c330cd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd_1710345910110_0.19639543014585348","host":"s3://npm-registry-packages"}},"0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a":{"name":"@strapi/pack-up","version":"0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"9a1e61cd8deb2912ae9528b67da8329947a74a6e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a.tgz","fileCount":102,"integrity":"sha512-v7ca/L+oKAoNGXMzfMrm1K/TeoKGdusDJpWHjj14T+nEapMVl9SqszyCmdEFgGaObPQ6XOUkLcu+lgSe0JfleA==","signatures":[{"sig":"MEUCIQD3VUAoWPNNl7IMZNJahqQhLko0H6pf49d+fvpYU92spgIgKDeD6noIPNyeCTb4Xxa+yFLQQW2NeuJYDozp5NaLarM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"78ea7925e0dad75936ae2e937a041a0666e3d65a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a_1710375730415_0.9997802431348661","host":"s3://npm-registry-packages"}},"0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e":{"name":"@strapi/pack-up","version":"0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"78af01a627059cd598c0fa33b055f338f499149d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e.tgz","fileCount":102,"integrity":"sha512-zimlmBXPpZx+zQfNAFs4nQtIYCm0nx6VgiotbyNScQNNRBqh0CuPmLZadheb0zyBJHk+d1gwiw/tbJZG5viMhQ==","signatures":[{"sig":"MEQCIGnTfDmZsTNsbH7jFMbof/6l02yyl8gFc3Oe6jU3YlnEAiAPY86e9BnQc0p+Dzhj9l/y3t/ac+U77yODD7LbRBUcxg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e6eaa3d0563c85f80fd88b258df70a55c057096e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e_1710462145442_0.07709058793480228","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e6faf1ad4b4690d52c33d54768ddf390f8185e50","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95.tgz","fileCount":102,"integrity":"sha512-gUoihGQirw9RhV97giQqNmtNqYKi7sK8eQwXdcy8G9ksvTYasK6Twn/c7tHCocmAiluxL/wOrtSkAhKw4OXyaw==","signatures":[{"sig":"MEQCIDTrvty5B28p/YcAUqfY2jIiik1tcqcfvOr26RyGJ+kzAiBmeKYOBEJifWUYGDqH+USJgGuss8zHqoYSJtqI1n1PWw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e3e48deb89bd0a1b6cc69b698696566fa7854a95","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95_1710516467441_0.7270867919554402","host":"s3://npm-registry-packages"}},"0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c":{"name":"@strapi/pack-up","version":"0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8f69e365e645353589ef43c610ba9a77204678cc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c.tgz","fileCount":102,"integrity":"sha512-HrV0WoTxN4QYu7VL4u4mT71MMwEE2cO1kVDSyrHwoo9xMeWR5dqCoAijjhzPCFtYt5dTnIUzkcx3UWDcRiCLEQ==","signatures":[{"sig":"MEYCIQCteKP5EVEo2U4ym2jjfpMDaYq993/ryioAuIaHzypXxQIhAOeMGWjnHph95IUB5JYca7K7UuO1H0qTAhn3CULTXIiu","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3cc05002fb92029975799c3113971bb5b5198d7c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c_1710548502840_0.9640530949116046","host":"s3://npm-registry-packages"}},"0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797":{"name":"@strapi/pack-up","version":"0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7bee82a2fb9088a6c4b70dc1f6ec3c467812dfba","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797.tgz","fileCount":102,"integrity":"sha512-pof9rVGpImcnZjulww8eV0+a8+savQyx3xlzkCPk9uIN1lY0+yB9Iw9mICmUHlPBeW8TxQipRa8tctWynMkXGQ==","signatures":[{"sig":"MEUCIQDcGMOAbkfpmXoQj3S/ycUV6sMHPRE3ZEjeQrMvWxDg8wIgagg7mba5P12iPQj3tZarGSyF2FBOW8mg3l17cmt48VI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719678},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"235f232c2d3f5110341c4933bf23785a81913797","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797_1710752071747_0.6981305451071163","host":"s3://npm-registry-packages"}},"0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204":{"name":"@strapi/pack-up","version":"0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"8820a20ddc8af3c5c106763791605adc5dc29c49","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204.tgz","fileCount":102,"integrity":"sha512-DwuQh8uh+2I+hsygcFlDZGY7GPiVY3CKKP0CRiDuhA1qmFf470KjQqqvykncE+u5f6aheOmJp91kEmlwK1jcDA==","signatures":[{"sig":"MEYCIQCbOoXp5JYLgbGFEXaeb3t3UYzmGg/dcdVDGn1dKQlWoAIhAJxu6iUZTAVU8KJYX975lYnyAACqxeieRAGh2RLMyA0r","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720502},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"94632b9dc1ff6c9600db6db51cd6dd2d693f5204","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204_1710768825321_0.7429236742279866","host":"s3://npm-registry-packages"}},"0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54":{"name":"@strapi/pack-up","version":"0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"32e33dc55e4c7560fe3f62d48350bc021ac00ba0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54.tgz","fileCount":102,"integrity":"sha512-kI/GXAednD7e+2oZarW4BEegFsRuaxZpR3+bvcUZJ2n4+57b2Q5vFiDU1VdFpmkTRlwNPS/8dtlR4ImJzc01Mg==","signatures":[{"sig":"MEYCIQCaC6ttM1dipe/V2co4kXyKHMuyxk2oGwzpU0m9Jj+wGwIhAMwFTKgCtpeyp7OgsaxQ3jsS7NpK4yV5+sWc0YUB+jDr","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fc231041206e6f3999b094160cfa05db2892ad54","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54_1710807766352_0.7121935833841562","host":"s3://npm-registry-packages"}},"5.0.0-alpha.0":{"name":"@strapi/pack-up","version":"5.0.0-alpha.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2a10af79a85fc50fefcd22c748af4509e67d6759","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.0.tgz","fileCount":102,"integrity":"sha512-UoeNdJGcM7Y/Kzb+WvBJ11NPOLT3zD7GOvAroLpXsJCNy7ogddW24SyGHJl7d55/u6HowD0Xom0qhxsJ9jpjtw==","signatures":[{"sig":"MEUCIQDRLINI7nV7EIPj/e3BCko+70I9YO8EkEfhXWQ/d+ZnVAIgP0OWKWByiwJ5a8matEByB0vcsUPTjeGTlx9sYOMPaSc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719540},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ceeb3f383cbaf51eeaa373750a27a2880a10f727","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.0","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.0_1710839912386_0.07386086370625966","host":"s3://npm-registry-packages"}},"5.0.0-alpha.1":{"name":"@strapi/pack-up","version":"5.0.0-alpha.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f2b81d810717692bc03d0012be5384827741aecc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.1.tgz","fileCount":102,"integrity":"sha512-s7xTkqojR9geycwkA5f6Cd5ryhlwEzg5YRdkkijgKTnq3bvJXV+Lkz0zf65DxxAQLTPgxMe008aZ/RQCd23NlQ==","signatures":[{"sig":"MEQCIEXyIKCLN255TF3wUMYyqETP8q9iJ5NGEbxq9zPoeO5JAiBG7V9So9MU76v0GbFvEKaj26xmuCsBlsg+VFPF1ezUig==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719540},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"eb70e07ea981311a3ddfbb2fdda0417034b22881","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.1","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.1_1710885710612_0.40757283740987993","host":"s3://npm-registry-packages"}},"5.0.0-alpha.2":{"name":"@strapi/pack-up","version":"5.0.0-alpha.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.2","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"80174b93dba1ae2b1ed7c66ce21ecb2246c15360","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.2.tgz","fileCount":102,"integrity":"sha512-09t/1WSHGIvPGXtXlL18g/lNN+1gPC6UFfCsqDvt6etMwgWEpF5Ja8XtF36fRQ3kckJmKrGIjoU7E2ftXoN9/w==","signatures":[{"sig":"MEUCIQDZJUrNAjta/8hIUUq2aOjDf5XjUHBPYk05WxBiDwVbdgIgUR4H9JCoAGbX255L9srZEuAQLePznRNWv3vrNdnDCi8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719547},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7f3ccd6b244b0357c914ccb50dc5b7018f51305c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.2","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.2_1710886706698_0.017873839797772684","host":"s3://npm-registry-packages"}},"0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705":{"name":"@strapi/pack-up","version":"0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b5de269626a9e85b78a4d7fc92d1ad93f3ebfdac","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705.tgz","fileCount":102,"integrity":"sha512-OWzJWLFvAbslR7aZJasNs7v8ptk7PwCmABGrIhcyNEWWoUyEATtk2P7nLWnEx+e9n+XwoPt2/csOZs6mArhhoA==","signatures":[{"sig":"MEQCIDtNOzhcTYG1F/jDrkyN6NGWb0wo3zAmx0Rv5TM8oE/6AiA2OjOqPAavnduym1bATJjDk+a4EHDURfbKEJr604G/cQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705_1710894141798_0.1447255575031412","host":"s3://npm-registry-packages"}},"4.21.0":{"name":"@strapi/pack-up","version":"4.21.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.21.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"34d7111e62b75f458534e413957d4bca6db9e95d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.21.0.tgz","fileCount":102,"integrity":"sha512-+jxCMwaCdZjCbpnZJr1c3/gqyE0i/3Ftsi6XWECvUanVppUpHyDHZonr9NU1ln8y9Fc5Tmu1tdb3aCGX8vDhrA==","signatures":[{"sig":"MEUCIApnviN0bJYbOyNxjBkT/pUHmRQUqyCtXD3eGtAKIIJaAiEAj37Vf/vV5ng3nxVNaA7xWPGIG7iRYWskrem2njuadmQ=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e87fdd461d2765e19edd14156a9a500e17fbeeb4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.21.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.21.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.21.0_1710940800736_0.5912987946869988","host":"s3://npm-registry-packages"}},"5.0.0-alpha.3":{"name":"@strapi/pack-up","version":"5.0.0-alpha.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b8ef7b80ce699c6fe5f11d4e3c0b41f897bab172","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.3.tgz","fileCount":102,"integrity":"sha512-vG9xsC4japb3gVj0cF0BHMu6y61YMB2yXfNlAwaKrCJpApeGD4icBw3vIRN1SZlSkd+Gar7TUAiE1LYrZa3lFg==","signatures":[{"sig":"MEUCIEln8RMVpnke0nng7YKzj0o9Rq60o+oxqjRYjiK0CLB9AiEAtXeGUu7IPOo8F0RAu70d7goQ+fXNKi7G7UiKJOvDgCY=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719547},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1c6cf2ae9f98bbb881d719cb9153f11f7185e0b7","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.3","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.3_1710943800426_0.7472290927047032","host":"s3://npm-registry-packages"}},"5.0.0-alpha.4":{"name":"@strapi/pack-up","version":"5.0.0-alpha.4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.4","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"902ddd0261fcf7194d2e4a6bf1f3468fc03addb1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.4.tgz","fileCount":102,"integrity":"sha512-zS9CbcVIDA0gqb4yWHNxfdcT+Zy2mheWjt7Fjl51Zpbf7YmMM0lkggiCe2sjXHZRGzU0credlKDesOxxcv98ow==","signatures":[{"sig":"MEYCIQDrPYg5crMUz7/PgFvAKs1bqeiJbQSGJQMhv6fl20hXsQIhAIhg9Leim2dq5igYx87ex+XgRXeF+cf9evRlLxw/IlPx","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719547},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d536f44a9af118286100cbb5bb86b6685c71a00e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.4","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.4_1710945989659_0.4993290020959318","host":"s3://npm-registry-packages"}},"5.0.0-alpha.5":{"name":"@strapi/pack-up","version":"5.0.0-alpha.5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.5","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3c6caa4b6922985a4fbaea7747c8d62c5bcc3858","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.5.tgz","fileCount":102,"integrity":"sha512-Q+L9LlkDNimQt63AEr/pgGZVRPVmBL+MyMDSf/PL9TcCIX4u4ovm/IMu1gNTadP62roUMtP13C7Say7vvy76Pg==","signatures":[{"sig":"MEQCIBeYwC0dCqoaQvnYv806O49yDF5zIzmVpFjmPO1dwD+ZAiAfSJora/1YENVQ1UUsLdxqywB49QPvZNfIwHBiSexscw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719547},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"894c8f40f330ee96f282b3fe1d2c68c24006ac62","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.5","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.5_1710946593563_0.5916155847625688","host":"s3://npm-registry-packages"}},"5.0.0-beta.0":{"name":"@strapi/pack-up","version":"5.0.0-beta.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-beta.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7bc62ab3060704ee28277c16a4cc8d2f6f22b7c9","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-beta.0.tgz","fileCount":102,"integrity":"sha512-tn6jXTxt+5VVHamub9GlDHEYzF02xgZ8uSJXwIvnNvieZkTB8BKMCCOtuNK7Lzz8KH6Gg94YhIPaDphZy4Hn1Q==","signatures":[{"sig":"MEYCIQDNb620qlAQRBD21mochPBUHTGvaHGXhoSJHmtZjRyKYwIhALHwH7dy1lQBVVgjLjjn2VW6+Zcaby3jb7Njl+tUctF0","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719544},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4b2e592f77adbb0eacd7e3f15dd09e5cd3c46c22","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.0","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-beta.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-beta.0_1710946879747_0.3847261490219869","host":"s3://npm-registry-packages"}},"0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3":{"name":"@strapi/pack-up","version":"0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"01a71d571c029a3c449b6ec8e4cf5643f5b0dd17","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3.tgz","fileCount":102,"integrity":"sha512-fwYVWBc37rSxE8lTaftAhUut2sEQx+W7qjuUwxhVqSUhhMs5o7mMSK20Z/dr4RqWUkqK6IvPlfcOazT9/ZICqA==","signatures":[{"sig":"MEUCIDvas9qAvv33XjoxkNtzuFcYljDTSYCvjeQMkTTnzlB/AiEA+VFmbR7rp2rkFCG5BW7stxaOo+VyB81PN6dkGsD+LsM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3_1710980597816_0.5959299055257758","host":"s3://npm-registry-packages"}},"0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"24a464f4fa57720440f5f178d0f3cbd8d5be435b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3.tgz","fileCount":102,"integrity":"sha512-QgUbfBr7c1wqSMnfdceYjhuA+UesDBLUezaDSVoQ3lW/XrI3h2w79ZUqHa32ecNRjKcmjzoqbrFCr85ZcWtPiA==","signatures":[{"sig":"MEUCIEwfg+2LkMsJilL4VL7gZCPA2YF8hIgDO3TQwR/WpF+9AiEAzOgrGz9av4KOr6HVaXyi0UXYPBgP8pL0Q8vNU80OXH0=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719630},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"80cf2c74a2003f3c0602abc81888dd9f36dc68a3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3_1711119270569_0.8575201469301774","host":"s3://npm-registry-packages"}},"0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47":{"name":"@strapi/pack-up","version":"0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"bef17b54f4a6c1eaac18c499db3d441cbc8f878d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47.tgz","fileCount":102,"integrity":"sha512-sg8LoqkFdQjhUXCpTXlwR9SFCsWSIRiMnjw8sTeB4TeXVprs3Cowfnx5myJPOvRgOlZklq9gH16ZRsNvwIbSoQ==","signatures":[{"sig":"MEYCIQDCab1nO/7y5Q6+S4mqEexkmCsmIKYGb7D9xFMlHpW2XQIhAOnVGBRGJNNBwXp6R8958oXCPJBR1EXq4Kootum9Hm07","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"10659c5ef9d5cf87c701241a11dd3b56f13eee47","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47_1711153331796_0.22373490024873544","host":"s3://npm-registry-packages"}},"0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fc10653705128cea72073dd54d1373ed3108996e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1.tgz","fileCount":102,"integrity":"sha512-rGX7+JMuSd/U344un62MiyC0caqDSw8jeWfVG95LHjJxt0CMy95d6BfzoF1JOyAG/MsTXQTh3zmyDv/RVnziIw==","signatures":[{"sig":"MEYCIQDCnIJ2wXMvJdGSMmT1zD7/t/fQOko9VIVvH9MOH5UMnwIhAPBjYsK2gd24k/7jya0qbrrb2xOkn8Gc8LUddry868YT","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4d5be2432507390acb482033a6149fd53c4256a1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1_1711384204191_0.24255590947466477","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1eee89c36ac250fd324e46cd8303bb7951e7fb19","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11.tgz","fileCount":102,"integrity":"sha512-tLg3pF4kZvfwVxuImgjPZ8yDQCyg/Ql3tpPh+zKjgUF7gVd4r4YU8XevKxvmxiXA77qQEDgWHa224fVlaWa56g==","signatures":[{"sig":"MEUCIC4koeVWKOa5Ovg/R//CnShopAe2ONwFqLwN8VD2d2XYAiEAp3LcyhmjKwYcv9UfPb/wj1ZUVnq3JoCcxpyy/Q3l+MU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e5740babedd53cf5b6af99d74920b6b9ef1e4c11","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11_1711399217670_0.028876625559058233","host":"s3://npm-registry-packages"}},"0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043":{"name":"@strapi/pack-up","version":"0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3878b2ead6735b2769fc7a9726678ddd78a29884","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043.tgz","fileCount":102,"integrity":"sha512-aPzupjSNso3l3IadD+4c7mYT5YBWNAy0Ea5tZOImEtNJ9ExQAE8cg8q+4yBV/ayxtAv5P66Z45C8+NlS30xd6Q==","signatures":[{"sig":"MEQCIDb5EDc3m4ujBR4CeAfcvhnEx6MMG7XwSWAVFF3Op+bHAiBpmMUsDVHJMxK/RetHIGm87XWseSzXD4J1s8cUVXIu1g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1e46ca925484dd19eea4cd25f16982eb69881043","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043_1711412531546_0.24619555835287366","host":"s3://npm-registry-packages"}},"0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50":{"name":"@strapi/pack-up","version":"0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c90e162e74a07741ef88c1d350a63de9be73455c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50.tgz","fileCount":102,"integrity":"sha512-QWvM/dZkNeNCPlg51b+irGeWVX6IPfOMk8whs4l1QbkDinuVIka5IZCeJ8CYu9jLWVCt4X2lxm0wGn7WvfE3rg==","signatures":[{"sig":"MEUCIGiD4DVdwlOXh6XWjlAvwkBSIYLPrHWlWKC4t+Qnm3GNAiEAiPpzCi4IgmJ7olKav85oxtYB0WgcRowazk72AlveLVc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"343968041bed1eb9d230115e687e9397b0f5fd50","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50_1711457356147_0.9638079702663362","host":"s3://npm-registry-packages"}},"0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"be0be8e4340ad1425d4b689088cd1b6de99d2c1a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f.tgz","fileCount":102,"integrity":"sha512-zuPACDNKPhgrhw1n1GqE7EIkTjlaPHJseLKYF+ocupRm1F3yFCDf+Ffw3LHNlsosRK1cZuC3OBVrodZTKqpa+g==","signatures":[{"sig":"MEQCIEzeRFFoNqDg7ViXTCt7rdQy46wVcatD/T6lmXerqiMDAiB9EpYZfcj8WuPFyvCDGg+BVCtZKOrvTefRLunCB3UwOQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"69488bcd961d679d6ddfce3b00db926e3e5c713f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f_1711457597476_0.42744612065936605","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4def234255011f2972ed81a2da41711f9c3ce157","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043.tgz","fileCount":102,"integrity":"sha512-yNLkxehP0VrI/J8llzd6c6OJENFM/8nzGYfPU32Gv2fWbwdZgfeyuTlHhur22n7BipJFNXF4wIldBXuLbuueWA==","signatures":[{"sig":"MEYCIQCzz306tr4PxpQRczLT8kbQE6JsNDjqPIuJJR8AUWReywIhALo6Bomjgql5VSrK6MF+WUDOoXG9HpWFsZrpAu6P7W4J","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1e46ca925484dd19eea4cd25f16982eb69881043","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043_1711459201442_0.1640474234501419","host":"s3://npm-registry-packages"}},"0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d":{"name":"@strapi/pack-up","version":"0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"673bf8a7a4dc2fff8df6130914b9b9dce6b1dc7e","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d.tgz","fileCount":102,"integrity":"sha512-ySfd16zQHnQSePmhTy1GBDer0YbV4czzhmbCmiv2SPZtkYrjV/HvzXVBvTP3Kwyk1fRWXwArqE7I1TUMKRDHTA==","signatures":[{"sig":"MEUCIQDuSJGtfHuQneQzfYtTPmj8KoSDozUqjqkTo2meBlpa8wIgKA+50RbDAXVCgA8uGVd2gNpghnueIo4kO0oZZXigzPI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719630},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d_1711471172718_0.9244102237535621","host":"s3://npm-registry-packages"}},"0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9":{"name":"@strapi/pack-up","version":"0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0f833dcc7527524bc38cf468cbce219b27196096","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9.tgz","fileCount":102,"integrity":"sha512-4yBXOWT8Bo34opHyxqeq6y8TXX1S0z3toSpG8j+SuSmv58V4ruckWJTLxREe60utv7XhUgfAYFejcQI1Eye6bA==","signatures":[{"sig":"MEUCIGjQxdrezEAerEblkW0OstWUJ6VOmb6lO6T6D7s6Hf+3AiEAikVtkJASlJojui8LQ/XTnZHzgRg6ND2WRxUwZJbodJc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9_1711472617858_0.012265152519732592","host":"s3://npm-registry-packages"}},"0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"16def060cae942da3477132288f124381237a33f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f.tgz","fileCount":102,"integrity":"sha512-f6ySCmDMbwxrSIAq64i+ncelPJtICyEyfwSmi3XcOszeIPn+YfFN4cYhoK/9jiARy18BwqwEkcOAd4Iq3Rtt5Q==","signatures":[{"sig":"MEQCIBcvgDwyGcXMvbSVP0kR0E5AjGjuZ6dnYbdVYSkplzD9AiAGnq3jXpQTtHpRw2W6FiCG7L81AHvr1mzpA8OqhWaZrw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f_1711476306439_0.7179373038079961","host":"s3://npm-registry-packages"}},"0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39":{"name":"@strapi/pack-up","version":"0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fdb3a9951a57d67d61c26ea5b2ae9b1a2bbeb7d1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39.tgz","fileCount":102,"integrity":"sha512-8vVIRkoP1sMGXav8aaYyHZ8Mv7KTIAHLYaiqmKkW330/F7W4QkeET2vg+HBazjRug8l1QlktHFHkL2caMnVtHQ==","signatures":[{"sig":"MEQCIEHBvYBW8oiz2YW3w+n8DjTLemIWarVSUK1JLdz2CoZ/AiBceFE2w9LKn+L+a094T7avj04FFu7RHDyiOaIniTCO+g==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"88ca4d55bff422eaab16b97b94cb88244832ef39","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39_1711479741623_0.39181490189881885","host":"s3://npm-registry-packages"}},"0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8":{"name":"@strapi/pack-up","version":"0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"79153f302e8bc09685c7bcc0f87d9f315e886c2c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8.tgz","fileCount":102,"integrity":"sha512-VKwAYluuIGA9UQa4NY0J+CSrd0FNXi4KP3oTKaRq4+iHDAmqZysc4XRY2qJPg0u49HJH/b5TJAkWEj8T2BXUpQ==","signatures":[{"sig":"MEUCIQCl8RMtfvqGXumZgd+qMEcmv1CjkiafcgjoUt3bo7204AIgToaDB+x2TzvD++MeGpAkQqtaVo/4EQkFXWijThe0BL4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8_1711498934852_0.6322386654670469","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3ed421582e4cd337c99b1cec7cf2d6d1e467114d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca.tgz","fileCount":102,"integrity":"sha512-4TlUPF6OzSvM5+dvnzM7AiNSu4qjU0CzE91zNjqL1qWw09cxxRsKJO9Z/JkGCPX1EBWWmKye+95swl/+RIYREg==","signatures":[{"sig":"MEYCIQCtk5j22VHZb4Eln8nOrVQxXIUcEAckc6hViCVclj+iiQIhAPZ9AMfgoHcAuD/W22CAv0Q84gfO4cRa/UMLchdsilSk","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719630},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d362bf200f5f9359a4bbd4a549603de5ee1f04ca","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca_1711529641687_0.28896449690440096","host":"s3://npm-registry-packages"}},"5.0.0-alpha.6":{"name":"@strapi/pack-up","version":"5.0.0-alpha.6","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.6","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"1313f42412d3924408b767c64630e878c4f8d696","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.6.tgz","fileCount":102,"integrity":"sha512-IJo45t1qEu223KXruWL65bdLruVZHx9JVL48q+XJacS70irxS5m8kuulwYK1B+tw+xHRuGiCLtDVJ/Dqev2g1g==","signatures":[{"sig":"MEUCIQDrtJgYGXGz7f3GZmxOZiksqaqRQ7xpmDwEZH9kFQSipwIgFm7HRwv2cT8ekG4g+i+GzH7Npph/kGq2oExDdpucLoI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719492},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9b94d7f8880803bb8e6acd52215588438793e160","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.6","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.6"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.6_1711545526925_0.5622888860265027","host":"s3://npm-registry-packages"}},"5.0.0-alpha.7":{"name":"@strapi/pack-up","version":"5.0.0-alpha.7","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.7","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"3c8498326ed38dcd855863eddcf01799ad3a649c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.7.tgz","fileCount":102,"integrity":"sha512-yS0z8XE7dGVSoVnEJYA5K2xrc7gP5h/VNwnnFamAZmlSc4cwsQf73GpqAbVDjAHfSzTUosTQFrnG6UX9ZUUiqQ==","signatures":[{"sig":"MEUCIFXseOupa6pyB+op2S5s8049ltjZGrvgtmIWo8nGmT2qAiEA5FMENvpFsXKQC3ToRjAxbjnDIksqcoBfXhDZNsWX230=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719492},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"9b94d7f8880803bb8e6acd52215588438793e160","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.7","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.7"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.7_1711549661677_0.9764867056354578","host":"s3://npm-registry-packages"}},"5.0.0-alpha.8":{"name":"@strapi/pack-up","version":"5.0.0-alpha.8","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-alpha.8","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"6c402502a0c3c51ee61b16002dd625eaa234b3de","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-alpha.8.tgz","fileCount":102,"integrity":"sha512-mIZIyVaylsk4biiDodoBU6qrcrh1FK10K0SfOvplynEdwV8AqjqOKuSZg6G9i72/CaGLrWJrpJXXwwczLyeRhg==","signatures":[{"sig":"MEQCIBJfK/IHW12xWthdJ4duqF8irG2OTTywuxQctC3+b3EBAiBQWxhiX8ubMI+Wc2kRQxqIis89VG4auQkG43Vh+iQGvQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719492},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ac4bbf6602523215c40548a8a09079076b3dadda","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-alpha.8","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-alpha.8"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-alpha.8_1711550927277_0.942366033242195","host":"s3://npm-registry-packages"}},"5.0.0-beta.1":{"name":"@strapi/pack-up","version":"5.0.0-beta.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-beta.1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d7345b292dc676fd926cb2bf36246fa486db8210","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-beta.1.tgz","fileCount":102,"integrity":"sha512-WDslBLOOgTNR5jvbif0XCFHYfddY2ty2vdiDzEGYQczGhaGPIX+R7D0RbdC5iIY0phUoyCTyYUXnglk34l6Hqg==","signatures":[{"sig":"MEUCIQDoT0kpfXkgKDowDC+9CPKYv4WWUCl6InSa8fQpDj8vqQIgezZ3UXZpMzty05q3tAdoHQZBKDKLMtwXJ16DR+ymS9I=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":719489},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ae773621dfcbc67c49dc6fa52ac41ea5de676ecb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.1","@types/prettier":"2.7.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-beta.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-beta.1_1711551448483_0.6081189253531853","host":"s3://npm-registry-packages"}},"4.21.1":{"name":"@strapi/pack-up","version":"4.21.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.21.1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a29bf1decb982ac3ef9c601b0cdc9dea45f5da16","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.21.1.tgz","fileCount":102,"integrity":"sha512-D3A0PMjjAdwxNWtTX9nUJScfVZ+e6CcAKxPnMLfS956Zdd4EHCLXSU5IpHQY57Giuu4kg+5mTm6ZB2x03Y/Yyg==","signatures":[{"sig":"MEUCIQCmg4ExNZBgbxJR/8uLFktRZgJRhuB7EKyClCteXsQwmQIgHPZJsWZOaCHF1+Cb06qPnJjMoWPfnOYEmysNsgN3Qsw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"32d9b66e63da0a45bd70eb5190cafd8f7bdcf336","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.21.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.21.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.21.1_1711554908137_0.6870652295617532","host":"s3://npm-registry-packages"}},"0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a":{"name":"@strapi/pack-up","version":"0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fc8723acb27b2e30a1565fb54f51e186dad95751","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a.tgz","fileCount":102,"integrity":"sha512-+yI4HnFdhF1XKW71T0S/OFUiraU2qZmsSXoiCwPCrJ6iSOLFtw+78zrhLTOrIUNHTibmJ17AzzYEFH92cSERTQ==","signatures":[{"sig":"MEUCIEn0aIvaM+zet4rT+jBbwOBB23hT6eto5e+wS8xcaIQ9AiEA2V+4dS+eScG7VdxZHkoxdms1fG411qf5r1QynZ/olkk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"734763e5757af27ff96ad1c9662161f3f677052a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a_1711585378995_0.22760607416926693","host":"s3://npm-registry-packages"}},"0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767":{"name":"@strapi/pack-up","version":"0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"ab7673cc2e9219920139fcea9ef1cf24b6fbf16c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767.tgz","fileCount":102,"integrity":"sha512-PaCxwgjGfTHdaLplL/UJJkQNnr9m2h5fxj+3GHu1nSgWJC1HguDuzD7fDX45A5GCYXkDM5AZ6cP7EtYqWc4JFg==","signatures":[{"sig":"MEQCICXjjTiB9drFmXLRuN+M9N/pw013CG/ZqE9ulo2yixhIAiBy2CCFTQZG1HGnwI4oEch8piFRcnFzKc6IG2aSlExUyg==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"7750bb478faed47193fe79e2640d3070a9770767","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767_1711623600373_0.7129569595157113","host":"s3://npm-registry-packages"}},"0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944":{"name":"@strapi/pack-up","version":"0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"baaf11d04bf6ee4512c23a908771f1c82175b160","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944.tgz","fileCount":102,"integrity":"sha512-wocaLF88VVzgknYve15U0q64mNH6VuaDXgx0x3l3t77BAyc+NseDI1VRvMAp0cIGoBRqlSFOfBwMD+knDWXfyQ==","signatures":[{"sig":"MEQCIFY3dE/vlxc52n2plwxdVmGG80MBRmn3kYsuhCwzlvPIAiAQy489cylu+w6MdlAjZb9E6DepUnvxXleo9Y/U+99HAQ==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"bb0b6c425a787a0a8268bb133787d71713c56944","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944_1711632016694_0.9262535714936271","host":"s3://npm-registry-packages"}},"0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87":{"name":"@strapi/pack-up","version":"0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"aedac7036158a163a97f89e8c6f027e04c910faa","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87.tgz","fileCount":102,"integrity":"sha512-EdmGtQyij04KfqpSW/N1ULl3WT3Wq6ICjwbJ+h5HaVM4maYgRWrYCiiazEJQCH1//ur6sjv5jn4vzsMfYkfpuA==","signatures":[{"sig":"MEQCIHR8NqebCSZ56iwO8yOLCY6CC9AOR1a4NaXgfLURI7wxAiAT/Y1m593MRmzkxM81ESvcbPFTt8EAgmdkbjRsRWhn7A==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a3e29269a0d0a4388674efc37e9383c621bfac87","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87_1711671764721_0.08997298730421766","host":"s3://npm-registry-packages"}},"0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"747cfa8838b82bad0c501f7f1fa75455465175ff","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a.tgz","fileCount":102,"integrity":"sha512-6FQ83Nu+cdqcusIcRPqVa+HVuRkSxd4URY5VD6P66On1qwHO3amrds1oMPr/wUchM93PcpJC0cOXWq82IveriQ==","signatures":[{"sig":"MEUCICqmM8nH0oXHcG1HyLaRvNc/BZAH/3sV7jZ/+lGlNx/uAiEAqgK3aLS1xrLhwnWc1lRVCG2ijHhHbwziVq7PW+RxLWM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"763b4cd672b7eb9e5a057dd0537984c91287348a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a_1711723283629_0.895690546038959","host":"s3://npm-registry-packages"}},"0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951":{"name":"@strapi/pack-up","version":"0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a5359d9aeb5b196ebb0d2e0a132cac9b1d464095","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951.tgz","fileCount":102,"integrity":"sha512-d9cLX+9+SmGsms/gU3g9zaS/LYwvPjgYYwh/UotpZyOln0MVRqjdrTMPIVv7zC2GdNAfN9h7hg1NM47tdiXyZA==","signatures":[{"sig":"MEQCIBNj3GpqbveVOpSttJ7wKyYGdSP5Kzva60nC5CCJ/O0WAiAjO1KCjyXiwPuOXBh3/9fU9MiqSts4KZMZFLJLpUIS4w==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"48f5eeadaf32e2ccfff33983c0e295f613c4b951","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951_1711758118855_0.02144676401564749","host":"s3://npm-registry-packages"}},"0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"5cbe0b36d062d1c95c860bbafb16ff982272a9e8","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f.tgz","fileCount":102,"integrity":"sha512-kkKssmNx8L1uxb4uSfU9eh8R8/GLb8y20dtsvlfzEhkIwjSMrVISNkmYixQkhTxn3OSAcrHa8gqfRSaIZuD/+Q==","signatures":[{"sig":"MEUCIQDAECdWNgqdpx0r/ffteKdd22BJ4ARV1N4gtD3cFl5qtQIgBhnoYpd7rXtnsFH2B4hgqjB3+zdXCHocARg8QG+jLsk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"cf82c830d8a75c9f35466f4c6010fb588d34063f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f_1712050572220_0.3026626907688048","host":"s3://npm-registry-packages"}},"0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c":{"name":"@strapi/pack-up","version":"0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b74c007383f072c2fe5ef566cae463df89f347d2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c.tgz","fileCount":102,"integrity":"sha512-nnqPuXGQwkT5bXcSaVUlwCeBWhEsAAsnZHMUuuggpNOJLUItfCQMPXzgaRxKqG1UT47/taC2H4XrVLLRjD/D5g==","signatures":[{"sig":"MEUCIQCyHXZffd0ten/2QbJulEqjwXPzAijdBjUv+oaA18UqzgIgDApMh8lHGtb8iSVyokXaX84kTde5SKPzv2pZowKQmsU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1fac05ede6645d8475a5a883b851405e0e5aef2c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c_1712103762238_0.5483981494553034","host":"s3://npm-registry-packages"}},"4.22.0":{"name":"@strapi/pack-up","version":"4.22.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.22.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f2c21b0465b918b65878b1146453793fdecb7ce0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.22.0.tgz","fileCount":102,"integrity":"sha512-lguuxdO/LAOQVdNJSyG8cWdrXIL3CUjsITIEvikGV1F6e9IEMFuE25LwSDxPPTlD0jdc1A9PPkDkDn8nvzcPvA==","signatures":[{"sig":"MEUCIQC8N1MKWCw7nWHiMOF5zu2+i4N60+MDOvXb+7aXBLIORgIgUWp0ff1jLCoaMyW3xRPCTEr0kyfXcKHdoJS/tYF+/iw=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"45fb7bc16d2c743094211edf6e36f63781b6d5ef","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"markkaylor","email":"mark.kaylor@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.5.1+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.5.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.22.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.22.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.22.0_1712149601991_0.4761888823697007","host":"s3://npm-registry-packages"}},"5.0.0-beta.2":{"name":"@strapi/pack-up","version":"5.0.0-beta.2","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-beta.2","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a7586a4a2f60bae8efa99eb9cb091c4816ccbe57","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-beta.2.tgz","fileCount":102,"integrity":"sha512-zVn51AeYNYVlf+clR0l5JZzfUaVRVfdXCjNlVcrxOhEHVjY6PBejo9XbrgfSG2nz8ph1YZe5M3nz0IvpzBQswQ==","signatures":[{"sig":"MEQCIBmF730+v+OL+YwAxyPG6kS2RMtWlpciKAu8S2CdUeJCAiAkg5z3hO/ne03GxT4gKHYiQhN+FmtYVuHtfwBlHAVkCA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":721561},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"e39426bd12ead73ca35d3d9bbf6dc71b5e8ac354","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/8.1.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"3.2.5","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.12"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"5.0.5","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-beta.2"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-beta.2_1712158343447_0.9411928741982849","host":"s3://npm-registry-packages"}},"0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd":{"name":"@strapi/pack-up","version":"0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"f09114ab64a957a638275f907e7dc0ce86ecbd1c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd.tgz","fileCount":102,"integrity":"sha512-n4X6QsVJN4pkf88xNpyYback3hOJFjgV36C9wlN0ylPmaziaakDQ5Xh3G5vy2KwYE1+PPTPwQFrSc6WjXgLWog==","signatures":[{"sig":"MEQCIHO92YV6iSSDJgMsz5eLcYbPOjAqMWyePEugJhxlLy13AiB0kdLPZS98HdonQpDjp57+u/0RLmpDUmvajyqIxQHOiw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"488120b06b467623f033f6175193eed2ec912bfd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd_1712190198556_0.6530568820704947","host":"s3://npm-registry-packages"}},"0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a599894bead2bbd66bed72290ec31e7d2b5370b3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa.tgz","fileCount":102,"integrity":"sha512-DDQPOjwGWhh8ll4k/j/3b9HuggaTB42ktl3xi7URIIknio+Y2RGjMWLB1pTJOxfaQORKsEC03tmoDLbPOyAvVw==","signatures":[{"sig":"MEQCIHD4HP+6ZTevDl7Amxev7iVZAQJYcb5F2Yjwg5FRoNGzAiADyvkmU8X92lxo4GZqp2KrGI0L0wKm1jZelMqmoy+omA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c5354c231bf2abb4fe353d2ab7812bced4a1c6fa","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa_1712251280718_0.8476768131353563","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"daae1dc7065163412c47c999ea05eb6cacccc489","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3.tgz","fileCount":102,"integrity":"sha512-yEo8Bhlmi8x9HlHXxn7pVqc4WcUNhsHNNnJBuhanISprs37zyHbtwIg3uf//Kk79ucytVz3jBUEE4Paj/4I2Mw==","signatures":[{"sig":"MEYCIQDOLMNeNCCQVs/MGtj+dxVnnv/8lCFpq70GCPE8GtubawIhAOGqnAUmqUJ1ZCcv46bLBGAnGHOpeb3DHZZSeSGNUC5R","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3_1712262625688_0.4316805491383897","host":"s3://npm-registry-packages"}},"0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4":{"name":"@strapi/pack-up","version":"0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d3d19558158268e6aa962b0333286c5a120a1a13","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4.tgz","fileCount":102,"integrity":"sha512-69qf7XoOcJ9ig5ALKTiCe7EWSnHoZphV04POzy+Zpf1rGUGw0ZNtK7c0oulKNxr66ewhfzzbLjU5MG3IOKIdtw==","signatures":[{"sig":"MEUCIQCSoGb810D1d7+ghHvWv/dGY1YnLTB9AEYTUXSDpBylawIgJ9f3bBDxF8zfG47/nMyTaB6hDjDXYP3pJrro5TcEBk4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"5ab818b8ee36a4f090027477a602736c6adbd1a4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4_1712276584268_0.18442048822675838","host":"s3://npm-registry-packages"}},"4.22.1":{"name":"@strapi/pack-up","version":"4.22.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.22.1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"469f198e5d7b67ad0c73ddd525aac23b0153d666","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.22.1.tgz","fileCount":102,"integrity":"sha512-ebzp156B1G1mQkNm7z7WrUBE3DrOPD9uaJz7wQjMY9n/9mZ/LqpPP8aTeElepD37aoVUPREavdejN3nUaLVNww==","signatures":[{"sig":"MEUCIQCStQiU/n9nPctqLWgSk7HsDyv/Wp7RhrPjLCG7CYmedgIgX4uRkqBdVCye0ZUMuMEN8ZYjwrvem73vswIYkQJUGZk=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"009bd52a1a653ad99134a1591c0545f450df22d1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v18.19.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"18.19.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.22.1","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.22.1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.22.1_1712298141731_0.19268243926298756","host":"s3://npm-registry-packages"}},"0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1":{"name":"@strapi/pack-up","version":"0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"dce25d4bf390b3f231f1e06935d66ca3f2c3de77","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1.tgz","fileCount":102,"integrity":"sha512-kjwH1qRXD+0NM5L+SpoDjKZ/3DsmvT5nbQPzolb9mSm33c7PId/PFQ2c7cpKdVuaxy4inK2tQM8bqo5kzUJRCg==","signatures":[{"sig":"MEYCIQDbMwhJLE5YE2SnNLnE3t5jJiWoM1LQEgdEHKzr6u4b2wIhANUmMAYDxxXyvXu7mSTUb1MdtHc2L02JtGr1xKXn5y1W","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"00cd76085e4bb6c15688e9671f74f517f25926c1","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.11","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1_1712352609079_0.8828694728977897","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a59adce7f642427a0494f473ea68dec17b5bac11","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb.tgz","fileCount":102,"integrity":"sha512-/zn+/aMxKF1Vo05B/VY9dy17zVaLBtSCsO1PR/fWRRITnqaHXRT0xSURJaAmDdGR4vgVOGLiIpzlAohzVF52RQ==","signatures":[{"sig":"MEQCIHmhAj1fbhF9SL6wk4XG8RBBJv2y21A1jrMa9s7VAAMoAiBmAEM/PXBbyvdZy3w+UJNXKEux+ECZDDt8Wly7lcOpvw==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d5b46d578a5c055b8dcc66939e1b5d540976fafb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb_1712353582081_0.7586825879826191","host":"s3://npm-registry-packages"}},"0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5":{"name":"@strapi/pack-up","version":"0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b27fec21a5cc0ab50d01b9458b72a018c6d8c444","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5.tgz","fileCount":102,"integrity":"sha512-d8K50A7/WrzLwFdNdA9SSaZe8Lhu1N2l+qrkf51yQYsVaPVLbstufQaPEMUEWOR5V35mMDpxkkL05W9Db1WFdg==","signatures":[{"sig":"MEUCIQCpauMI5QGFG5M7TVZ3ZJbb8Cwv+krJ3mjlqGev+c4IfQIgSS810PhO1QfW3CkA3C/vv7rKy4fsKKi1CAxBEiicCdc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"68c52dc267ceb9c5b8183117142351a1b09176c5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.11.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.11.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5_1712362935295_0.42729436036339585","host":"s3://npm-registry-packages"}},"0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5":{"name":"@strapi/pack-up","version":"0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"001f41f1470d85517133cab0f628e0839cb20d4a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5.tgz","fileCount":102,"integrity":"sha512-Ma8KTK0qXsetWf7uTDW7mpSr346tubR6EX5TCA6JvoaM0m6mze9GHUvRkQEhyNh05zj8iiO/dMkCFk/K2gA5xg==","signatures":[{"sig":"MEUCIBBiaN+6U1Dy9368x2pO3C0YmgzMSGkyVU+dkji4TOWYAiEAvipPiiasZMloT0XH0MgVFlLDhMBn65w9vmEOu6WZppc=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"68c52dc267ceb9c5b8183117142351a1b09176c5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5_1712590290540_0.900513210135119","host":"s3://npm-registry-packages"}},"0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91":{"name":"@strapi/pack-up","version":"0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"7f44b5a689799c87cd0276c994127a42b87e6338","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91.tgz","fileCount":102,"integrity":"sha512-KUzW58CgL1gdNcWalHUiwpslA7UrChfkRVDobfhpXnO/q7yyLkDr/W2XypNtWsYtwziJgKl5KZAcZMcfmWLxog==","signatures":[{"sig":"MEUCIQDqd1S8pv5bHMOgYjlWAWJ1boqyxZVuoc18S6aCgejIjQIgdDfOXVwTJi7P0uST7Eb9l9y40NLMxcASA/Yq6WTTLWU=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"850e0a5a71775222c7a1c8be01d4a08e7975bf91","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91_1712597816716_0.09252806999468444","host":"s3://npm-registry-packages"}},"0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331":{"name":"@strapi/pack-up","version":"0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"baf2d015ef81f3234537ec0656be4c1379d2d7d2","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331.tgz","fileCount":102,"integrity":"sha512-fdHAibMMl7euG190VzdegBHNddOSZNkrF5efn/BfzqvFNJo6QspY4piKz6Y6uNhxKXlci6y3IK1FtMnfZ4IS+g==","signatures":[{"sig":"MEUCIGqwFiGxs+ysyLPZVvz+h9iWfXf0xaex1kZEHvyvdMPzAiEA8KI/lDl6z1pzQNZ2ph4kyPxrVWcpy+wwKKErc4GTB8w=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4dbfc9c0220552ce3e3997bf993b0978b0e60331","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331_1712622205354_0.3577668636027458","host":"s3://npm-registry-packages"}},"0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331":{"name":"@strapi/pack-up","version":"0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b209eedbff75b2ea4949068fa71798b340d4389b","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331.tgz","fileCount":102,"integrity":"sha512-RLbEqI7D4O0OOmNpsno3Muo5A8f8V8f/UfdHCqYsyHGTqhvRV7ta7W66eg5n6Wi5v4Kq+9rWnz9gNk3t8NSJYw==","signatures":[{"sig":"MEUCIQCMZ86JR494alI5reU8yryxC9WTCHGX1NuUPoKwMoMdywIgF1+gDIaPG6JAUOfnfShzWa1s4MWsAaKiEn9R/KvFJWI=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"4dbfc9c0220552ce3e3997bf993b0978b0e60331","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331_1712647092730_0.6088879453644986","host":"s3://npm-registry-packages"}},"0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9":{"name":"@strapi/pack-up","version":"0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"d821fbb825c4d438e82a421a4d5b62298578c839","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9.tgz","fileCount":102,"integrity":"sha512-vQYrXE1ZYAB6st8EckC8iIwpLyFHsrQSvDEFQ2OxJampXwPpeocDrbiKwD32UbY9FSILnQowuO3RGM+qUZXZ8Q==","signatures":[{"sig":"MEYCIQCHwpA41U9Yak8sw1mrPvASNy1VbABo5S01RY+mda129wIhAPXXf8H8h9CWOLzHPfhdLdiaE/ERd4MwR7WWFCRzbwOj","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"278810435898f00fdb278784c5f1d43653954bf9","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9_1712654960526_0.31011473036670334","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"12284abff1e40f5f5e65d92cb3733422eab4bf69","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272.tgz","fileCount":102,"integrity":"sha512-78ypgg84xfRzUVUUF8QAu5q5+SIoqm3oOVDrSH4axDSCK5kwS18Z3MTC6mqCeS6kmba+b29SC1UPjGZe2gskfg==","signatures":[{"sig":"MEUCIAMdbVdm26cXlCi8c0mrnzu81VEIo4h9FQcvKEzosZfgAiEA4mVK28CP+PhImGjkDGzo/LCDEhjEpVNAwg6V7XqhB+s=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1663bb2dfe3d9f660316a41d3134bc03f5ef7272","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272_1712659640096_0.8457040510934268","host":"s3://npm-registry-packages"}},"0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82":{"name":"@strapi/pack-up","version":"0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2fd9d91f95fd0c6de60ded17e733e60796103afa","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82.tgz","fileCount":102,"integrity":"sha512-wHEy61WrUtyDx4X0XNeMTHvLpP/sUly+riJ89RSrDDMng9qVn+aUhsgT4/3prfIJoS9atVqhLD5ts1o01ifMEA==","signatures":[{"sig":"MEUCIQCw76IOWQCjnOwZtvoViPvFQNrlsUI6YEB5BJARr9IcswIgR9yyOWa4nZ2iOgTAy2A+6WWQxk+yiJaFAQiMZmWI1+c=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"bcfd4881e086b8126222bb894121c61ff9a1fc82","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82_1712683196205_0.787238272101723","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b737cdc1af7313ab8d090696642e665cf4d80dbf","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836.tgz","fileCount":102,"integrity":"sha512-AZ3R3Da0KN1SnasMr1Otoih7Dlob1g7/D6vbW5SOY5feFRh+WFVS6WhQkev1vTfQGxFEJvTWzuQyYW53VD9KUg==","signatures":[{"sig":"MEUCIQDyeh9LpkUgGVUejzuhlLMIif0QUxt5ms8708k7oGyLlAIga8xBvP1UNFRrW7g99cDgxQHAwlN+jcHqDMNR+coP2K8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a4a921252e487a82f800a25fa12ef1f7b902a836","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836_1712695743408_0.5999187346979067","host":"s3://npm-registry-packages"}},"0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3":{"name":"@strapi/pack-up","version":"0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"350ffca7198a92d58c461dda711878754322e5cc","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3.tgz","fileCount":102,"integrity":"sha512-gP5CriBkXRMl+qTgmEURTTM9mxv9KRweyqNLfO3C/9/+qK4eBfx/ZVYqKxJEfzonZZxP0+q+hiAoVnn3Jb3IUw==","signatures":[{"sig":"MEUCIQDrDsDSmOTAb9vHgduH8EPMSfysvA3HYiH96z0kqV796QIgZrZYebmbRw9MAjDYU3dcS0CK97pmKd9HuggPMJYWBuE=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"cb00a1799402728de4ecec6d52a815e33fcedaf3","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3_1712708559814_0.15025831739521767","host":"s3://npm-registry-packages"}},"0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632":{"name":"@strapi/pack-up","version":"0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"e5b79b5430d766fb547760f8e0db6b18505cabd1","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632.tgz","fileCount":102,"integrity":"sha512-SDxBOcuSeC0CeMC+r3PTZ/U/4VXzf29GAySqXcUyGKtGBs0pW5jY+6FNFnNWe9RoLmRhPO1Sd06+1rNhsw0ULQ==","signatures":[{"sig":"MEUCIQDUV+Ycw9lPW+pV8bKmI+r9UeazNzGRu2wt9czF3j3oXAIgXkzWX7tLN0wzZXkbIgzitnpB3PYZHCPVC1fxwihtG5k=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c9e20202255c314da117dcb3776215e94f886632","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632_1712750353630_0.7900784149787357","host":"s3://npm-registry-packages"}},"0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0":{"name":"@strapi/pack-up","version":"0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b57c027ab98627b87f2be5dcd9c00edde0004b17","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0.tgz","fileCount":102,"integrity":"sha512-hEBLsjyjAOLGbJtE4OMLzvb0jxGbQcayBnIsFqjS2yGtfLHppVJrb+KksSopSClIUa5Q288n27Ij/1QyOiwM+w==","signatures":[{"sig":"MEUCIQDQRyjvUP2USbLTCCQxnPllpJSwyhFicxn59wrhj3FF1gIgborIak+grrg+iYIDYwCyCUi2Cj2Je3/S3ys9BZk+cs8=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"51df0913748e7fceb29f84feb18877a76aa1a4c0","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0_1712754807378_0.7226247856400583","host":"s3://npm-registry-packages"}},"0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452":{"name":"@strapi/pack-up","version":"0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"cb703e8e09c126978b4c11d200735382a227eba0","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452.tgz","fileCount":102,"integrity":"sha512-IcKP2zwm+KWjYUl8Kp7SHMkO0AXPPdL/j9mTCFqJ6HdR0MAvsxUuKJKP/uhpxs368Aoj4ViaQPIj4IJEOYUoPw==","signatures":[{"sig":"MEYCIQDSCluMVOFoFi4CbnAR5/MQI58B2H57tJD7D3rIA+XYeQIhAJdBozvNFSAoKY8PO0qkqmrDv6wYPBpE+tB9irrB0mMp","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"04af9d2a22e296c7a8c164f72df6ee0648d42452","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452_1712755554413_0.5187072303720475","host":"s3://npm-registry-packages"}},"4.23.0":{"name":"@strapi/pack-up","version":"4.23.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@4.23.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c75f985a370f47414d9643545ee8e26c486b3711","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-4.23.0.tgz","fileCount":102,"integrity":"sha512-hiSqUEEzks2JDai6bfvtvPHYaPhI6UnSifx9ZqBdC9Q551BYm1xt+1K7HJVeW0IPI4zLckZvCcGPHh/NeYyTPw==","signatures":[{"sig":"MEYCIQC0q6iVte6a0nrmVk7CLP5vfONSk7g6nJRzflOIPCVlxQIhAKDwIRYThy0I48BkPJpaF5ajv2QI+hAm7R+EJbsej8E/","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720647},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"c2dbce3ea567c6996b97c1f4db41fcf9fde0fea5","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.9.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.9.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"4.23.0","@types/git-url-parse":"9.0.1","eslint-config-custom":"4.23.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_4.23.0_1712760134685_0.54993505983183","host":"s3://npm-registry-packages"}},"0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000":{"name":"@strapi/pack-up","version":"0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"714c2f64e22e72920de473e31dccc4299acf86f3","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000.tgz","fileCount":102,"integrity":"sha512-tS4E12PoHFpV8YJLBKuDUIB5a5abt1sqeF2o7GLIdpeXPGMLO7x2qhxS4s11a8iS5wxBQIwCpZXb7709wEU1wQ==","signatures":[{"sig":"MEUCIBmtcaLDrwbwSlfmwoIMBF6mIRhIJLUEoqA6EhXPw73dAiEAgvaq5xxJS56IfhvXIuuCkkzuiEtIN+DNllkarVPmDII=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000_1712764800365_0.16668306995936844","host":"s3://npm-registry-packages"}},"0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f":{"name":"@strapi/pack-up","version":"0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"550b78c697083c940320276c16cd23fa96ea0c0d","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f.tgz","fileCount":102,"integrity":"sha512-qfd5XRMuYZXn9Gmo2dWesOuKMrSVc2ZDrgdK+A1jxjZfti72aTLTsgHWXFqDCR+6/hA0dP0TXCeizE3zun3C+g==","signatures":[{"sig":"MEUCIQCtej0JpTWA1ZmeYr/Mt/aYFpgG2UmQq5S0R4z8cE3DRQIgN3z8n3pMLW8XyeVUXohcZOWREL24geNnTT+Y8CZHuH4=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"fea7af0bd6b406e4648e4c6669829249f73eb60f","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f_1712765108096_0.5435403038777327","host":"s3://npm-registry-packages"}},"0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb":{"name":"@strapi/pack-up","version":"0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"91973fde45fb8b6414a0042a7eb61fa0d7b0080a","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb.tgz","fileCount":102,"integrity":"sha512-Ell9x1T1h8q8bHgRp8wkc/kAdvRV2SA5RgnkTQpDxnHQIf28ChXpE2hyTmww3sbIbW7+c5M3bYNjZlkehgIoZA==","signatures":[{"sig":"MEUCIDAwAtuHqDPlom/03LSZDzjz8WOKF8HCghjZcZ/6PDgmAiEAoofDcIM5BKeygcZDiX9HUOajC0SRIrfu3rcruKOjTjs=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"d00dc50c81bce037c4321a90cc2f790eb3c51acb","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb_1712765188064_0.4216606570909356","host":"s3://npm-registry-packages"}},"0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4":{"name":"@strapi/pack-up","version":"0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"b9490298794b68ae3780b541ad282ffcfff59f79","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4.tgz","fileCount":102,"integrity":"sha512-Vp8E9hXIlcOprn2TBWuELihKGJ/+0Ttdt4r+wxmcZjqkDxAqZ0uKFW4VoeAtHLCjaV6h2ZwQ203dWXtW+yskAw==","signatures":[{"sig":"MEUCIQDab4GFcPqsGt1rOuMCNt0FaDNU/TfPqNGseLGrdiF4TwIgIw4tOiYrvIzX8C58Ib4MQVnBFWnkZS9Z4JjiHFhXUWM=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"ff9fa9d232d9f3748bebc8185e276f8409c07ed4","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4_1712767154611_0.27996379533805604","host":"s3://npm-registry-packages"}},"5.0.0-beta.3":{"name":"@strapi/pack-up","version":"5.0.0-beta.3","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0-beta.3","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"a18b0be790e294e63fac64db21c06649f987e12c","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0-beta.3.tgz","fileCount":102,"integrity":"sha512-GX1u9R2sbT3a5vVejUMQTYWLmLO5N1/oEki4uJJla/AnXSyKBAFh+jFK6J1UzGdP67V7HEKVMTCnwcBFSlzxdw==","signatures":[{"sig":"MEYCIQCIWbti9wO92EigYQ88YH98mLHU2HWp+TMhcVIZ4slAtQIhAOT1MB9XbBv2yh6SZ48nWShrKC9ePi6Cske48X1fcU2H","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":721561},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"cff608ed925db31db7f6cb84aac4a0576f54e90c","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/8.1.2/node@v20.12.0+arm64 (darwin)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.0","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"3.2.5","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.12"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"5.0.5","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"5.0.0-beta.3"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0-beta.3_1712769110440_0.5286413080402896","host":"s3://npm-registry-packages"}},"0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a":{"name":"@strapi/pack-up","version":"0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"c3e553d714dc2d51c50d173f131eef611ac22e0f","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a.tgz","fileCount":102,"integrity":"sha512-oIVTWbvRlR+keuimjWNM1/xrp3kZ469XoF2Fk9yFXV39DveukG/sHnQNyJHy7jTXKPI8rfhBLnleUGQI69BPTQ==","signatures":[{"sig":"MEQCIAvxl+EfEQEtL9xcCTfmpZn8vBG8VqVexbCoeC7o4Q/5AiAQkkk7CganlP0245R7pGkwdFwR/xzI3o0UaXUbVA1ZOA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"8eb29ac7ea9fec54363dab89723e6c99691b5f6a","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a_1712771613118_0.29799389937751486","host":"s3://npm-registry-packages"}},"0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463":{"name":"@strapi/pack-up","version":"0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"81404ab76a99729d56bead80e52e4751bd36d8b6","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463.tgz","fileCount":102,"integrity":"sha512-qcwvvvnFJPvg/53YQTUlaHJbX1vhNcuCKz6+C5qcN9KK0KXGGOMXErbQ/cqgJWk8ZQnCB49afkefXE/5RkGNoA==","signatures":[{"sig":"MEUCIQD72Z5TQ4sM3xGCE2nOwAiv2sekVxGU0pnWsw7tuYmV4gIgHA+TNcTGJ5IqqgWLKnQTjvFxSa2/e4lk2RWP/t3x5Ow=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"1041bfa1f0e2bb0513842ae9b42023d69596d463","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463_1712772377567_0.7801041095953283","host":"s3://npm-registry-packages"}},"0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd":{"name":"@strapi/pack-up","version":"0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"45deef21fbc75ea6815f1c63e3cbadfa5a2627ac","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd.tgz","fileCount":102,"integrity":"sha512-5xojQ9eWrKxFoZToOkzo1GUu1KMvk+ySh8Fsjg7P4cHIAiNXxYUZuoYpoxPvNZ73KhA2HU++HzvKolPIc6lYcQ==","signatures":[{"sig":"MEUCIQCGufn4+UGp0RCR+AJ0n1bDER+mOkI4/FZKQvdHPwD/rAIgGtPxGmqG3yLRrMzqPfo5kXnMIMCT8yompSFjN/vzRag=","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"cfecf3ad808761571ce11e528113e5c1ea5f87fd","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd_1712795017960_0.63076074436809","host":"s3://npm-registry-packages"}},"0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e":{"name":"@strapi/pack-up","version":"0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0f59a91d92cdfe69360425fd2e5baaf0dcf79522","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e.tgz","fileCount":102,"integrity":"sha512-+rI0pvwHNNO5tQ53IHi604l7NzdI2DGKOPoecgP3tXzksu3fiUggz+d/eIze8Ju1N/zaF+J8VOz3XUlGn+CuWQ==","signatures":[{"sig":"MEYCIQC+DlGHxBDL2h173lMA3iOha7pB6FcnkSZ6OkrCurOwBgIhAKIESFTgLMDCZOFOijGYXUnF7/UU8zFT5unpVLAWFHKp","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720806},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"a6060b60559b7e4e36fe81fe1ff8936b53a3808e","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e_1712828632581_0.962674106358506","host":"s3://npm-registry-packages"}},"0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885":{"name":"@strapi/pack-up","version":"0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"2dbb6236e35fc15fa27c77b3dcc93e41b63c1553","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885.tgz","fileCount":102,"integrity":"sha512-ZEv6/Q06SRqnNR5mCnJJhfVDoB1+qU5vPGNE8OpLKcYvnaNryRj/gb2mEUa5dh12auIXtFWrBgWFZ92SRKPvFA==","signatures":[{"sig":"MEYCIQDmSujWgvM5Ux+yiRPLlGeZL0ZN+wBwJ0L5iR716yN6GAIhAJCwpbUS11X/vbsGkevdSCQBprt0P2KuLKCGAllba37Z","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":721655},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"3f7595ce0400b451ca4947408046e7b9b9cd4885","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/8.1.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"3.2.5","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.12"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"5.0.5","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.3","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885_1712838502213_0.8220775442983554","host":"s3://npm-registry-packages"}},"5.0.0":{"name":"@strapi/pack-up","version":"5.0.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/pack-up#readme","bugs":{"url":"https://github.com/strapi/pack-up/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"aeca7cee2a2e5555e3bdd39528c36385c4ed6ad4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.0.tgz","fileCount":68,"integrity":"sha512-XN00SUwiR/rFTXxA3TMyuPt6SN4r6vuhUtx3y2D0NTzgVToNi++MyspPQ/jHbolHhQxUWnet6X/2JRprtE/YpQ==","signatures":[{"sig":"MEYCIQDPjN2C+sNF0IDrNpIccjG5toctDoMUoPvjJIrA2AKbfgIhAOvk3XFLtn/wdd8Jtpigv+G0X/z3dqOj+8YzCd0G1NET","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":703031},"main":"./dist/index.js","_from":"file:strapi-pack-up-5.0.0.tgz","types":"./dist/index.d.ts","module":"./dist/index.mjs","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"lint":"eslint .","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","watch":"node -r esbuild-register scripts/watch","test:ts":"tsc --noEmit","test:unit":"node --experimental-vm-modules node_modules/jest/bin/jest.js","release:add":"changeset add","prettier:check":"prettier --check .","prettier:write":"prettier --write .","prerelease:exit":"changeset pre exit","release:publish":"changeset publish","release:version":"changeset version && pnpm install","prerelease:enter":"changeset pre enter"},"_npmUser":{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},"_resolved":"/tmp/0cb752dc35d2bb6807ceade75bcdd3c5/strapi-pack-up-5.0.0.tgz","_integrity":"sha512-XN00SUwiR/rFTXxA3TMyuPt6SN4r6vuhUtx3y2D0NTzgVToNi++MyspPQ/jHbolHhQxUWnet6X/2JRprtE/YpQ==","repository":{"url":"git+https://github.com/strapi/pack-up.git","type":"git"},"_npmVersion":"10.5.0","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.2","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.2.8","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.20.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.6.0","prettier":"2.8.8","commander":"8.3.0","typescript":"5.4.4","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.14"},"_hasShrinkwrap":false,"packageManager":"pnpm@8.15.6","devDependencies":{"jest":"^29.7.0","husky":"^9.0.11","eslint":"^8.56.0","@swc/core":"^1.4.13","@swc/jest":"^0.2.36","@types/ini":"4.1.0","@types/jest":"^29.5.12","lint-staged":"^15.2.2","@types/prompts":"2.4.9","@changesets/cli":"^2.27.1","@commitlint/cli":"^19.2.1","@strapi/pack-up":"5.0.0","@types/prettier":"^2.0.0","eslint-plugin-rxjs":"^5.0.3","@types/git-url-parse":"9.0.3","@strapi/eslint-config":"^0.2.1","@changesets/changelog-git":"^0.2.0","@typescript-eslint/parser":"^7.6.0","@commitlint/config-conventional":"^19.1.0","@typescript-eslint/eslint-plugin":"^7.6.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.0_1712842419153_0.7399182594568969","host":"s3://npm-registry-packages"}},"0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892":{"name":"@strapi/pack-up","version":"0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"4bc00e1eca801afd75fccc05764840149502ceff","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892.tgz","fileCount":102,"integrity":"sha512-u4+eusrs8wG6nNJiPJCuipHtQD3zczv5y28NHjdXqsD3cLlLqR7UsKN7gMzPOwxVi1URxVlaAZkJ+nz2ajEKCA==","signatures":[{"sig":"MEQCIFlmmXFHZF6HB3csiAr3YZSOWGc2GWH3lVB8O/KuU84TAiBCoxqYvwsMtVROn/3QWBr6tiz8o8sYwkfhgCW1Lwv2xA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":720782},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"463b44b9754d32cf12e41a60339263470c70a892","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/6.6.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.0.13","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"2.8.4","commander":"8.3.0","typescript":"5.2.2","git-url-parse":"13.1.0","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.5.0","prettier-plugin-packagejson":"2.4.5"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"3.0.2","@types/ini":"1.3.31","@types/prompts":"2.4.4","@strapi/pack-up":"0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892_1712881356808_0.018009907181433693","host":"s3://npm-registry-packages"}},"0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba":{"name":"@strapi/pack-up","version":"0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/strapi#readme","bugs":{"url":"https://github.com/strapi/strapi/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"fcb3ef5379c743863e32c4939808129a09333aa4","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba.tgz","fileCount":102,"integrity":"sha512-pNPfDPbp1XC06X06GZUZMmy0AmxLw1/5FO4rOvnxfjvniTPtYQK4eMhE4gLyacEgWr6Bto5j89P1ycpSSdUFig==","signatures":[{"sig":"MEQCIBfBgZXoks9G70bQEQViT76DbxsGxxjF5HWK7BBtUNyhAiAR04eRlWBrEMnAaHOUmSsxF27tBntZuqaNFK/+v2BVZA==","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":721655},"main":"./dist/index.js","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"gitHead":"74c69aeafc770d59d5b3d5d37cd249934ef395ba","scripts":{"lint":"run -T eslint .","test":"test:ts && test:unit","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","clean":"run -T rimraf ./dist","watch":"node -r esbuild-register scripts/watch","test:ts":"run -T tsc --noEmit","test:unit":"run -T jest"},"_npmUser":{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},"repository":{"url":"git+https://github.com/strapi/strapi.git","type":"git","directory":"packages/utils/pack-up"},"_npmVersion":"lerna/8.1.2/node@v20.12.1+x64 (linux)","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.12.1","dependencies":{"ini":"4.1.1","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.1.6","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.19.11","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.5.3","prettier":"3.2.5","commander":"8.3.0","typescript":"5.3.2","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.12"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"rimraf":"5.0.5","@types/ini":"1.3.31","@types/prompts":"2.4.9","@strapi/pack-up":"5.0.0-beta.2","@types/git-url-parse":"9.0.1","eslint-config-custom":"0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba_1713169756568_0.2891500530013884","host":"s3://npm-registry-packages"}},"5.0.1-alpha.0":{"name":"@strapi/pack-up","version":"5.0.1-alpha.0","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.1-alpha.0","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/pack-up#readme","bugs":{"url":"https://github.com/strapi/pack-up/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"0506a3213679bac7917e41b737b73a89f33b9032","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.1-alpha.0.tgz","fileCount":68,"integrity":"sha512-BRi58PYcYTLdzMSjbMoHN2chJ91cxy9Sj3JhdzUHBZ2/9QEBv2nhWSt+uP+Wh687LMF4ho0GmvMUlI+Z8uHRLA==","signatures":[{"sig":"MEYCIQDWQ8vtA2sd8q6HufLizKDNNkifzqwwjWxEetsTB7P4SQIhAOU5sgAjoKb2fH367qFZG3J9AGswgzJg/j+MhRMx+UAq","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":702443},"main":"./dist/index.js","_from":"file:strapi-pack-up-5.0.1-alpha.0.tgz","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"lint":"eslint .","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","watch":"node -r esbuild-register scripts/watch","test:ts":"tsc --noEmit","test:unit":"node --experimental-vm-modules node_modules/jest/bin/jest.js","release:add":"changeset add","prettier:check":"prettier --check .","prettier:write":"prettier --write .","prerelease:exit":"changeset pre exit","release:publish":"changeset publish","release:version":"changeset version","prerelease:enter":"changeset pre enter"},"_npmUser":{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},"_resolved":"/tmp/0dd7437199bf4b12c88c578e292751c4/strapi-pack-up-5.0.1-alpha.0.tgz","_integrity":"sha512-BRi58PYcYTLdzMSjbMoHN2chJ91cxy9Sj3JhdzUHBZ2/9QEBv2nhWSt+uP+Wh687LMF4ho0GmvMUlI+Z8uHRLA==","repository":{"url":"git+https://github.com/strapi/pack-up.git","type":"git"},"_npmVersion":"10.5.2","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.13.1","dependencies":{"ini":"4.1.2","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.2.8","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.20.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.6.0","prettier":"2.8.8","commander":"8.3.0","typescript":"5.4.4","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.14"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","husky":"^9.0.11","eslint":"^8.56.0","@swc/core":"^1.4.13","@swc/jest":"^0.2.36","@types/ini":"4.1.0","@types/jest":"^29.5.12","lint-staged":"^15.2.2","@types/prompts":"2.4.9","@changesets/cli":"^2.27.1","@commitlint/cli":"^19.2.1","@strapi/pack-up":"5.0.1-alpha.0","@types/prettier":"^2.0.0","eslint-plugin-rxjs":"^5.0.3","@types/git-url-parse":"9.0.3","@strapi/eslint-config":"^0.2.1","@changesets/changelog-git":"^0.2.0","@typescript-eslint/parser":"^7.6.0","@commitlint/config-conventional":"^19.1.0","@typescript-eslint/eslint-plugin":"^7.6.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.1-alpha.0_1716208612768_0.5605408930514695","host":"s3://npm-registry-packages"}},"5.0.1-alpha.1":{"name":"@strapi/pack-up","version":"5.0.1-alpha.1","keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"license":"SEE LICENSE IN LICENSE","_id":"@strapi/pack-up@5.0.1-alpha.1","maintainers":[{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},{"name":"markkaylor","email":"mark.kaylor@strapi.io"},{"name":"marc-roig-strapi","email":"marc.roig.campos@strapi.io"},{"name":"lauriejim","email":"jim.laurie.thieurmel@gmail.com"},{"name":"pierreburgy","email":"pierre.burgy@gmail.com"},{"name":"aurelsicoko","email":"aurelsicoko@gmail.com"},{"name":"alexandrebodin","email":"bodin.alex@gmail.com"},{"name":"convly","email":"jean-sebastien.herbaux@hotmail.fr"}],"homepage":"https://github.com/strapi/pack-up#readme","bugs":{"url":"https://github.com/strapi/pack-up/issues"},"bin":{"pack-up":"bin/pack-up.js"},"dist":{"shasum":"66fdb9d9b0455b072dd29d8c88bfea1784231d33","tarball":"https://registry.npmjs.org/@strapi/pack-up/-/pack-up-5.0.1-alpha.1.tgz","fileCount":68,"integrity":"sha512-FEuo7jcU+YTB8Q1UZteSZ0i/ghWBccBYX57ZOrUcDK6zKuUc0GOIGp010KzqaEHLJkU5c0Us+Cz3yTN7+8omiQ==","signatures":[{"sig":"MEYCIQCU4dytDVmfY7beyhXmTe+J9Q0SDHtiIKTLqs/0HPkJMQIhALMCg5+3sjJmCYLLcTlTAkvqBhxtsGair0i5o2McZFh9","keyid":"SHA256:jl3bwswu80PjjokCgh0o2w5c2U4LhQAE57gj9cz1kzA"}],"unpackedSize":702093},"main":"./dist/index.js","_from":"file:strapi-pack-up-5.0.1-alpha.1.tgz","types":"./dist/index.d.ts","module":"./dist/index.mjs","readme":"<h1 align=\"center\">pack-up</h1>\n<h3 align=\"center\">Your daily lunchbox of bundling tools</h3>\n\n<br />\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/v/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://www.npmjs.com/package/@strapi/pack-up\" target=\"_blank\">\n    <img src=\"https://img.shields.io/npm/dm/@strapi/pack-up.svg?style=flat&colorA=4945ff&colorB=4945ff\" />\n  </a>\n  <a href=\"https://discord.gg/strapi\" target=\"_blank\">\n    <img src=\"https://img.shields.io/discord/811989166782021633?style=flat&colorA=4945ff&colorB=4945ff&label=discord&logo=discord&logoColor=f0f0ff\" alt=\"Chat on Discord\" />\n  </a>\n</p>\n\n<br />\n\npack-up is a set of simple tools for creating interoperable CJS & ESM packages.\n\nSetting up a new interoperable project is as easy as doing:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n\ncd my-package\n\nnpm run build\n```\n\nJust a small bit about us:\n\n- **Vite**: We support `vite` as a JS bundler, no need to install it though as it's preprepared with helpful defaults ready to tackle all projects.\n- **Concise**: It's all based off your `package.json` so you know the interoperable aspect is correctly set up and there's no requirement for another config!\n- **Flexible**: Need more customisation or to bundle a package not declared in your exports? Use the config file to dictate separate bundles & options.\n\n## Getting Started\n\nIf you're setting up a brand new package we recommend you use the `init` command to get started:\n\n```sh\nnpx @strapi/pack-up@latest init my-package\n```\n\nBut if you're adding this to an existing project then just install like every other dependency:\n\n```sh\nnpm install @strapi/pack-up@latest --save-dev\n```\n\nAnd to help you ensure your package is set up correctly run the `check` command:\n\n```sh\nnpm run pack-up check\n```\n\nRun `pack-up -h` for more information on CLI usage.\n\n## Commands\n\n### `init [path]`\n\nCreates a new package at the given path, by default uses the inbuilt template sensible options for your package to choose from.\n\n- `--template [path]` – path to a custom template of type `TemplateOrTemplateResolver`.\n\n### `build`\n\nBuilds your current package based on the configuration in your `package.json` and `packup.config.ts` (if applicable).\n\n- `--minify` – minifies the output (default `false`).\n- `--sourcemap` – generates sourcemaps for the output (default `true`).\n\n### `check`\n\nChecks your current package to ensure it's interoperable in the real world. In short, validates the files in your dist have been produced as we expect & then `esbuild` can actually build, using your exported code.\n\n### `watch`\n\nWatches your current package for changes and rebuilds when necessary.\n\n## Configuration\n\n`@strapi/pack-up` by default reads its configuration from your `package.json`. But sometimes you need more flexibility, to do this you can create a `packup.config.ts` file in the root of your package.\n\n```ts\n// packup.config.ts\nimport { defineConfig } from '@strapi/pack-up';\n\nexport default defineConfig({\n  minify: true,\n  sourcemap: false,\n  externals: ['path', 'fs'],\n});\n```\n\n### Options\n\n#### `bundles`\n\n- Type: `ConfigBundle[]`\n\nAn array of entry points to bundle. This is useful if you want to bundle something that should not\nbe exported by the package, e.g. CLI scripts or Node.js workers.\n\n#### `dist`\n\n- Type: `string`\n\nThe path to the directory to which the bundled files should be written.\n\n#### `exports`\n\n- Type: `Record<string, Export>`\n\nOverwrite or amend the parsed exports from your `package.json`.\n\n#### `externals`\n\n- Type: `string[]`\n\nAn array of modules that should not be bundled but instead be resolved at runtime, this is by default the dependencies listed in your `package.json` (excluding devDeps).\n\n#### `minify`\n\n- Type: `boolean`\n\nWhether to minify the output or not.\n\n#### `plugins`\n\n- Type: `PluginOption[] | (({ runtime }: { runtime: Runtime }) => PluginOption[]);`\n\nAn array of Vite plugins to use when bundling, or optionally a function that returns an array of plugins based on the runtime.\n\n#### `preserveModules`\n\n- Type: `boolean`\n\nInstead of creating as few chunks as possible, this mode will create separate chunks for all modules using the original module names as file names.\n\n#### `sourcemap`\n\n- Type: `boolean`\n\nWhether to generate sourcemaps for the output or not.\n\n#### `runtime`\n\n- Type: `Runtime`\n\nThe transpilation target of the bundle. This is useful if you're bundling many different CLIs or Node.js workers and you want them to be transpiled for the node environment.\n\n#### `tsconfig`\n\n- Type: `string`\n\nPath to the tsconfig file to use for the bundle, defaults to `tsconfig.build.json`.\n","source":"./src/index.ts","engines":{"npm":">=6.0.0","node":">=18.0.0 <=20.x.x"},"exports":{".":{"types":"./dist/index.d.ts","import":"./dist/index.mjs","source":"./src/index.ts","default":"./dist/index.js","require":"./dist/index.js"},"./package.json":"./package.json"},"scripts":{"lint":"eslint .","build":"node -r esbuild-register scripts/build","check":"node -r esbuild-register scripts/check","watch":"node -r esbuild-register scripts/watch","test:ts":"tsc --noEmit","test:unit":"node --experimental-vm-modules node_modules/jest/bin/jest.js","release:add":"changeset add","prettier:check":"prettier --check .","prettier:write":"prettier --write .","prerelease:exit":"changeset pre exit","release:publish":"changeset publish","release:version":"changeset version","prerelease:enter":"changeset pre enter"},"_npmUser":{"name":"tdfka_rick","email":"Joshua.ellis18@gmail.com"},"_resolved":"/tmp/639c232b49e7ad1c46b5daa271495c59/strapi-pack-up-5.0.1-alpha.1.tgz","_integrity":"sha512-FEuo7jcU+YTB8Q1UZteSZ0i/ghWBccBYX57ZOrUcDK6zKuUc0GOIGp010KzqaEHLJkU5c0Us+Cz3yTN7+8omiQ==","repository":{"url":"git+https://github.com/strapi/pack-up.git","type":"git"},"_npmVersion":"10.5.2","description":"Simple tools for creating interoperable CJS & ESM packages.","directories":{},"_nodeVersion":"20.13.1","dependencies":{"ini":"4.1.2","ora":"5.4.1","yup":"0.32.9","rxjs":"7.8.1","vite":"5.2.8","boxen":"5.1.2","chalk":"4.1.2","pkg-up":"3.1.0","esbuild":"0.20.2","outdent":"0.8.0","prompts":"2.4.2","chokidar":"3.6.0","prettier":"2.8.8","commander":"8.3.0","typescript":"5.4.4","git-url-parse":"13.1.1","esbuild-register":"3.5.0","get-latest-version":"5.1.0","browserslist-to-esbuild":"1.2.0","@vitejs/plugin-react-swc":"3.6.0","prettier-plugin-packagejson":"2.4.14"},"_hasShrinkwrap":false,"readmeFilename":"README.md","devDependencies":{"jest":"^29.7.0","husky":"^9.0.11","eslint":"^8.56.0","@swc/core":"^1.4.13","@swc/jest":"^0.2.36","@types/ini":"4.1.0","@types/jest":"^29.5.12","lint-staged":"^15.2.2","@types/prompts":"2.4.9","@changesets/cli":"^2.27.1","@commitlint/cli":"^19.2.1","@strapi/pack-up":"5.0.1-alpha.1","@types/prettier":"^2.0.0","eslint-plugin-rxjs":"^5.0.3","@types/git-url-parse":"9.0.3","@strapi/eslint-config":"^0.2.1","@changesets/changelog-git":"^0.2.0","@typescript-eslint/parser":"^7.6.0","@commitlint/config-conventional":"^19.1.0","@typescript-eslint/eslint-plugin":"^7.6.0"},"_npmOperationalInternal":{"tmp":"tmp/pack-up_5.0.1-alpha.1_1716211080430_0.7355696711395854","host":"s3://npm-registry-packages"}}},"time":{"created":"2023-10-02T14:33:03.536Z","modified":"2024-06-10T09:32:36.490Z","4.15.0-alpha.0":"2023-10-02T14:33:04.006Z","0.0.0-experimental.027d23730e6b4844b73607bb46f9bb6dc53ce51b":"2023-10-02T16:07:51.366Z","0.0.0-experimental.6ddbb39543614cabc7a171ff27a1477e929e4c8f":"2023-10-02T16:28:56.770Z","0.0.0-experimental.d382eaf3766dbaa64edaa12a1cc000d1bfdb457d":"2023-10-03T14:09:25.655Z","0.0.0-next.b42bb21c873e617eed0eb36b0a4872b7c5bd6b0c":"2023-10-07T00:25:38.289Z","0.0.0-next.fb3a0b82484ce466b1efb1b28f16fc8ef73aba4a":"2023-10-10T00:24:55.094Z","0.0.0-experimental.170476e0e602f59266b9b363e3436a0ef1ff9d3e":"2023-10-10T09:49:40.722Z","0.0.0-next.f9f70e25b50f5805e8fa6484dd10a31f9caf54f3":"2023-10-11T00:24:49.438Z","4.14.4":"2023-10-11T12:33:28.055Z","0.0.0-experimental.d584536ba41ac87f684bc2b64965d6493a07fb31":"2023-10-13T14:50:23.377Z","0.0.0-next.8632eeaf18063ea063b9acc1b2771460123d84a7":"2023-10-14T00:26:04.411Z","0.0.0-next.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":"2023-10-17T00:25:38.037Z","0.0.0-experimental.91cf4ee737dd50a97bd44e64fdeb1c6aa8dc421f":"2023-10-18T13:51:24.202Z","4.14.5":"2023-10-18T15:04:03.297Z","0.0.0-experimental.b82b7a3f2c9f8a2d8521f3d9d0909af439c9997d":"2023-10-25T08:09:01.674Z","0.0.0-experimental.1c15eeb66faa7fdb8d65baadc20d933045909aa7":"2023-10-25T12:48:08.875Z","0.0.0-experimental.6c317e275a2e8133090c4b8b90bba9bc85be72f8":"2023-10-25T13:04:33.314Z","4.15.0":"2023-10-25T13:08:19.334Z","0.0.0-experimental.check-license":"2023-10-25T13:24:59.149Z","0.0.0-experimental.d143dd949cf236a2d7b575c5d9ef0cd551113e52":"2023-10-26T12:07:33.609Z","0.0.0-experimental.0f4e7e399dec329437f52b0d6ba8f686341ac8d7":"2023-10-26T14:07:41.368Z","0.0.0-experimental.05b69f4d19809ae0788cd83d4bbbb93c63c5c457":"2023-10-26T14:19:32.531Z","0.0.0-experimental.a32f1b7e76de72b7ef37f283aa8f7e82c46d5acd":"2023-10-26T14:37:16.067Z","0.0.0-experimental.88489423b2233ad024782b2052e6bc88d808bb5d":"2023-10-26T16:28:57.751Z","0.0.0-next.6ee826075dca196ffe945bf784c77c2bcc63c646":"2023-10-27T00:24:21.581Z","0.0.0-experimental.c8cc409b7d7de8f1a8a95fe928f76ff7c3e0f1d8":"2023-10-27T10:00:22.392Z","0.0.0-experimental.c594d39bd99186eab7f05bd9517adc6704d3b1a2":"2023-10-27T13:03:49.870Z","0.0.0-next.c7c44a121f7abc0c52826a7d310fe4534b8727f0":"2023-10-28T00:25:11.998Z","0.0.0-experimental.7150c563ca52765213874a111c32237ef1fa8571":"2023-10-30T21:19:25.219Z","0.0.0-next.7150c563ca52765213874a111c32237ef1fa8571":"2023-10-31T00:25:12.739Z","0.0.0-experimental.59cbf2a06bc48f4ba9cbad0a563b9782a1b35ca3":"2023-10-31T08:31:55.620Z","0.0.0-experimental.3161a2be47fc451d966219be0af39f2274eaf50b":"2023-10-31T08:50:18.475Z","0.0.0-experimental.b06a72a02d782efad2a22511763629f1e919fb69":"2023-10-31T08:53:54.212Z","0.0.0-experimental.9b513a848f62b2329748c692e15a460b63b48a4a":"2023-10-31T15:37:41.050Z","0.0.0-experimental.56d93b4478ff454ccc95198a5b830d260c9033a3":"2023-10-31T16:28:05.168Z","0.0.0-next.4ef442cc491bc4a51f10574f30f5b368fcfd1b2a":"2023-11-01T00:26:58.773Z","0.0.0-experimental.82d0e5b059e9729154be315253d1dd378a043655":"2023-11-02T14:15:01.017Z","4.15.1":"2023-11-02T14:28:39.988Z","0.0.0-experimental.361908b952e5ea663fee441dd163722ff6794d52":"2023-11-02T15:54:59.786Z","0.0.0-next.d482633e774699cc8d4e05531deaeb6001e791cd":"2023-11-03T00:21:59.891Z","0.0.0-experimental.5f65fd6451f1d729b3c96ecb2fadc01878e2f8a7":"2023-11-03T09:17:40.368Z","0.0.0-experimental-5f65fd6451f1d729b3c96ecb2fadc01878e2f888":"2023-11-03T09:20:54.962Z","0.0.0-experimental.ba7a1366917db762b91226b7736f425d2afcba4e":"2023-11-03T09:44:51.916Z","0.0.0-experimental.f107a49a8122dcf1999d1291b19ab6847209bda2":"2023-11-03T10:00:49.319Z","0.0.0-experimental.e530e7d67b0d9a518f41f501d1aee63455516044":"2023-11-03T11:03:35.888Z","0.0.0-experimental.1cec6226fe6c8ca4b8404f1ebac8076d5ee5b336":"2023-11-03T11:30:25.368Z","0.0.0-experimental.0e69461383292883156617d3d81ae7e03f75dd76":"2023-11-03T15:04:19.428Z","0.0.0-experimental.1a3c6a749103fb5f9416579d47e7ed2239fed710":"2023-11-03T15:05:07.097Z","0.0.0-experimental.464db9cf2080552bcbd8e8b039a9da10207fe218":"2023-11-03T15:06:28.411Z","0.0.0-experimental.bad5cf50fd1a1b9a504ee12cbed8a2b93149f70b":"2023-11-03T15:10:34.686Z","0.0.0-experimental.51d7ab04c19ea5b592c633b116a61966aafd7dbd":"2023-11-03T15:32:45.722Z","4.14.6":"2023-11-03T16:03:40.349Z","0.0.0-next.f5b09a8e61e059f02784478e27c310c6290be088":"2023-11-04T00:23:37.058Z","0.0.0-experimental.03194ce5a38172d044a20569a606986987d6ad2e":"2023-11-06T13:42:38.068Z","0.0.0-experimental.41a1238745776fac59a271afaab180cf06ba6642":"2023-11-06T15:44:57.467Z","0.0.0-next.02973d45cb703d682fe23dde96c66f256ce31220":"2023-11-07T00:25:18.798Z","0.0.0-experimental.7ec817719c13b9bd44985548b0256a8725554aec":"2023-11-07T10:17:53.104Z","0.0.0-next.22ffc8b6b74f91fbde5c273d7075ac5b44bbee12":"2023-11-08T00:21:42.680Z","0.0.0-experimental.0ca0dff7b4c58b5c34b58c7f7965b13f8f3a2bbf":"2023-11-08T13:29:23.270Z","0.0.0-experimental.4d6006fb2eb2004c967c98603c8ca57e59ed7ef1":"2023-11-08T14:22:11.179Z","0.0.0-experimental.f413c089167fb3a7629b7b91cf3206dab81bcdce":"2023-11-08T14:49:53.651Z","4.15.2":"2023-11-08T15:29:37.966Z","0.0.0-next.5c5ae949bfec6a57131caacae14a36e8c1465080":"2023-11-09T00:22:06.573Z","0.0.0-next.d999ad0b00ff427885462051cdc96626b7946472":"2023-11-10T00:25:58.574Z","0.0.0-experimental.e8b0ff5fe299b24567f51c4c8f17f5aa8bc9fb15":"2023-11-10T10:38:07.330Z","4.15.3-alpha.0":"2023-11-11T10:07:37.289Z","4.15.3-alpha.1":"2023-11-11T10:32:14.309Z","4.15.3-alpha.2":"2023-11-11T10:40:37.065Z","4.15.3-alpha.3":"2023-11-11T10:48:21.466Z","4.15.3":"2023-11-11T11:12:44.955Z","4.15.4":"2023-11-11T11:20:01.552Z","4.15.5-alpha.0":"2023-11-13T17:24:34.991Z","0.0.0-experimental.af5a6e37b234eafddc8829a9adbf27da30fa551c":"2023-11-13T19:00:54.261Z","0.0.0-next.175b72af9d270bf8f683fb6f0bb826885ed33ee0":"2023-11-14T00:22:56.786Z","0.0.0-experimental.e52ced96a510dcff85d35ad0cf7ac04f15ee2484":"2023-11-14T12:51:25.335Z","4.15.5-alpha.1":"2023-11-14T13:57:56.632Z","4.15.5-alpha.2":"2023-11-14T16:26:30.944Z","0.0.0-experimental.229cd8b2045b3fbbbdc9d81b42f8298d7ef01582":"2023-11-14T20:58:40.101Z","0.0.0-next.8ec354cd1dac7ebd1e675a82238d1538ac678f52":"2023-11-15T00:23:20.564Z","0.0.0-experimental.df227dfdad0b0fe14fbbedb06a92fc3dcba103e0":"2023-11-15T08:52:20.419Z","0.0.0-experimental.b18de920e1888b39364512c5ed7d03cefc236971":"2023-11-15T09:34:43.364Z","0.0.0-experimental.e6fa2c2d961f6ad9b8634cc7d11f55013981e8a0":"2023-11-15T11:06:06.007Z","0.0.0-experimental.70cc85706c9f5d5fb91aa258438a10cbc0a2acaf":"2023-11-15T11:37:47.984Z","4.15.5-alpha.3":"2023-11-15T13:39:35.421Z","4.15.5-alpha.4":"2023-11-15T15:39:44.704Z","0.0.0-next.5157894bd50e9803e452b5636d7688f7f3375722":"2023-11-16T00:23:23.115Z","0.0.0-next.728d614ca4116060132514ba8c504a2d136c3c4c":"2023-11-17T00:23:23.945Z","0.0.0-experimental.a30568e92be13a6f2611ccd2a82f0d0dce154156":"2023-11-17T14:23:27.472Z","0.0.0-next.695d94a247a70cc02478c3341dc54d8860d950bb":"2023-11-18T00:23:26.851Z","0.0.0-next.a1c8cbb8a8e03dae8cfd464ff586b8bd49e342fc":"2023-11-21T00:24:25.944Z","4.15.5-alpha.5":"2023-11-21T19:37:38.853Z","0.0.0-next.8811cfafd27e6318bde3951dadbe45dfe1acbce3":"2023-11-24T00:23:31.188Z","0.0.0-next.b1a2b217c4a200e24ce2bea926ce2cf9bdaa880b":"2023-11-25T00:23:13.218Z","4.15.5-alpha.6":"2023-11-27T09:18:50.165Z","0.0.0-next.c9130a2ea39288aa524421ae5a00aa87b76bc097":"2023-11-28T00:24:09.385Z","0.0.0-experimental.6dbac0c205b0f8495781db5706c18cac1a62e62b":"2023-11-28T15:00:47.938Z","0.0.0-next.76a7b8a5b5d8aa928d6af17cc77135e0d11dfc09":"2023-11-29T00:23:59.744Z","0.0.0-experimental.9e5de363e3dc4849e916bb42aef8a0fddce70127":"2023-11-29T13:18:55.613Z","4.15.5":"2023-11-29T15:45:29.335Z","0.0.0-next.2611986c0db117aec91dfc12a07f7b24775b609b":"2023-11-30T00:24:01.841Z","0.0.0-next.3301d58a39e2554dbcd016c398aaa62609fe3173":"2023-12-01T00:26:00.252Z","0.0.0-next.865fdcc5d94352d43f1d1cb7634d0556de79a7e5":"2023-12-02T00:23:00.598Z","0.0.0-experimental.acc32eedfcbe3d2fc571a726d3205fadf00ca5c4":"2023-12-04T17:59:29.526Z","0.0.0-experimental.1337050b5f44165b965996c0ffc1372cae2c77f5":"2023-12-06T19:29:06.451Z","0.0.0-experimental.e9c8c97196ede5f344f1b92e43eb52c88c0c2b55":"2023-12-08T10:28:49.007Z","0.0.0-experimental.24e6b11e8e7573960aa757a0d1b4eadb39d60fa6":"2023-12-08T14:54:15.854Z","0.0.0-experimental.af0176cf2e8b90e8550f1099a5ad7509a737dd1d":"2023-12-08T16:13:28.607Z","0.0.0-experimental.16a54daf6a3e687d54fda4065a349f30931498f4":"2023-12-18T17:01:48.815Z","0.0.0-experimental.b80973cf243bf8bae143be1230d8d463545204e5":"2023-12-19T13:27:40.817Z","0.0.0-experimental.e28520c3d3ad22e806666fb4e3cc049c1d14345e":"2023-12-19T14:30:11.410Z","0.0.0-experimental.b4f86edda4fd754f265cfdfa74fa1e23ffc2d970":"2023-12-19T16:21:35.471Z","0.0.0-next.bdcd983c3daea42b321cb4535ac7d9fce93b32cb":"2023-12-20T00:20:28.331Z","0.0.0-experimental.4473dccab539275f7b8d04c8e45d41e92a5ceb86":"2023-12-20T08:53:57.914Z","4.16.0":"2023-12-20T14:55:10.004Z","0.0.0-experimental.8a2684845cc94b5c8a7a440047a7cf416dcc799c":"2023-12-21T13:17:05.475Z","4.16.1":"2023-12-21T14:26:25.972Z","4.16.2":"2023-12-21T14:55:23.536Z","0.0.0-experimental.900f6992da839ba1aa22c8383e4586a2c72b72c3":"2024-01-02T07:59:04.780Z","0.0.0-experimental.551df7a4853baa4a8982ba2db7e61f973a6cb302":"2024-01-02T13:58:40.514Z","0.0.0-experimental.876a032c480f51563719c2fe8e4739ba9981f1e4":"2024-01-02T17:29:23.570Z","0.0.0-next.22f3123e946861ca798a41335ec80df6e68352e2":"2024-01-03T00:23:25.482Z","0.0.0-experimental.06f8ccf3e5180799f3674e001e1a5507ba1a2141":"2024-01-03T11:31:06.481Z","0.0.0-experimental.dc0644f58f68688716958be1623823bde2e615b2":"2024-01-03T11:59:10.149Z","0.0.0-experimental.ee7ce0c5504288647d1def0760e416edde96a4b5":"2024-01-03T12:32:31.369Z","0.0.0-experimental.81d72dd33765b4aa300a092f80857287eababa0a":"2024-01-03T13:21:57.969Z","0.0.0-experimental.68e91e14ec0acd8a8dd9d5bc02f8106c6aee6599":"2024-01-03T14:28:27.655Z","0.0.0-experimental.950b677f6614f483cde77801d941607d6847a6e3":"2024-01-03T21:16:37.434Z","0.0.0-next.762abbf7f8a8cae3cda9b6affcea50be8abc3ce9":"2024-01-04T00:23:59.742Z","0.0.0-experimental.29255bc953ad5e2ca1458e157bdf55819b15696f":"2024-01-04T19:46:44.583Z","0.0.0-experimental.25d2a8ffa1cd9448f1a610f54e5aa9cc6800d8a1":"2024-01-05T15:36:31.040Z","0.0.0-experimental.f7b9b47085e387e97f990d8695971b51d7f7149a":"2024-01-10T13:24:49.064Z","4.17.0":"2024-01-10T13:48:16.670Z","0.0.0-next.09b9d36b22a205d90c9303f2e37134938cf76c90":"2024-01-11T00:23:51.608Z","0.0.0-experimental.5e40ce9194648ea13fe5221e82e4b94cc565671b":"2024-01-11T12:50:45.464Z","0.0.0-experimental.e1ef6c82f357520e2653764729cb9db745fee1bb":"2024-01-11T13:02:44.199Z","0.0.0-next.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":"2024-01-12T00:23:54.424Z","0.0.0-experimental.e1ede8c55a0e1e22ce20137bf238fc374bd5dd51":"2024-01-12T09:06:25.928Z","4.18.0":"2024-01-12T09:59:12.756Z","4.18.1-beta.0":"2024-01-12T10:43:56.063Z","4.18.1-experimental.0":"2024-01-12T11:07:43.646Z","4.18.1-beta.1":"2024-01-12T11:16:27.055Z","0.0.0-experimental.71336319ddb3a47af8fe3d923cd3f16b50e2bc4f":"2024-01-12T14:38:21.706Z","0.0.0-next.37dd1e3ff22e1635b69683abadd444912ae0dbff":"2024-01-13T00:23:29.903Z","0.0.0-next.2b10ca9b97a5854909ba0a8d1d5b00f73cae58fa":"2024-01-16T00:23:42.153Z","0.0.0-experimental.687ad7e959d10f5a592bf06e35f86bb6d6e61051":"2024-01-16T09:56:13.175Z","4.17.1":"2024-01-16T10:50:55.958Z","0.0.0-next.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":"2024-01-17T00:24:01.799Z","0.0.0-experimental.334c95408abdd9ecc0ece0e8c0fd5eb0024ad027":"2024-01-17T09:46:51.390Z","0.0.0-experimental.b5b7b8260a4549f3bd7443fbd68be5ccc9857cd7":"2024-01-17T11:04:48.853Z","0.0.0-experimental.ee4d311a5e6a131fad03cf07e4696f49fdd9c2e6":"2024-01-17T17:25:07.567Z","0.0.0-next.56199ab7a5f3320e0debcbe4a24fe0b8cd599e21":"2024-01-18T00:23:39.955Z","0.0.0-next.34a17e37276130e110099cd4bab2376d323ee689":"2024-01-19T00:23:57.695Z","0.0.0-experimental.3c527bc5bd8ee4363868445061894bf79a47a4d9":"2024-01-19T14:32:18.402Z","0.0.0-experimental.fb8e9fec2e10d6b55e3aee59c4eb76bb7a11432a":"2024-01-19T16:51:30.334Z","0.0.0-next.27295f2164080cc40056b9f415cca323cfef6164":"2024-01-20T00:23:15.152Z","0.0.0-next.1168c576ca50587b1a4377082ee09d2375410204":"2024-01-23T00:24:43.391Z","0.0.0-experimental.ec073775440bb4757efb5a5d846535ae950fe4a6":"2024-01-24T14:38:17.001Z","4.19.0":"2024-01-24T15:00:46.855Z","0.0.0-next.6a58621932ad3d83bf9d6928c1871e7906adcd59":"2024-01-25T00:23:57.458Z","0.0.0-experimental.8c0ce630983672c5ddb15e4a853fabb826def95e":"2024-01-26T10:39:03.003Z","0.0.0-next.6d59515520a3850456f256fb0e4c54b75054ddf4":"2024-01-27T00:22:02.930Z","0.0.0-next.3844395bef7efa05c25c6d4337306935905bc653":"2024-01-30T00:22:17.296Z","0.0.0-experimental.cae3a5a17d131a6f59673b62d01cfac869ea9cc2":"2024-01-30T14:51:19.180Z","0.0.0-next.0a7843dbfbff3628c1a547e687ca05eefe4ae611":"2024-01-31T00:22:52.781Z","0.0.0-experimental.3844395bef7efa05c25c6d4337306935905bc653":"2024-01-31T13:20:27.906Z","4.19.1":"2024-01-31T13:43:44.630Z","0.0.0-next.c5f067b5650921187770124e9b6c8186e805e242":"2024-02-01T00:23:28.159Z","0.0.0-next.504ae21185714e6995d2bdd6458efe2e20371a84":"2024-02-02T00:22:21.934Z","0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c9166e":"2024-02-02T13:10:38.084Z","0.0.0-experimental.3f7b2587c5e3d548262671895cf11d8bf8c":"2024-02-02T13:34:56.622Z","0.0.0-next.44f19b3d2f81d983c343a219aa2781ee0deecb5f":"2024-02-03T00:22:48.801Z","0.0.0-next.287aae0bb4a682fba312332372895dbf8e032bf1":"2024-02-06T00:22:25.314Z","0.0.0-next.6d384ed205b7f0792d9bea79195f01b30463cfa0":"2024-02-07T00:21:43.092Z","0.0.0-experimental.519fbba45412bad5469a604191f80f57bbdb896f":"2024-02-07T14:55:26.690Z","4.20.0":"2024-02-07T16:13:26.203Z","0.0.0-next.60335b11eca9587b558035fe9ecca90e05db036b":"2024-02-08T00:22:23.686Z","0.0.0-next.677a639124e715b4bd6bb862d1ef6536358bed8b":"2024-02-09T00:22:27.721Z","0.0.0-next.90a86f595c31de9a89f4255318bfb0cccb30ceed":"2024-02-10T00:22:07.238Z","0.0.0-experimental.8f1f62600f67917861bf1748cf7f3138e781b5c0":"2024-02-12T15:33:31.537Z","0.0.0-next.aa7c7ec6724534e157d8a23fe85ee8318dabbf37":"2024-02-13T00:23:18.931Z","0.0.0-next.95a939e004e74915357523e3adb118a31fef57ed":"2024-02-14T00:22:33.555Z","0.0.0-experimental.73f815eb1f316f56cecc0cb70e627d00826fee02":"2024-02-14T13:49:07.335Z","4.20.1":"2024-02-14T15:14:03.586Z","0.0.0-next.d470b4f75cf00f24f440b80300f1c833c322b871":"2024-02-15T00:22:34.381Z","0.0.0-next.7abe81e395faf152048bfba0b088b9062e8ac602":"2024-02-17T00:22:44.158Z","0.0.0-experimental.7abe81e395faf152048bfba0b088b9062e8ac602":"2024-02-19T17:17:57.757Z","0.0.0-next.615ae85762cbae9fc80af36685075ef25abd1c88":"2024-02-20T00:22:21.902Z","0.0.0-next.4af8963f6880c5fb9fae32ecd580f5cd33eaddda":"2024-02-21T00:22:34.823Z","4.20.2":"2024-02-21T13:40:55.267Z","0.0.0-next.2a816cdadd2ece37767550b2a249c03ef2b53aeb":"2024-02-22T00:22:35.158Z","0.0.0-experimental.90ca9123352ed07e0a9cedaf4bcad1475e74137f":"2024-02-22T14:39:33.929Z","0.0.0-experimental.22e8a4f31c0b65da00cc6c524a94de53fabc7a28":"2024-02-22T17:16:41.465Z","0.0.0-next.898f8ae81b2cb3f89bd012e9db20a2d9b78a48d2":"2024-02-23T00:22:13.584Z","0.0.0-experimental.07894142a4fa4572706811ebadeb70a4204404fa":"2024-02-23T09:21:03.132Z","0.0.0-experimental.85e5d16fda545271971a6b64da8d6e89435777cc":"2024-02-23T11:58:08.689Z","0.0.0-next.f8af92b375dc730ba47ed2117f25df893aae696c":"2024-02-24T00:21:23.520Z","0.0.0-experimental.d4cb32ce579e12a4436d68036f2327132fba1309":"2024-02-26T13:02:58.182Z","0.0.0-experimental.a9e9dcd32607b6734b6de5aff3903288e03c9bfa":"2024-02-27T10:08:58.969Z","0.0.0-next.4efa407e7fb70117eaf6eac9ed93e2e4cc0cbda5":"2024-02-28T00:21:55.760Z","0.0.0-experimental.91a9cca81e831eaf3f22c00362cf672fa0820287":"2024-02-28T14:21:14.274Z","4.20.3":"2024-02-28T14:35:07.832Z","0.0.0-next.b6d552f6e63dec5627cb8611ab2adcb8244359be":"2024-02-29T00:22:37.254Z","0.0.0-experimental.8294852592c0a1fb061c5d3576327fa0e80bab5b":"2024-02-29T11:02:52.130Z","0.0.0-experimental.a407f3bc8fb79a53cf7975140864526b6ddbac4b":"2024-02-29T15:57:51.699Z","0.0.0-next.d10040847b91742ccb8083938399b63ffa289c7a":"2024-03-01T00:24:57.629Z","0.0.0-next.73143c28059b343ba62d98c29672ab114562fbbc":"2024-03-02T00:21:27.944Z","0.0.0-experimental.651a6b8ded3c452fedf2a8598f08c51c214e6cf7":"2024-03-04T08:56:24.133Z","0.0.0-next.20c4c0d0016306a8264891064bd3f51f7dc58640":"2024-03-05T00:22:30.785Z","0.0.0-experimental.20c4c0d0016306a8264891064bd3f51f7dc58640":"2024-03-05T08:41:44.318Z","0.0.0-next.583e758623dc82206a4b2758d01dd5948b6e3f6a":"2024-03-06T00:23:03.510Z","0.0.0-experimental.2363945b79274c79e6505e5a6c3cdec876ed8cec":"2024-03-06T11:13:30.570Z","4.20.4":"2024-03-06T15:33:02.746Z","0.0.0-next.e09d30edcbd16960a838997778a31d50e9c60bc4":"2024-03-07T00:19:06.665Z","0.0.0-next.836f74517f9a428a4798ed889c3f05057ec6beb1":"2024-03-08T00:23:08.963Z","0.0.0-next.a9d79bec775daaf0da4e506b2aebafdb4ca95b06":"2024-03-09T00:22:06.052Z","0.0.0-experimental.a9d79bec775daaf0da4e506b2aebafdb4ca95b06":"2024-03-11T17:37:21.471Z","0.0.0-experimental.d8a676a242377cee820b59b21a05d47290d9ac73":"2024-03-12T16:10:28.893Z","0.0.0-experimental.020096d91bef5bab5a6c32b4216da5aeb9383d33":"2024-03-12T18:27:30.311Z","0.0.0-experimental.45c1b845d32b56e7c14f4155ec0d4a2d2774c77e":"2024-03-13T10:12:15.454Z","0.0.0-experimental.171e4d8ec72685e5302378f337dc9073c35a9100":"2024-03-13T10:47:36.216Z","0.0.0-experimental.fc1ac2acd58c8a5a858679956b6d102ac5ee4011":"2024-03-13T13:14:21.108Z","0.0.0-experimental.19b15f2f555510eb5507d89fcaf5efa172002608":"2024-03-13T14:10:43.636Z","4.20.5":"2024-03-13T14:49:35.480Z","0.0.0-experimental.5cd7dce98d735598fb562c63edc42358c4c330cd":"2024-03-13T16:05:10.351Z","0.0.0-next.78ea7925e0dad75936ae2e937a041a0666e3d65a":"2024-03-14T00:22:10.617Z","0.0.0-next.e6eaa3d0563c85f80fd88b258df70a55c057096e":"2024-03-15T00:22:25.666Z","0.0.0-experimental.e3e48deb89bd0a1b6cc69b698696566fa7854a95":"2024-03-15T15:27:47.688Z","0.0.0-next.3cc05002fb92029975799c3113971bb5b5198d7c":"2024-03-16T00:21:43.083Z","0.0.0-experimental.235f232c2d3f5110341c4933bf23785a81913797":"2024-03-18T08:54:31.895Z","0.0.0-experimental.94632b9dc1ff6c9600db6db51cd6dd2d693f5204":"2024-03-18T13:33:45.524Z","0.0.0-next.fc231041206e6f3999b094160cfa05db2892ad54":"2024-03-19T00:22:46.636Z","5.0.0-alpha.0":"2024-03-19T09:18:32.591Z","5.0.0-alpha.1":"2024-03-19T22:01:50.937Z","5.0.0-alpha.2":"2024-03-19T22:18:26.914Z","0.0.0-next.0a8a7f1e0ee2fb410eeffb9eb1943d28f1f24705":"2024-03-20T00:22:22.048Z","4.21.0":"2024-03-20T13:20:00.989Z","5.0.0-alpha.3":"2024-03-20T14:10:00.610Z","5.0.0-alpha.4":"2024-03-20T14:46:29.898Z","5.0.0-alpha.5":"2024-03-20T14:56:33.763Z","5.0.0-beta.0":"2024-03-20T15:01:19.909Z","0.0.0-next.d0bd7aa4c25bfb448b93a62f3d47db9b6fdd8ee3":"2024-03-21T00:23:18.030Z","0.0.0-experimental.80cf2c74a2003f3c0602abc81888dd9f36dc68a3":"2024-03-22T14:54:30.823Z","0.0.0-next.10659c5ef9d5cf87c701241a11dd3b56f13eee47":"2024-03-23T00:22:12.009Z","0.0.0-experimental.4d5be2432507390acb482033a6149fd53c4256a1":"2024-03-25T16:30:04.534Z","0.0.0-experimental.e5740babedd53cf5b6af99d74920b6b9ef1e4c11":"2024-03-25T20:40:17.850Z","0.0.0-next.1e46ca925484dd19eea4cd25f16982eb69881043":"2024-03-26T00:22:11.835Z","0.0.0-experimental.343968041bed1eb9d230115e687e9397b0f5fd50":"2024-03-26T12:49:16.325Z","0.0.0-experimental.69488bcd961d679d6ddfce3b00db926e3e5c713f":"2024-03-26T12:53:17.692Z","0.0.0-experimental.1e46ca925484dd19eea4cd25f16982eb69881043":"2024-03-26T13:20:01.659Z","0.0.0-experimental.9034cc03ac5cf73cd9dcb2ff7c6cadece3f6910d":"2024-03-26T16:39:32.921Z","0.0.0-experimental.e47108ccbbc4ad1bfaf4526fa6b70d6ace1ca7a9":"2024-03-26T17:03:38.105Z","0.0.0-experimental.0e9a694e4be3c4d8b80c4658a4b47b8f763d0f6f":"2024-03-26T18:05:06.675Z","0.0.0-experimental.88ca4d55bff422eaab16b97b94cb88244832ef39":"2024-03-26T19:02:21.857Z","0.0.0-next.9bff6e6b8e2a2c7445d3650f1b3459f1b0366db8":"2024-03-27T00:22:15.138Z","0.0.0-experimental.d362bf200f5f9359a4bbd4a549603de5ee1f04ca":"2024-03-27T08:54:01.915Z","5.0.0-alpha.6":"2024-03-27T13:18:47.136Z","5.0.0-alpha.7":"2024-03-27T14:27:41.885Z","5.0.0-alpha.8":"2024-03-27T14:48:47.456Z","5.0.0-beta.1":"2024-03-27T14:57:28.684Z","4.21.1":"2024-03-27T15:55:08.386Z","0.0.0-next.734763e5757af27ff96ad1c9662161f3f677052a":"2024-03-28T00:22:59.304Z","0.0.0-experimental.7750bb478faed47193fe79e2640d3070a9770767":"2024-03-28T11:00:00.594Z","0.0.0-experimental.bb0b6c425a787a0a8268bb133787d71713c56944":"2024-03-28T13:20:16.939Z","0.0.0-next.a3e29269a0d0a4388674efc37e9383c621bfac87":"2024-03-29T00:22:44.972Z","0.0.0-experimental.763b4cd672b7eb9e5a057dd0537984c91287348a":"2024-03-29T14:41:23.891Z","0.0.0-next.48f5eeadaf32e2ccfff33983c0e295f613c4b951":"2024-03-30T00:21:59.046Z","0.0.0-experimental.cf82c830d8a75c9f35466f4c6010fb588d34063f":"2024-04-02T09:36:12.462Z","0.0.0-next.1fac05ede6645d8475a5a883b851405e0e5aef2c":"2024-04-03T00:22:42.498Z","4.22.0":"2024-04-03T13:06:42.220Z","5.0.0-beta.2":"2024-04-03T15:32:23.723Z","0.0.0-next.488120b06b467623f033f6175193eed2ec912bfd":"2024-04-04T00:23:18.877Z","0.0.0-experimental.c5354c231bf2abb4fe353d2ab7812bced4a1c6fa":"2024-04-04T17:21:21.031Z","0.0.0-experimental.3fe3bbfca24dc91ac0c0d4936249cfcb04f716e3":"2024-04-04T20:30:25.901Z","0.0.0-next.5ab818b8ee36a4f090027477a602736c6adbd1a4":"2024-04-05T00:23:04.512Z","4.22.1":"2024-04-05T06:22:22.006Z","0.0.0-experimental.00cd76085e4bb6c15688e9671f74f517f25926c1":"2024-04-05T21:30:09.287Z","0.0.0-experimental.d5b46d578a5c055b8dcc66939e1b5d540976fafb":"2024-04-05T21:46:22.352Z","0.0.0-next.68c52dc267ceb9c5b8183117142351a1b09176c5":"2024-04-06T00:22:15.523Z","0.0.0-experimental.68c52dc267ceb9c5b8183117142351a1b09176c5":"2024-04-08T15:31:30.759Z","0.0.0-experimental.850e0a5a71775222c7a1c8be01d4a08e7975bf91":"2024-04-08T17:36:56.943Z","0.0.0-next.4dbfc9c0220552ce3e3997bf993b0978b0e60331":"2024-04-09T00:23:25.635Z","0.0.0-experimental.4dbfc9c0220552ce3e3997bf993b0978b0e60331":"2024-04-09T07:18:12.981Z","0.0.0-experimental.278810435898f00fdb278784c5f1d43653954bf9":"2024-04-09T09:29:20.764Z","0.0.0-experimental.1663bb2dfe3d9f660316a41d3134bc03f5ef7272":"2024-04-09T10:47:20.386Z","0.0.0-experimental.bcfd4881e086b8126222bb894121c61ff9a1fc82":"2024-04-09T17:19:56.443Z","0.0.0-experimental.a4a921252e487a82f800a25fa12ef1f7b902a836":"2024-04-09T20:49:03.688Z","0.0.0-next.cb00a1799402728de4ecec6d52a815e33fcedaf3":"2024-04-10T00:22:40.088Z","0.0.0-experimental.c9e20202255c314da117dcb3776215e94f886632":"2024-04-10T11:59:13.916Z","0.0.0-experimental.51df0913748e7fceb29f84feb18877a76aa1a4c0":"2024-04-10T13:13:27.654Z","0.0.0-experimental.04af9d2a22e296c7a8c164f72df6ee0648d42452":"2024-04-10T13:25:54.622Z","4.23.0":"2024-04-10T14:42:14.909Z","0.0.0-experimental.2c80ee5ab80bf1f731f6dffb09eb10b7ce76a000":"2024-04-10T16:00:00.590Z","0.0.0-experimental.fea7af0bd6b406e4648e4c6669829249f73eb60f":"2024-04-10T16:05:08.326Z","0.0.0-experimental.d00dc50c81bce037c4321a90cc2f790eb3c51acb":"2024-04-10T16:06:28.371Z","0.0.0-experimental.ff9fa9d232d9f3748bebc8185e276f8409c07ed4":"2024-04-10T16:39:14.860Z","5.0.0-beta.3":"2024-04-10T17:11:50.895Z","0.0.0-experimental.8eb29ac7ea9fec54363dab89723e6c99691b5f6a":"2024-04-10T17:53:33.375Z","0.0.0-experimental.1041bfa1f0e2bb0513842ae9b42023d69596d463":"2024-04-10T18:06:17.791Z","0.0.0-next.cfecf3ad808761571ce11e528113e5c1ea5f87fd":"2024-04-11T00:23:38.197Z","0.0.0-experimental.a6060b60559b7e4e36fe81fe1ff8936b53a3808e":"2024-04-11T09:43:52.772Z","0.0.0-experimental.3f7595ce0400b451ca4947408046e7b9b9cd4885":"2024-04-11T12:28:22.409Z","5.0.0":"2024-04-11T13:33:39.375Z","0.0.0-next.463b44b9754d32cf12e41a60339263470c70a892":"2024-04-12T00:22:36.991Z","0.0.0-experimental.74c69aeafc770d59d5b3d5d37cd249934ef395ba":"2024-04-15T08:29:16.774Z","5.0.1-alpha.0":"2024-05-20T12:36:52.959Z","5.0.1-alpha.1":"2024-05-20T13:18:00.718Z"},"maintainers":[{"email":"ben.irvin@gmail.com","name":"baronvoninternet"},{"email":"remi@hey.com","name":"remidej"},{"email":"Joshua.ellis18@gmail.com","name":"tdfka_rick"},{"email":"marc.roig.campos@strapi.io","name":"marc-roig-strapi"},{"email":"jim.laurie.thieurmel@gmail.com","name":"lauriejim"},{"email":"pierre.burgy@gmail.com","name":"pierreburgy"},{"email":"aurelsicoko@gmail.com","name":"aurelsicoko"},{"email":"bodin.alex@gmail.com","name":"alexandrebodin"},{"email":"jean-sebastien.herbaux@hotmail.fr","name":"convly"}],"author":{"url":"https://strapi.io","name":"Strapi Solutions SAS","email":"hi@strapi.io"},"repository":{"url":"git+https://github.com/strapi/pack-up.git","type":"git"},"keywords":["strapi","package","cjs","esm","bundling","build","interoperable","tools"],"license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/strapi/pack-up#readme","bugs":{"url":"https://github.com/strapi/pack-up/issues"},"readme":"","readmeFilename":""}